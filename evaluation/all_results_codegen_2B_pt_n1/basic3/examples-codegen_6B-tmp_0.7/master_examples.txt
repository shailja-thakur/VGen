example-0: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (posedge clk or negedge rst) begin
  if (rst == 1) begin
    pos = 0;
  end
  else begin
    if (sel) begin
      pos = pos | in[2];
    end else begin
      pos = pos & in[2];
    end
  end
end

// Module for inverting the input
module inverter(
input [1:0] in,
output reg [1:0] out);
// When sel=1, assign b to out
always @ (posedge clk or negedge rst) begin
  if (rst == 1) begin
    out = 0;
  end
  else begin
    if (sel) begin
      out = ~in;
    end else begin
      out = in;
    end
  end
end

// Module for
================================================================
example-1: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or posedge rst)
  begin
    if (sel)
      pos = 1;
    else
      pos = 0;
  end

================================================================
example-2: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or posedge reset)
begin
  if (sel) begin
    out <= in;
  end
end

================================================================
example-3: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk)
begin
	if(sel)
	begin
		pos = in;
	end
end

================================================================
example-4: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (posedge clk or negedge rst) begin
    if(rst) begin
        pos <= 0;
    end else begin
        case(sel)
            if(in[0]) begin
                if(in[1]) begin
                    if(in[2]) pos <= 1;
                    else pos <= 0;
                end else begin
                    if(in[1]) begin
                        if(in[2]) pos <= 2;
                        else pos <= 0;
                    end else pos <= 0;
                end
            end else begin
                if(in[1]) begin
                    if(in[2]) pos <= 3;
                    else pos <= 0;
                end else begin
                    if(in[2]) pos <= 4;
                    else pos <= 0;
                end
            end
        end
    end
end

// There are eight priority enc
================================================================
example-5: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk) 
  priority_encoder.sel <= (in[0] & in[1] & in[2]);
// Read priority encoder and assign output to port.
reg [1:0] pos;
always @(posedge clk) 
  begin
    pos <= priority_encoder.sel;
  end

================================================================
example-6: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or negedge rst) {
  if(rst) {
    pos = 0;
  } else {
    pos <= in;
  }
}


================================================================
example-7: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk)
  begin
    if (sel) begin
      pos <= in;
    end
  end

================================================================
example-8: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk)
  if (sel)
  {
    pos = in;
  }
  else
  {
    pos = 0;
  }

================================================================
example-9: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or negedge rst)
begin
	if(rst)
	begin
		pos <= 0;
	end
	else if(in[2] == 1)
	begin
		pos <= in[1];
	end
	else if(in[2] == 0)
	begin
		pos <= 0;
	end
end

================================================================
example-10: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or posedge rst)
begin
  if (sel)
  begin
    if (r_sel)
    begin
      if (neg_in)
      begin
        if (r_pos)
        begin
          pos <= 0;
        end
      end
    end
  end
end

module priority_encoder_test( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or posedge rst)
begin
  if (sel)
  begin
    if (r_sel)
    begin
      if (neg_in)
      begin
        if (r_pos)
        begin
          pos <= 0;
        end
      end
    end
  end
end


================================================================
example-11: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (posedge clk or negedge rst)
  if(rst == 1)
    pos <= 0;
  else if(sel == 1)
    pos <= in;
  else
    pos <= in + 2;

================================================================
example-12: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or not in) 
if(sel) 
{
  reg[pos] = b;
}

================================================================
example-13: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or posedge rst)
  if ( rst )
  {
    pos = 0;
  }
  else if ( in[2] && in[1] )
  {
    pos = 2;
  }
  else if ( in[0] )
  {
    pos = 1;
  }
  else
  {
    pos = 0;
  }

================================================================
example-14: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or negedge rst)
if (sel && !rst)
{
    pos <= (in & 0b11);
}

================================================================
example-15: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (posedge clk or negedge rst)
if(sel)
{
   priority_encoder(in) = b;
}
else
{
   priority_encoder(in) = 0;
}
`

================================================================
example-16: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always@(posedge clk_enable) begin
  if(sel) begin 
    pos <= in;
  end else begin
    pos <= 0;
  end
end

================================================================
example-17: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk)
if (sel)
  pos = b;
endalways

always @(posedge clk)
if (sel)
  b = in;
endalways

================================================================
example-18: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or negedge rst)
  if (rst)
  begin
    pos <= 0;
  end
  else if(sel)
   begin
     prio_out <= in;
   end
  else 
   begin
     if (in[0] == 1)
       prio_out <= 1;
     else if (in[1] == 1)
       prio_out <= 2;
     else
       prio_out <= 0;
   end;

================================================================
example-19: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or posedge rst)
begin
  case(in)
    when 0,1 | sel,
      pos <= 0;
    else (reg[1] = reg[0] || (sel && !pos));
  endcase
end

================================================================
