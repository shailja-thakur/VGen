example-0: 
// This is an FSM 
module abro(
input clk,
input reset,
input a,
input b,
output z 
);
parameter IDLE = 0, SA = 1, SB = 2, SAB = 3;
reg [1:0] cur_state,next_state;
// Update state or reset on every clock edge.
// Output z is asserted 1 when the current state is SAB.
// Nest state generation logic:
// if input a and b both are high, state changes to SAB. 
// if input a or b is high only, select which input goes to SAB.
always @(posedge clk) begin
if (reset) begin
cur_state <= IDLE;
next_state <= IDLE;
z <= 1'b0;
end else begin
cur_state <= next_state;
case (next_state)
IDLE:
if(a&&b) begin
z <= 1'b1;
next_state <= SA;
end else if (a||b) begin
z <= 1'b1;
next_state <= SB;
end else
z <= 1'b0;
SA: begin
if(~a&&~b) begin
z <= 1'b0;
next_state <= SAB;
end else if(~b||a) begin //(~b||a)
z <= 1'b0;
next_
================================================================
