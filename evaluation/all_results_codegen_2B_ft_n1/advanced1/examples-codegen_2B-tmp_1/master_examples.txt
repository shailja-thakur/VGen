example-0: 
// Design a signed adder that adds two 8-bit 2's complement numbers, a[7:0] and b[7:0]. 

module signed_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

// The numbers a and b are added to the output s. 
// assign the occurence of the signed overflow of a and b to the output overflow.
// a signed overflow occurs if the most significant bits of a and b are low and the most significant bit of s is high
// a signed overflow may also occur if the most significant bits of a and b are high and the most significant bit of s is low


wire [7:0] fs [8:0];

assign fs[0] = a & b ;
assign fs[1] = {1'b0, a[7:1]} + {1'b0, b[7:1]};
assign fs[2] = {a[7], a[7:0]} + {b[7], b[7:0]};

assign overflow = 
	(fs[2][7] == 0) && (fs[1][7] == 0) && (fs[0][9:1] == 9'd10000000);

always @ (*) 
	case (s[7:0])
	8'h00 : s = a ;
	8'h01 : s = b + a;
	8'h02 : s = {1'b0, a[7:0]}
================================================================
