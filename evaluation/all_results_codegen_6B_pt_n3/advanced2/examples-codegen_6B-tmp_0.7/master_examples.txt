example-0: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
always(clk)
begin
    if reset <= 1'b0 then q <= 3'b000;
    else if slowena <= 1'b0 then q <= q + 1;
    else q <= q + 1'b1;
end

// On the negative edge of the clock:
// if slowena is high, reset the output q to zero. 
// Otherwise, only decrement the output q if q is not 0.
always(clk)
begin
    if slowena <= 1'b0 then q <= 3'b000;
    else if q <= 3'b001 then q <= q - 1;
    else q <= q - 1'b1;
end


================================================================
example-1: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
always @(posedge clk)
begin
	if (reset)
	begin
		q <= 0;
	end
	else if (slowena)
	begin
		if (q < 9)
			q <= q + 1;
	end
end

// On the negative edge of the clock:
// if reset is high, reset the output q to 9. 
// Otherwise, only decrement the output q if the ena input is high and q is not 0.
always @(negedge clk)
begin
	if (reset)
	begin
		q <= 9;
	end
	else if (slowena)
	begin
		if (q > 0)
			q <= q - 1;
	end
end


================================================================
example-2: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
always clk = ~slowena;
always clk = ~reset;
always clk = ~q;
always clk = ~reg;
always clk = clk ^ reg;


================================================================
