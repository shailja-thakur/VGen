// left shift and rotate operation
module left_rotate(clk,reset,amount,data,load,out);
input clk,reset;
input [2:0] amount;
input [7:0] data;
input load;
output reg [7:0] out;
// when load is high, load data to out
// left shift and rotate the register out by amount bits
{
  "choices": [
    {
      "finish_reason": "length",
      "index": 0,
      "logprobs": null,
      "text": "always @(posedge clk, posedge reset)\nbegin\n\tif(reset)\n\tbegin\n\t// reset\n\tout <= 0;\n\tend\n\telse if(load)\n\tbegin\n\tout <= data;\n\tend\n\telse\n\tbegin\n\tcase(amount)\n\t// amount = 0\n\t3'b000:\n\tbegin\n\tout[7:0] <= out[0:7];\n\tend\n\t// amount = 1\n\t3'b001:\n\tbegin\n\tout[7:0] <= {out[6:0],out[7]};\n\tend\n\t// amount = 2\n\t3'b010:\n\tbegin\n\tout[7:0] <= {out[5:0],out[7:1]};\n\tend\n\t// amount = 3\n\t3'b011:\n\tbegin\n"
    }
  ],
  "created": 1663333364,
  "id": "cmpl-GMlFX0gBurQiTWFUKWGiULhhXQxZe",
  "model": "codegen",
  "object": "text_completion",
  "usage": {
    "completion_tokens": 200,
    "prompt_tokens": 89,
    "total_tokens": 289
  }
}