example-0: 
// Design a signed adder that adds two 8-bit 2's complement numbers, a[7:0] and b[7:0]. 

module signed_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

// The numbers a and b are added to the output s. 
// assign the occurence of the signed overflow of a and b to the output overflow.
// a signed overflow occurs if the most significant bits of a and b are low and the most significant bit of s is high
// a signed overflow may also occur if the most significant bits of a and b are high and the most significant bit of s is low


module t_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

module input_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
);

function local_adder();

function output_adder();

function flag_adder();

function sum_adder(a, b);

module bit_adder(input [7:0] a,
    input [7:0] b,
    output overflow
);

module flag_adder(input [7:0] a,
    input [7:0] b,
    output overflow,
    output logic_carry
);

module sum_adder(input [7:0] a,
    
================================================================
example-1: 
// Design a signed adder that adds two 8-bit 2's complement numbers, a[7:0] and b[7:0]. 

module signed_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

// The numbers a and b are added to the output s. 
// assign the occurence of the signed overflow of a and b to the output overflow.
// a signed overflow occurs if the most significant bits of a and b are low and the most significant bit of s is high
// a signed overflow may also occur if the most significant bits of a and b are high and the most significant bit of s is low

		 assign s = a + b;
		 @(posedge clk or (!clkb and a[0])) begin
			 s <= a + b;
		 end
// Autonomous peripheral `
testbench with
	generate signed_adder(999, 777, int(s(7-1)), int(overflow(0))))
	end
--end--
]

================================================================
example-2: 
// Design a signed adder that adds two 8-bit 2's complement numbers, a[7:0] and b[7:0]. 

module signed_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

// The numbers a and b are added to the output s. 
// assign the occurence of the signed overflow of a and b to the output overflow.
// a signed overflow occurs if the most significant bits of a and b are low and the most significant bit of s is high
// a signed overflow may also occur if the most significant bits of a and b are high and the most significant bit of s is low

	
================================================================
