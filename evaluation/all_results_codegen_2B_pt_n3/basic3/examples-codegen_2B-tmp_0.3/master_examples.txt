example-0: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge in)
begin
  pos[1] = in[0];
  pos[0] = in[1];
  if (pos[0] == 0 && pos[1] == 0)
    pos[1] = 1;
  else if (pos[0] == 0 && pos[1] == 1)
    pos[1] = 0;
  else if (pos[0] == 1 && pos[1] == 1)
    pos[0] = 0;
  else if (pos[0] == 1 && pos[1] == 0)
    pos[0] = 1;
  else if (pos[0] == 0 && pos[1] == 1)
    pos[0] = 1;
  else if (pos[0] == 1 && pos[1] == 0)
    pos[0] = 0;
  
================================================================
example-1: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[0] << 1) | in[1];
// When sel=0, assign b to out
assign pos = (in[0] << 2) | in[1];
// When sel=1, assign b to out
assign pos = (in[0] << 3) | in[1];
// When sel=0, assign b to out
assign pos = (in[0] << 4) | in[1];
// When sel=1, assign b to out
assign pos = (in[0] << 5) | in[1];
// When sel=0, assign b to out
assign pos = (in[0] << 6) | in[1];
// When sel=1, assign b to out
assign pos = (in[0] << 7) | in[1];
// When
================================================================
example-2: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge in)
begin
    if (in[1] == 1)
        pos[1] = 1;
    else
        pos[1] = 0;
    if (in[0] == 1)
        pos[0] = 1;
    else
        pos[0] = 0;
end
);

// This is a 4-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [4:0] in,
output reg [3:0] pos ); 
// When sel=1, assign b to out
always @(posedge in)
begin
    if (in[3] == 1)
        pos[3] = 1;
    else
        pos[3] = 0;
    if (in[2] == 1)
        pos[
================================================================
