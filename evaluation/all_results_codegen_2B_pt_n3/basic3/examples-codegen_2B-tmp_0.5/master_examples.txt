example-0: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos[1] = in[2];
// When sel=2, assign b to out
assign pos[0] = ~in[2] & ~in[1];
// When sel=3, assign b to out
assign pos[0] = ~in[1] & ~in[0];
// When sel=4, assign b to out
assign pos[0] = ~in[0]; 
// When sel=5, assign b to out
assign pos[0] = in[0];
// When sel=6, assign b to out
assign pos[0] = ~in[0]; 
// When sel=7, assign b to out
assign pos[0] = in[1]; 
// When sel=8, assign b to out
assign pos[0] = ~in[1]; 
================================================================
example-1: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge in)
begin
    if (in[0] == 1)
        pos = pos + 1;
    else if (in[1] == 1)
        pos = pos + 2;
    else if (in[2] == 1)
        pos = pos + 4;
    else
        pos = pos + 8;
end

================================================================
example-2: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out

// This is a 4-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [3:0] in,
output reg [3:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out

// This is a 5-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [4:0] in,
output reg [4:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out

// This is a 6-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder(
================================================================
