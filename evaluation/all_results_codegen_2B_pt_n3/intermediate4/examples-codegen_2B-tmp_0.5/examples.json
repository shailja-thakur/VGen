// Design a Moore state machine with two states 0 and 1, one input in, and one output out. Reset state is 0.
module simple_fsm(clk, reset, in, out);
input clk;
input reset;
input in;
output out;
wire out;
reg present_state, next_state;
// In state 0, if in=1, stay in state 0. In state 0, if in=0, go to state 1
// In state 1, if in=1, stay in state 1. In state 1, if in=0, go to state 0
// out=1 in state 0 and out=0 in state 1
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\nalways @(posedge clk)\n{\n  present_state = next_state;\n  next_state = ~in;\n  if (reset == 1)\n  {\n    next_state = 0;\n  }\n  out = next_state;\n}\n\nalways @(posedge clk)\n{\n  if (reset == 1)\n  {\n    next_state = 0;\n    out = 1;\n  }\n}\n\nalways @(posedge clk)\n{\n  if (reset == 1)\n  {\n    next_state = 1;\n    out = 0;\n  }\n}\n"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "always @(posedge clk)\n    case(reset):\n        if (reset) {\n            next_state = 0;\n            out = 1;\n        } else {\n            out = 0;\n        }\n        present_state = next_state;\n        break;\n    case(in):\n        if (in) {\n            if (present_state == 0) {\n                next_state = 1;\n            } else {\n                next_state = 0;\n            }\n        } else {\n            if (present_state == 1) {\n                next_state = 0;\n            } else {\n                next_state = 1;\n            }\n        }\n        out = next_state;\n        break;\n"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "always @(posedge clk)\n    if ((present_state == 0) && (in == 1)) {\n        out = 1;\n        next_state = 1;\n    } else if ((present_state == 1) && (in == 0)) {\n        out = 0;\n        next_state = 0;\n    } else {\n        out = 0;\n        next_state = 0;\n    }\n    present_state = next_state;\n"
    }
  ],
  "created": 1663536926,
  "id": "cmpl-xhrKQNPsw1yb0igeZ2SlePHffy719",
  "model": "codegen",
  "object": "text_completion",
  "usage": {
    "completion_tokens": 424,
    "prompt_tokens": 148,
    "total_tokens": 572
  }
}