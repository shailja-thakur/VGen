// left shift and rotate operation
module left_rotate(clk,reset,amount,data,load,out);
input clk,reset;
input [2:0] amount;
input [7:0] data;
input load;
output reg [7:0] out;
// when load is high, load data to out
// left shift and rotate the register out by amount bits
{
  "choices": [
    {
      "finish_reason": "length",
      "index": 0,
      "logprobs": null,
      "text": "always @ ( posedge clk or reset )\nbegin\nif(reset)\n out <= 8'b0;\nelse if(load)\n out <= data;\nelse\n begin\ncase(amount)\n3'b000: out = out;\n3'b001: out = {out[6:0],out[7]};\n3'b010: out = {out[5:0],out[7:6]};\n3'b011: out = {out[4:0],out[7:5]};\n3'b100: out = {out[3:0],out[7:4]};\n3'b101: out = {out[2:0],out[7:3]};\n3'b110: out = {out[1:0],out[7:2]};\n3'b111: out = {out[0],out["
    }
  ],
  "created": 1663333369,
  "id": "cmpl-XGIjakJ0xMqHez4Ov30KuN4eycWyw",
  "model": "codegen",
  "object": "text_completion",
  "usage": {
    "completion_tokens": 200,
    "prompt_tokens": 89,
    "total_tokens": 289
  }
}