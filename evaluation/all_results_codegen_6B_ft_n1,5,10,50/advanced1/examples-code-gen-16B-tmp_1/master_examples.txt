example-0: 
// Design a signed adder that adds two 8-bit 2's complement numbers, a[7:0] and b[7:0]. 

module signed_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

// The numbers a and b are added to the output s. 
// assign the occurence of the signed overflow of a and b to the output overflow.
// a signed overflow occurs if the most significant bits of a and b are low and the most significant bit of s is high
// a signed overflow may also occur if the most significant bits of a and b are high and the most significant bit of s is low


always @(*)
begin
	// conditions where case 3 and case 4 are triggered
	if (a[7]==b[7] && a[7]!=s[7]) begin
	// if a and b have opposite signs, it means the overflow was a negative number.
	// hence, we have to use the 2's complement of the overflow.
	// otherwise, we use the same number
assign overflow = (~a[7] & b[7]) ? (~a+b) + 1'b1 : a+b;
assign s[7] = (a[7])? overflow[7] : overflow[6];
assign s[6:0] = overflow[5:0]; 

end


	// conditions where case 0 or case 1 are triggered
	else if(a[7]!=b[7] && a[7]==s
================================================================
