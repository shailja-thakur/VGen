example-0: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// This is a full adder. A full adder adds four bits and produces a sum and carry-out.
module full_adder( 
input a, b,
output cout, sum );

// This is a half subtractor. A half subtractor subtracts two bits and produces a difference and carry-out.
module half_subtractor( 
input a, b,
output cout, diff );

// This is a full subtractor. A full subtractor subtracts four bits and produces a difference and carry-out.
module full_subtractor( 
input a, b,
output cout, diff );

// This is a half multiplier. A half multiplier multiplies two bits and produces a product and carry-out.
module half_multiplier( 
input a, b,
output cout, prod );

// This is a full multiplier. A full multiplier multiplies
================================================================
example-1: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// This is a full adder. A full adder adds four bits and produces a sum and carry-out.
module full_adder( 
input a, b,
output cout, sum );

// This is a half subtractor. A half subtractor subtracts two bits and produces a difference and carry-out.
module half_subtractor( 
input a, b,
output cout, diff );

// This is a full subtractor. A full subtractor subtracts four bits and produces a difference and carry-out.
module full_subtractor( 
input a, b,
output cout, diff );

// This is a full multiplier. A full multiplier multiplies four bits and produces a product and carry-out.
module full_multiplier( 
input a, b,
output cout, product );

// This is a half multiplier. A half multiplier multiplies
================================================================
example-2: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// This is the carry-in register.
reg carry_in;

// This is the output register.
reg sum;

// This is the carry-out register.
reg carry_out;

// This is the input register.
reg a_input, b_input;

// This is the output register.
reg cout_output;

// This is the carry-in register.
reg carry_in_output;

// This is the carry-out register.
reg carry_out_output;

// This is the input register.
reg a_input_output, b_input_output;

// This is the output register.
reg cout_output_output;

// This is the carry-in register.
reg carry_in_output_output;

// This is the carry-out register.
reg carry_out_output_output
================================================================
example-3: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

wire a_in, b_in, sum_out, carry_out;

assign a_in = a;
assign b_in = b;

wire sum_out_in;
assign sum_out_in = sum_out;

wire carry_out_in;
assign carry_out_in = carry_out;

half_adder( a_in, b_in, cout, sum_out_in, carry_out_in );


================================================================
example-4: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

void half_adder( 
input a, b,
output cout, sum );

void half_adder( 
input a, b,
output cout, sum ) {
    bool carry = false;
    bool sum = false;
    
    if (a == 1) {
        sum = true;
    }
    
    if (b == 1) {
        sum = true;
    }
    
    if (a == 0 && b == 0) {
        sum = false;
    }
    
    if (sum == true) {
        cout = 1;
    } else {
        cout = 0;
    }
}

================================================================
