// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "always @( in or sel ) \n\tif (sel) \n \tbegin \n\tif (in==3'b110) \n \tpos=2'd0; \n \telse if (in==3'b100)\n \tpos=2'd1; \n \telse if (in==3'b110 || in==3'b100)\n \tpos=2'd2;\n \telse \n \tpos=2'd3; \t\n \tend \t\n \t\n"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "// Othewise return pos=0\nassign out = (sel) ? b : pos;\n \nalways @(*) \nc1: pos[0] = (~in[2]) | (~in[1]); \nc2: pos[0] = (~in[1]) | in[2]; \nc3: pos[0] = in[1];\n \nc4: pos[0] = in[2]; \n \n"
    },
    {
      "finish_reason": "length",
      "index": 2,
      "logprobs": null,
      "text": "wire [1:0] a, b;\n\nassign a[0] = in[1];\nassign a[1] = in[2];\nassign b[0] = ~in[1];\nassign b[1] = ~in[2];\n\nalways @(*) \n\tbegin \n\tif(in[1:0]==2'b00) \n\tpos=2'b00; \n\telse if(in[1:0]==2'b01) \n\tpos=2'b01; \n\telse if(in[1:0]==2'b10) \n\tpos=2'b10; \n\telse if(in[1:0]==2'b11) \n\tpos=2'b11; \n\telse \n\tpos=2'bx; \n\tend"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "always @( in ) \ncase( in ) \n 3'b000: pos = 2'b00; \n 3'b001: pos = 2'b01; \n 3'b010: pos = 2'b10; \n 3'b011: pos = 2'b11; \nendcase \n"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "always @( ) \ncase (in) \n0 : pos = 0 ; 1,2,3 ; \n4 : pos = 1 ; \n5 : pos = 2 ; \n6 : pos = 2 ; \n7 : pos = 3 ; \nendcase\nelse /*sel=0*/ pos = 2 ; \n"
    }
  ],
  "created": 1663306795,
  "id": "cmpl-AQVi0GFdHHquhNDPdNuWQzxvg6yiB",
  "model": "codegen",
  "object": "text_completion",
  "usage": {
    "completion_tokens": 577,
    "prompt_tokens": 65,
    "total_tokens": 642
  }
}