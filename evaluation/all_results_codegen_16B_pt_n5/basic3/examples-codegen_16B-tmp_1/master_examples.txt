example-0: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
reg [1:0] out = 1'b0;
always @(posedge $phy_clk) begin
  if ( in[0]) begin
    out[1] = 1'b1;
  end
  else begin
    if (  in[1]) begin
      out[0] = 1'b1;
    end else begin
      out[0] = 1'b0;
    end
  end
end

================================================================
example-1: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign c to out
// When sel=X, assign in[X] to out
priority_encoder( in, out ) = {
        pos <= in << 0 @ [1],
        sle,
        pos <= in << 1 @ [1],
        sgt,
        pos <= in << 2 @ [1],
        sle,
        pos <= in << 3 @ [1],
        slt,
        pos <= in << 4 @ [1],
        sle,
        pos <= in << 5 @ [1],
        sext
}}

table tbl(
input #{var in}
('s', 1), #{A*},
('f', 2), #{A*},
('b', 4), #{A*}
)
)
""")

    sim=Sim(Root, tboa, entity_list
================================================================
example-2: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or posedge zero) begin
  if (sel) pos <= 1'b1;
  else     pos <= 0; 
end

================================================================
example-3: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
//When sel=0 and in=b, assign e to out.
always @ (posedge clk) begin
if ( in[pos[1]] && (~in[pos[0] ])) begin
pos[0] <= alter(~sel); // decrease priority of b
pos[1] <= sel;
end else  if ( in[pos[1]] && (~in[pos[0]]))
  pos[1] <= ~pos[0];
end else if ( in[pos[0]] || in[pos[1]] )
  pos[0] <= ~pos[0];
end 
end module;



================================================================
example-4: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
               // When sel=0, assign a to out
module mux #(
      parameter SEL = 0,
      parameter a = 0,
      parameter b = 1) (
inputs [3:0] sel, 
inputs from_in,
inputs from_sel,
inputs p,
inputs v,
output reg [1:0] out,
output a,
output b
);

// These are instantiations of priority counters, where "timer_x" is the "x" component
// of outputs [1:0]pos, and the select ports are separable from the counter outputs.
module timer_x_from_sel( 
input [3:0] sel, 
input [7:0] p,
input [7:0] v,
// tells the counter which port to read input from (current or carry
================================================================
