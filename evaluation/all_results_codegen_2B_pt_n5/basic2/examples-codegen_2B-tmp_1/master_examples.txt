example-0: 
// Design a module that implements an AND gate

module and_gate( 
    input a, 
    input b, 
    output out );

    // assing the AND of a and b to out



// Initialization Code form ShifterImp 
shifterTask(
    .a( pin_Parameters[A_INPUT] ), 
    .b( pin_Parameters[B_INPUT] ), 
    .out( clock_Parameters[OUT] ) 
); 


out_gate(
    .a(             pin_Parameters[P_A_INPUT]   ), 
    .b(             pin_Parameters[P_B_INPUT]   ), 
    .out( cell_Parameters[OUT] )
); 


areaController(
   .input( pin_Parameters[L_INPUT] ), 
   .run( @task ) 
); 






================================================================
example-1: 
// Design a module that implements an AND gate

module and_gate( 
    input a, 
    input b, 
    output out );

    // assing the AND of a and b to out

out = a and c( b );



public boolean and( boolean a, }
public @noinline @nooob boolean and( boolean a, }

}

================================================================
example-2: 
// Design a module that implements an AND gate

module and_gate( 
    input a, 
    input b, 
    output out );

    // assing the AND of a and b to out
wrapper( 
    and_gate( 
        input a, 
        input b, 
        output out ) ) ~= 
    function = process(); // when done it should invoke process.

================================================================
example-3: 
// Design a module that implements an AND gate

module and_gate( 
    input a, 
    input b, 
    output out );

    // assing the AND of a and b to out
    void and_then(
        random_comb overwrite, out &out);

    // do something that mixes a and b
    void and_driver(
        random_comb overwrite,
        random_seed_generator random);


    // and_driver(b);
    // and_driver(a);

================================================================
example-4: 
// Design a module that implements an AND gate

module and_gate( 
    input a, 
    input b, 
    output out );

    // assing the AND of a and b to out
    assign and( a,b,out );

//------------------------------------------------------------------------------

int main() {
  // create the module

  const int n_segments = 2;

  and_gate  a((in_var(0),in_var(1)));
  out_var o;
  std::cout << "The AND gate " << sizeof(a) << "bytes" << std::endl;
  
  a(o) = 1;
  a(o);
  a(o);
  std::cout << "output\t" << o << std::endl;

  return 0;
}  // end of main


================================================================
