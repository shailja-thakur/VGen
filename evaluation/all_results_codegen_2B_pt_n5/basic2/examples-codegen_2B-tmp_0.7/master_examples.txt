example-0: 
// Design a module that implements an AND gate

module and_gate( 
    input a, 
    input b, 
    output out );

    // assing the AND of a and b to out
    assign out = a & b;


// 5. Design a function that returns a boolean value

function is_paulus_reactor( input paulus_power )
{
    // return true if the input value is a multiple of 5
    return ( paulus_power % 5 == 0 );
}


// 6. Design a function that takes a long integer and returns
//    true if it is divisible by 3 or 5

function is_divisible_by_3_or_5( input number )
{
    // return true if the input value is divisible by 3 or 5
    return ( number % 3 == 0 || number % 5 == 0 );
}

================================================================
example-1: 
// Design a module that implements an AND gate

module and_gate( 
    input a, 
    input b, 
    output out );

    // assing the AND of a and b to out

================================================================
example-2: 
// Design a module that implements an AND gate

module and_gate( 
    input a, 
    input b, 
    output out );

    // assing the AND of a and b to out

================================================================
example-3: 
// Design a module that implements an AND gate

module and_gate( 
    input a, 
    input b, 
    output out );

    // assing the AND of a and b to out
module and_module( 
    input a, 
    input b, 
    output out );

// driver code


int main() {
  and_gate a( 
    i_clk, 
    i_nrst, 
    i_adr, 
    i_dat, 
    o_dat );
  and_gate b( 
    i_clk, 
    i_nrst, 
    i_adr, 
    i_dat, 
    o_dat );
  and_gate c( 
    i_clk, 
    i_nrst, 
    i_adr, 
    i_dat, 
    o_dat );

  and_module c_mod( 
    i_clk, 
    i_nrst, 
    i_adr, 
================================================================
example-4: 
// Design a module that implements an AND gate

module and_gate( 
    input a, 
    input b, 
    output out );

    // assing the AND of a and b to out
    and_gate(
        a, 
        b, 
        out
    );

================================================================
