example-0: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 

void main() 
{ 
  counter clk_1, clk_2, clk_3, clk_4, clk_5, clk_6, clk_7, clk_8, clk_9, clk_10, clk_11, clk_12; 
  counter reset_1, reset_2, reset_3, reset_4, reset_5, reset_6, reset_7, reset_8, reset_9, reset_10, reset_11, reset_12; 
  counter q_1, q_2, q_3, q_4, q_5, q_6, q_7, q_8, q_9, q_10, q_11, q_12; 
  counter q_13, q_14, q_15, q_16, q_17, q
================================================================
example-1: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
initial begin
    q = 1;
    clk = reset;
    while(1) begin
        if (clk == 0)
            q = 1;
        else if (q == 12)
            q = 1;
        else
            q = q + 1;
    end
end

// This is a counter that counts from 1 to 12
// The counter is initialized to 0, which means that the counter 
// starts at the beginning of the counter.
module counter2( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
initial begin
    q = 1;
    clk = reset;

================================================================
example-2: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
initial begin
    q <= 1;
    if (reset) begin
        q <= 12;
    end else begin
        if (clk) begin
            q <= (not clk) and q' = q + 1;
        end else begin
            q <= q' = q + 1;
        end
    end
end

================================================================
example-3: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
initial begin
    q <= 1;
    if (reset == 1) begin
        q <= 12;
    end else begin
        if (q[3] == 12) begin
            q <= 1;
        end else begin
            q <= q[3] + 1;
        end
    end
end
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
initial begin
    q <= 1;
    if (reset == 1) begin
        q <= 12;
    end else begin
        if (q[3] == 12) begin

================================================================
example-4: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
initial begin
    counter.q <= 1;
    if (reset == 1'b1) begin
        counter.q <= 12;
    end
    if (clk == 1'b1) begin
        counter.q <= (counter.q + 1) & 0b11111111;
    end
end

================================================================
