example-0: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
begin 
pos[1:0] = ~in[1:0] & in[0:2];
end

================================================================
example-1: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
wire [3:0] b, 
        bit;

always @(posedge in)
  if (pos[pos<0:2]) 
   pos[pos<0:2] = in[pos<0:2]|pos[pos<0:2];

always @(posedge in)
  if (not pos[pos<0:2])
   pos[pos<0:2] = pos[pos<0:2]|in[pos<0:2];

always @(posedge in)
  if (not pos[pos<0:2])
   pos[pos<0:2] = pos[pos<0:2]|in[pos<0:2];

always @(posedge in)
  if ((in[2] and in[3]) or (in[2] and in[3]) and (in[
================================================================
example-2: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
reg [3:0] b;
// When sel=0, assign b to out
reg [3:0] pos;

void main()
{   
    // When the two input bits are high, set pos to 0x1.
    if ( ( in[0] | in[1] ) == 0x3 ) {
        pos = 0b1;
    }
    // When the two input bits are low, set pos to 0x0.
    else {
        pos = 0b0;
    }
    // If the two input bits are high, assign b to 1.
    if ( ( in[0] | in[1] ) == 0x3 ) {
        b = 1;
    }
    // If the two input bits are low, assign b to 0.
    else {
        b = 0;
    }
    // Output the
================================================================
example-3: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = in[1];

always @(*)
begin
pos_w = pos & 3;
end

================================================================
example-4: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk) 
  begin
    out <= (
      (in[0] == 0) ? 0b0000 :
      (in[0] == 1) ? 0b0001 :
      (in[0] == 2) ? 0b0010 :
      (in[0] == 3) ? 0b0011 :
      (in[0] == 4) ? 0b0100 :
      (in[0] == 5) ? 0b0101 :
      (in[0] == 6) ? 0b0110 :
      (in[0] == 7) ? 0b0111 :
      (in[0] == 8) ? 0b1000 :
      (in[0] == 9) ? 0b1001 :
      (in[0] == 10) ? 0b1010 :
      (in[0] == 11) ? 0b
================================================================
