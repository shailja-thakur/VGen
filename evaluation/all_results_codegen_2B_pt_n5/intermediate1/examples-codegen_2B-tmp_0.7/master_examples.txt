example-0: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// The normal half adder adds two bits and produces a sum.
module normal_adder(
input a, b,
output cout, sum );

// This is a subtracter. A subtracter subtracts two bits and produces a sum and carry-out.
module subtracter( 
input a, b,
output cout, sum );

// The normal subtracter subtracts two bits and produces a sum.
module normal_subtractor(
input a, b,
output cout, sum );

// The normal multiplyer adds two bits and produces a sum and carry-out.
module normal_multiplier( 
input a, b,
output cout, sum );

// This is a multiplyer. A multiplyer multiplies two bits and produces a sum.
module multiplier( 
input a, b,
output cout, sum );

// This is a divider.
================================================================
example-1: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

input run;

#include <adder_half.v>

#include <adder_sum_carry.v>

#include <adder_sum_carry_1st.v>

#include <adder_sum_carry_2nd.v>

#include <adder_sum_carry_3rd.v>

#include <adder_sum_carry_4th.v>

#include <adder_sum_carry_5th.v>

#include <adder_sum_carry_6th.v>

#include <adder_sum_carry_7th.v>

#include <adder_sum_carry_8th.v>

#include <adder_sum_carry_9th.v>

#include <adder_sum_carry_10th.v>

#include <adder_sum_carry_
================================================================
example-2: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

`

//-----------------------------------------------------------------------------

#define NUM_INPUTS 3

void
assign_inputs( 
half_adder *self,
unsigned inputs[] ) {

  // The inputs are the inputs to the half-adder.
  self->a = inputs[0];
  self->b = inputs[1];
  self->cout = inputs[2];
}

//-----------------------------------------------------------------------------

void
check_outputs( 
half_adder *self ) {

  // The outputs are the outputs to the half-adder.
  check_output( self->c, self->cout, 2, "cout" );
}

//-----------------------------------------------------------------------------

void
check_output( 
unsigned output,
unsigned output_expected,
unsigned n,
const char *name ) {

  if ( output != output_expected ) {
    printf(
================================================================
example-3: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

input adder_in[2];

input a, b;
output cout, sum;

input adder_in[2] = { a, b };

input add_in[2] = { a, b };

input add_out[2] = { cout, sum };

input add_is[2] = { add_in[0], add_in[1] };

input carry_out[1] = { sum };

input carry_is[1] = { carry_out[0] };

module m_adder(
input adder_in[2],
output add_out[2],
output carry_out[1] );

module m_adder_add(
input adder_in[2],
input add_is[2],
output add_out[2] );

module m_adder_carry
================================================================
example-4: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

void half_adder_user_fun( 
input a, b, output cout,
output sum )
{
  do
  {
    sum += (a & 0x1) + (b & 0x1);
    sum += (a & 0x2) + (b & 0x2);
    sum += (a & 0x4) + (b & 0x4);
    sum += (a & 0x8) + (b & 0x8);
    sum += (a & 0x10) + (b & 0x10);
    sum += (a & 0x20) + (b & 0x20);
    sum += (a & 0x40) + (b & 0x40);
    sum += (a & 0x80) + (b & 0x80);
    a >>= 1;
    b >>= 1;

================================================================
