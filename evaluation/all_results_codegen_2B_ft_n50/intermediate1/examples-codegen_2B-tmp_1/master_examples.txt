example-0: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
begin
assign sum = a ^ b;
assign cout = a&b;
end

================================================================
example-1: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

assign {cout, sum} = a+b;


================================================================
example-2: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

wire w1;

xor( sum, a, b); 
and( w1, a, b);
or( cout, w1, a );


================================================================
example-3: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
wire mid;
xor(sum, a, b);
and(mid, a, b);
or(cout, mid, a);

================================================================
example-4: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
wire w1, w2, w3, w4;
xor xorHalf1(a, b, w1);
xor xorHalf2(w1, b, w2);
xor xorHalf3(a, w2, sum);
and andHalf1(w1, w4, w1);
and andHalf2(w2, w5, w2);
or orHalf1(w4, w1, w2, w3);
or orHalf2(w5, a, b, w4);
xor xorHalf4(w3, b, w6);
xor xorHalf3(w6, b, cout);

================================================================
example-5: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
assign sum = a^b;
assign cout = a&b;

================================================================
example-6: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

assign sum = a ^ b;
assign cout = (a&b) | (a&c) | (b&c);

================================================================
example-7: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
assign sum=a^b;
assign cout=a&b;

================================================================
example-8: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
xor( sum, a, b );
and( cout, a, b );

================================================================
example-9: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
// The carry and sum are just wires placed here
// to transmit the respective half-add operation.
assign 	sum = a ^ b;
assign 	cout = a&b ;

================================================================
example-10: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum ); 

//sum = a^b = a xor b
assign sum = a ^ b;

//cout = a&b or a||b
assign cout = (a & b) | (a | b);



================================================================
example-11: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
assign sum= a^b;
assign cout= a&b;

================================================================
example-12: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
	xor( sum, a, b );
	and( cout, a, b );

================================================================
example-13: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

assign sum = a^b;
assign cout = a&b;

================================================================
example-14: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
// Add two bit values and give a carry out.
xor(
 ab, a, b
, cout, sum
);



================================================================
example-15: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
	xor(cout, a, b);
	and(sum,a, b);

================================================================
example-16: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
// This is the half adder which takes two 4-bit inputs a, b and produces a 4-bit sum.
// The carry output is a wire called carry.
// Wire w;
wire w0, w1;

// This is the dataflow module instantiating the half adder 1.
// Half adder 1. Here we have non-nested netwires.

// We instantiate two full adders (.
// The first full adder 1. Half adder 1.

// Implement half adder #1. This is our first adder in the sequence.

// final addition operator = +: beta+alpha = increments the or of carry and
// sum. carry also gets the value of carry_out from adder 1.
	or( carry, carry_out, p1_carry_out );
	assign sum = p1_a_w0_sum |
================================================================
example-17: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

assign sum = a^b;
assign cout = a&b;


================================================================
example-18: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
assign sum = a ^ b;
assign cout = a & b;

================================================================
example-19: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
assign	sum = a^b;
assign	cout = a&b;

================================================================
example-20: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

xor( sum, a, b );
and( cin, a, b );
or( cout, cin, a );

================================================================
example-21: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

wire a;
wire b;

 xor(sum, a, b);
 and(cout, a, b);

================================================================
example-22: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

assign sum = a ^ b;
assign cout = (a & b);


================================================================
example-23: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
assign sum = a ^ b;
assign cout = (a^b)&a;


================================================================
example-24: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum ); 
	halfadder M1	(a,b,q,t); 
	assign 	cout = t[0]; 
	assign	sum = q + t[1]; 

================================================================
example-25: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

assign {cout, sum} = a + b;//sum

================================================================
example-26: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
assign sum = a ^ b;
assign cout = (a & b) | (a ^ b);

================================================================
example-27: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
assign sum = a ^ b;
assign cout = a&b;

================================================================
example-28: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

assign sum = a^b;
assign cout = a&b;

================================================================
example-29: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
	wire s, c;
	xor g1(sum, a, b);
	and g2(cout, a, b);
	or g21(c,cout,cout);

================================================================
example-30: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
wire cout0;
wire sum0;
halfADD half_adder_0(a, b, cout0, sum0);
halfADD half_adder_1(cout0, 1'b0, cout, sum);

================================================================
example-31: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
// This is a half subtractor. A Half subtractor subtracts two bits and produces a change and carry-out.
assign sum = a ^ b;
assign cout = a & b;

================================================================
example-32: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

assign sum = a ^ b;
assign cout = a & b;


================================================================
example-33: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum ); //there should be two input and 1 cout
xor( sum, a, b );
and( cout, a, b );

================================================================
example-34: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum ); 
wire c1,c2;
half_adder_pipe
#(.WIDTH(1))
ha1 ((a&b),(c1&c2),sum,cout);

================================================================
example-35: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
	assign sum = a ^ b;
	assign cout = a & b;

================================================================
example-36: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
assign sum = a^b;
assign cout = a&b;

================================================================
example-37: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
xor (sum, a, b);
and(cout,a,b);

================================================================
example-38: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

assign sum = a^b;
assign cout = a&b;

================================================================
example-39: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum ); 

xor(sum, a, b);
and(cout, a, b);

================================================================
example-40: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
wire xor1;
assign xor1 = a^b;
assign sum = xor1^b;
assign cout = a&b;


================================================================
example-41: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
// Full Adder, three inputs and carry out (complement)
assign sum = a ^ b;
assign cout = (a && b) || (a && ~b);

================================================================
example-42: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
 
// a(x,y) + b(x,y)
xor(sum, a, b);
//A xor B carries in the same bit.
and(cout, a, b);


================================================================
example-43: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

assign {cout, sum} = a + b;

================================================================
example-44: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
assign cout = (a ^ b) & ( a & b );
assign sum = a ^ b;

================================================================
example-45: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
assign cout = a&b;
assign sum = a^2;

================================================================
example-46: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
	assign sum = a ^ b;
	assign cout = (a & b) | (a ^ b);

================================================================
example-47: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
assign 	sum = a^b;
assign	cout = ~(a&b);

================================================================
example-48: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// Return the result as two wires
assign {cout, sum} = a + b;

================================================================
example-49: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

assign sum = a^b;
assign cout = a&b;

================================================================
