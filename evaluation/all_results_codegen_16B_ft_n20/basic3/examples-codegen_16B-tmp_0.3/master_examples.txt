example-0: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
	case(in)
	3'b000: pos = 2'b00; 
	3'b001: pos = 2'b01; 
	3'b010: pos = 2'b10; 
	3'b011: pos = 2'b11; 
	3'b100: pos = 2'b00; 
	3'b101: pos = 2'b01; 
	3'b110: pos = 2'b10; 
	3'b111: pos = 2'b11; 
	endcase
end

================================================================
example-1: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ ( in or sel )
begin
	case ( sel )
	1'b0: pos = 2'b00;
	1'b1: pos = in;
	endcase
end

================================================================
example-2: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in)
case (in)
3'b000: pos = 2'b00;
3'b001: pos = 2'b01;
3'b010: pos = 2'b10;
3'b011: pos = 2'b11;
3'b100: pos = 2'b01;
3'b101: pos = 2'b10;
3'b110: pos = 2'b11;
3'b111: pos = 2'b11;
default: pos = 2'b00;
endcase

================================================================
example-3: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
	case(in)
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	3'b100: pos = 2'b01;
	3'b101: pos = 2'b10;
	3'b110: pos = 2'b11;
	3'b111: pos = 2'b11;
	default: pos = 2'b00;
	endcase
end

================================================================
example-4: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or sel)
begin
	case(sel)
	1'b0: pos = 2'b00;
	1'b1: pos = in;
	endcase
end

================================================================
example-5: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or negedge pos)
begin
	if(~pos)
	begin
	case(in)
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	3'b100: pos = 2'b01;
	3'b101: pos = 2'b10;
	3'b110: pos = 2'b11;
	3'b111: pos = 2'b00;
	endcase
	end
	else
	pos=2'b00;
end

================================================================
example-6: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin
case (in)
3'b000: pos = 2'b00;
3'b001: pos = 2'b01;
3'b010: pos = 2'b10;
3'b011: pos = 2'b11;
3'b100: pos = 2'b01;
3'b101: pos = 2'b10;
3'b110: pos = 2'b11;
3'b111: pos = 2'b00;
endcase
end

================================================================
example-7: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or sel)
begin
	case(sel)
	1'b0: pos = 2'b00;
	1'b1: pos = in;
	endcase
end

================================================================
example-8: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin
case (in)
3'b000: pos=2'b00; 
3'b001: pos=2'b01; 
3'b010: pos=2'b10; 
3'b011: pos=2'b11; 
3'b100: pos=2'b00; 
3'b101: pos=2'b01; 
3'b110: pos=2'b10; 
3'b111: pos=2'b11; 
default: pos=2'b00; 
endcase
end

================================================================
example-9: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin
case (in)
3'd0: pos = 2'd0;
3'd1: pos = 2'd1;
3'd2: pos = 2'd2;
3'd3: pos = 2'd3;
3'd4: pos = 2'd4;
3'd5: pos = 2'd5;
3'd6: pos = 2'd6;
3'd7: pos = 2'd7;
default: pos = 2'd0;
endcase
end

================================================================
example-10: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in)
begin
	casex (in)
	3'b000: pos=2'b00;	// Pass SA
	3'b001: pos=2'b01;	// Pass SB
	3'b010: pos=2'b10;	// Pass SC
	3'b011: pos=2'b11;	// Pass SD
	default: pos=2'b00;	// Pass SA
	endcase
end

================================================================
example-11: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
	case(in)
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	3'b100: pos = 2'b01;
	3'b101: pos = 2'b10;
	3'b110: pos = 2'b11;
	3'b111: pos = 2'b11;
	default: pos = 2'b00;
	endcase
end

================================================================
example-12: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or sel)
begin
	if (sel) begin
	case (in)
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	3'b100: pos = 2'b00;
	3'b101: pos = 2'b01;
	3'b110: pos = 2'b10;
	3'b111: pos = 2'b11;
	default: pos = 2'b00;
	endcase
	end
	else pos = 2'b00;
end

================================================================
example-13: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
	case (in)
	3'd0: pos = 2'd0;
	3'd1: pos = 2'd1;
	3'd2: pos = 2'd2;
	3'd3: pos = 2'd3;
	3'd4: pos = 2'd4;
	3'd5: pos = 2'd5;
	3'd6: pos = 2'd6;
	3'd7: pos = 2'd7;
	default: pos = 2'd0;
	endcase
end

================================================================
example-14: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ ( in or sel )
begin
	if ( sel )
	begin
	case ( in )
	// 3-bit number
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	3'b100: pos = 2'b00;
	3'b101: pos = 2'b01;
	3'b110: pos = 2'b10;
	3'b111: pos = 2'b11;
	// default: do nothing
	endcase
	end
	else
	begin
	pos = 2'b00;
	end
end

================================================================
example-15: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or pos)
begin
	case(in)
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	3'b100: pos = 2'b01;
	3'b101: pos = 2'b10;
	3'b110: pos = 2'b11;
	3'b111: pos = 2'b11;
	default: pos = 2'b00;
	endcase
end

================================================================
example-16: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or sel)
begin
	case (sel)
	1'b0: pos = 2'b00;
	1'b1: pos = in;
	endcase
end

================================================================
example-17: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or sel)
begin
	if(sel) begin
	case(in)
	3'd0: pos=2'd0;
	3'd1: pos=2'd1;
	3'd2: pos=2'd2;
	3'd3: pos=2'd3;
	3'd4: pos=2'd4;
	3'd5: pos=2'd5;
	3'd6: pos=2'd6;
	3'd7: pos=2'd7;
	default: pos=2'd0;
	endcase
	end
	else pos=2'd0;
end

================================================================
example-18: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
	case(in)
	3'b000: pos = 2'b00;	// FALLTHRU
	3'b001: pos = 2'b01;	// 
	3'b010: pos = 2'b10;	// 
	3'b011: pos = 2'b11;	// 
	3'b100: pos = 2'b00;	// FALLTHRU
	3'b101: pos = 2'b01;	// 
	3'b110: pos = 2'b10;	// 
	3'b111: pos = 2'b11;	// 
	default: pos = 2'b00;
	endcase
end

================================================================
example-19: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or sel)
begin
	if(sel) begin
	case(in)
	3'b000: pos=2'b00;
	3'b001: pos=2'b01;
	3'b010: pos=2'b10;
	3'b011: pos=2'b11;
	3'b100: pos=2'b00;
	3'b101: pos=2'b01;
	3'b110: pos=2'b10;
	3'b111: pos=2'b11;
	endcase
	end
	else pos=2'b00;
end

================================================================
