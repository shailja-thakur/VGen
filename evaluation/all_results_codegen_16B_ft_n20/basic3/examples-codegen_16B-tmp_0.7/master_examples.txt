example-0: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
	case(in)
	3'b000: pos=2'b00; 
	3'b001: pos=2'b01; 
	3'b010: pos=2'b10; 
	3'b011: pos=2'b11; 
	3'b100: pos=2'b00; 
	3'b101: pos=2'b01; 
	3'b110: pos=2'b10; 
	3'b111: pos=2'b11; 
	endcase

================================================================
example-1: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or pos)
begin
	casex ({in})
	4'b0xxx: pos = 2'b00;	//0
	4'b1000: pos = 2'b01;	//8
	4'b1001: pos = 2'b10;	//9
	4'b1010: pos = 2'b11;	//10
	default: pos = 2'b00;	//0
	endcase
end

================================================================
example-2: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (*)
case (in)
3'b000 : pos = 2'b00;
3'b001 : pos = 2'b01;
3'b010 : pos = 2'b10;
3'b011 : pos = 2'b11;
3'b100 : pos = 2'b01;
3'b101 : pos = 2'b10;
3'b110 : pos = 2'b11;
3'b111 : pos = 2'b11;
default: pos = 2'b00;
endcase

================================================================
example-3: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
	case(in)
	3'd0: pos = 2'b10;
	3'd1: pos = 2'b01;
	3'd2: pos = 2'b01;
	3'd3: pos = 2'b10;
	default: pos = 2'b00;
	endcase
end

================================================================
example-4: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
case(in)
0: pos = 2'b00;
1: pos = 2'b01;
2: pos = 2'b10;
3: pos = 2'b11;
endcase
end

================================================================
example-5: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @( * ) begin
	casex( in ) // casex is case-insensitive
	// all inputs should assign to pos = 0
	4'b0xxx: pos = 2'b00;
	// all inputs should assign to pos = 1
	4'b1000: pos = 2'b01;
	// all inputs should assign to pos = 2
	4'b1001: pos = 2'b10;
	// no inputs should assign to pos = 0
	// no inputs should assign to pos = 1
	// no inputs should assign to pos = 2
	default: pos = 2'b00;
	endcase
end

================================================================
example-6: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin
 case(in)
2'b00:
begin
pos = 2'b00;
end
2'b01:
begin
pos = 2'b01;
end
2'b10:
begin
pos = 2'b10;
end
2'b11:
begin
pos = 2'b11;
end
endcase
end

================================================================
example-7: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always@(in)
	case(in)
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	endcase

================================================================
example-8: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ ( * ) 
case ( in ) 
3'b000: pos=2'b10; 
3'b001: pos=2'b01; 
3'b010: pos=2'b01; 
3'b011: pos=2'b00; 
3'b100: pos=2'b00; 
3'b101: pos=2'b01; 
3'b110: pos=2'b01; 
3'b111: pos=2'b10; 
default: pos=2'b00; 
endcase 
// When sel=0, leave output unchanged

================================================================
example-9: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// Else assign 0 to output
always @ ( in or sel )
begin
	if ( sel == 1'b1 )
	begin
	out[0] = in[1];
	out[1] = in[2];
	out[2] = in[2] & in[1];
	end
	else
	begin 
	out[0]= 1'b0;
	out[1]= 1'b0;
	out[2]= 1'b0;
	end
end 
// This is the decoder. If none of the input bits are high, output is zero. 
// Otherwise the output is the input value.

================================================================
example-10: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ ( in or sel )
begin
	case ( in )
	// Enumerate all cases
	3'b000: pos = 2'b00; 
	3'b001: pos = 2'b01; 
	3'b010: pos = 2'b10; 
	3'b011: pos = 2'b11; 
	// default case does not need to be specified
	endcase
end

================================================================
example-11: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or sel)
begin
	case(sel)
	0: pos = 2'b00;
	1: pos = 2'b01;
	2: pos = 2'b10;
	3: pos = 2'b11;
	endcase
end

================================================================
example-12: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always@(in or pos)
begin
case (in)
3'b000: pos <= 2'b00;
3'b001: pos <= 2'b01;
3'b010: pos <= 2'b10;
3'b011: pos <= 2'b11;
3'b100: pos <= 2'b01;
3'b101: pos <= 2'b10;
3'b110: pos <= 2'b11;
3'b111: pos <= 2'b01;
endcase
end

================================================================
example-13: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ ( in ) 
begin
	casex ( in ) 
	3’b000: pos = 2’b10; 
	3’b001: pos = 2’b01; 
	3’b010: pos = 2’b01; 
	3’b011: pos = 2’b00; 
	3’b100: pos = 2’b00; 
	3’b101: pos = 2’b01; 
	3’b110: pos = 2’b10; 
	3’b111: pos = 2’b00; 
	default: pos = 2’b00; 
	endcase 
end

================================================================
example-14: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ ( in or pos )
begin
	if ( in[2] == 1'b1 || in[1] == 1'b1 || in[0] == 1'b1 ) 
	begin
	pos = 2'b11;
	end
	else
	begin
	pos = 2'b00;
	end
end

================================================================
example-15: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign 0 to out
always @(in)
	begin
	case (in)
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	default: pos = 2'b00;
	endcase
	end

================================================================
example-16: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin
case (in)
3'b000: pos = 2'b00; 
3'b001: pos = 2'b01; 
3'b010: pos = 2'b10; 
3'b011: pos = 2'b11; 
default: pos = 2'b00; 
endcase
end 

================================================================
example-17: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin
if (in[2])
pos = 2'b11;
else if (in[1])
pos = 2'b10;
else if (in[0])
pos = 2'b01;
else
pos = 2'b00;
end

================================================================
example-18: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
	casex (in)
	3'b000: pos = 2'b00; 
	3'b001: pos = 2'b01; 
	3'b010: pos = 2'b10; 
	3'b011: pos = 2'b11; 
	// default: ???
	endcase
end

================================================================
example-19: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or sel) 
begin
	case(sel)
	2'b00: pos = 2'b00;
	2'b01: pos = 2'b01;
	2'b10: pos = 2'b10;
	2'b11: pos = 2'b11;
	endcase
end

================================================================
