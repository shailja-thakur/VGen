// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "always @*\nbegin\n\tcase(in)\n\t3'd0: pos=2'b00; \n\t3'd1: pos=2'b01; \n\t3'd2: pos=2'b10; \n\t3'd3: pos=2'b11; \n\tdefault: pos=2'b00; \n\tendcase\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "always @(*)\nbegin\n\tcase(in)\n\t3'b000: pos = 2'b00; \n\t3'b001: pos = 2'b01; \n\t3'b010: pos = 2'b10; \n\t3'b011: pos = 2'b11;\n\tdefault: pos = 2'b00;\n\tendcase\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "always @ (in or posedge clk)\nbegin\ncase (in)\n3'd0 : pos = 2'd0;\n3'd1 : pos = 2'd0;\n3'd2 : pos = 2'd0;\n3'd3 : pos = 2'd1;\n3'd4 : pos = 2'd1;\n3'd5 : pos = 2'd1;\n3'd6 : pos = 2'd2;\n3'd7 : pos = 2'd2;\n3'd8 : pos = 2'd2;\n3'd9 : pos = 2'd3;\ndefault : pos = 2'd0;\nendcase\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "always @ ( in ) begin\n\tcase ( in )\n\t3'b000: pos = 2'b11;\t// 0\n\t3'b001: pos = 2'b10;\t// 1\n\t3'b010: pos = 2'b01;\t// 2\n\t3'b011: pos = 2'b00;\t// 3\n\tdefault: pos = 2'b00;\t// 0\n\tendcase\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "always @(in or sel)\nbegin\n\tif (sel==1)\n\tbegin\n\tcase (in)\n\t3'b000: pos=2'b00;\n\t3'b001: pos=2'b01;\n\t3'b010: pos=2'b10;\n\t3'b011: pos=2'b11;\n\t3'b100: pos=2'b00;\n\t3'b101: pos=2'b01;\n\t3'b110: pos=2'b10;\n\t3'b111: pos=2'b11;\n\tdefault: pos=2'b00;\n\tendcase\n\tend\n\telse\n\tpos=2'b00;\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "always @ ( * )\nbegin\n\tcase ( in )\n\t3'b000: pos = 2'b00; \n\t3'b001: pos = 2'b01; \n\t3'b010: pos = 2'b10; \n\t3'b011: pos = 2'b11; \n\t3'b100: pos = 2'b11; \n\t3'b101: pos = 2'b10; \n\t3'b110: pos = 2'b01; \n\t3'b111: pos = 2'b00; \n\tendcase\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "always @(in or sel)\nbegin\n\tcase(sel)\n\t1'b0: pos = 2'b00;\n\t1'b1: pos = in;\n\tendcase\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "always @ ( in or sel )\nbegin\n\tcase ( sel )\n\t1'b0: pos = 2'b00;\n\t1'b1: pos = in;\n\tendcase\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 8,
      "logprobs": null,
      "text": "always @(in or sel)\nbegin\n\tcase(sel)\n\t2'b00: pos = 2'b00;\n\t2'b01: pos = 2'b11;\n\t2'b10: pos = 2'b10;\n\t2'b11: pos = 2'b01;\n\tendcase\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 9,
      "logprobs": null,
      "text": "always @(*)\ncase (in)\n3'b000: pos = 2'b00;\n3'b001: pos = 2'b01;\n3'b010: pos = 2'b10;\n3'b011: pos = 2'b11;\n3'b100: pos = 2'b00;\n3'b101: pos = 2'b01;\n3'b110: pos = 2'b10;\n3'b111: pos = 2'b11;\ndefault: pos=0;\nendcase\n"
    },
    {
      "finish_reason": "stop",
      "index": 10,
      "logprobs": null,
      "text": "always @(in or sel)\nbegin\n\tif(sel) begin\n\tcase(in)\n\t// If none of the input bits are high, output is 0\n\t3'b000: pos = 2'b00;\n\t3'b001: pos = 2'b01;\n\t3'b010: pos = 2'b10;\n\t3'b011: pos = 2'b11;\n\t// If one of the input bits is high, assign the corresponding output bit to 1\n\tdefault: pos = 2'b00;\n\tendcase\n\tend\n\t// If sel is not high, output is 0\n\telse pos = 2'b00;\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 11,
      "logprobs": null,
      "text": "always @(in or sel)\nbegin\n\tcasex (in)\n\t3'b000: pos=2'b00; \n\t3'b001: pos=2'b01; \n\t3'b010: pos=2'b10; \n\t3'b011: pos=2'b11; \n\tdefault: pos=2'b00; \n\tendcase\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 12,
      "logprobs": null,
      "text": "always @ ( * )\ncase (in)\n3'b000: pos = 2'b00;\n3'b001: pos = 2'b01;\n3'b010: pos = 2'b10;\n3'b011: pos = 2'b11;\n3'b100: pos = 2'b10;\n3'b101: pos = 2'b11;\n3'b110: pos = 2'b11;\n3'b111: pos = 2'b11;\ndefault: pos = 2'b00; \nendcase\n"
    },
    {
      "finish_reason": "stop",
      "index": 13,
      "logprobs": null,
      "text": "always @( in or sel )\nbegin\n\tcase( sel )\n\t1'b0: pos = 2'b00;\n\t1'b1: pos = in;\n\tendcase\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 14,
      "logprobs": null,
      "text": "// When sel=0, a to out\nalways @(*)\ncase (in)\n3'b000: pos=2'b00;\n3'b001: pos=2'b01;\n3'b010: pos=2'b10;\n3'b011: pos=2'b11;\ndefault: pos=2'b00;\nendcase\n"
    },
    {
      "finish_reason": "length",
      "index": 15,
      "logprobs": null,
      "text": "always @ ( in or sel )\nbegin\n\tif ( sel )\n\tbegin\n\tcase ( in )\n\t// 3'b000\n\t0: pos = 2'b00;\n\t// 3'b001\n\t1: pos = 2'b01;\n\t// 3'b010\n\t2: pos = 2'b10;\n\t// 3'b011\n\t3: pos = 2'b11;\n\t// 3'b100\n\t4: pos = 2'b00;\n\t// 3'b101\n\t5: pos = 2'b01;\n\t// 3'b110\n\t6: pos = 2'b10;\n\t// 3'b111\n\t7: pos = 2'b11;\n\tendcase\n\tend\n\telse\n\t// When sel=0\n\tbegin\n\tpos=2'b00;"
    },
    {
      "finish_reason": "stop",
      "index": 16,
      "logprobs": null,
      "text": "always @(*)\nbegin\ncase (in)\n3'b000: pos=2'b00;\n3'b001: pos=2'b01;\n3'b010: pos=2'b10;\n3'b011: pos=2'b11;\n3'b100: pos=2'b10;\n3'b101: pos=2'b01;\n3'b110: pos=2'b00;\n3'b111: pos=2'b11;\ndefault: pos=2'b00;\nendcase\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 17,
      "logprobs": null,
      "text": "always @ (in or pos)\nbegin\n\tcase (in)\n\t3'b000: pos = 2'b00;\n\t3'b001: pos = 2'b01;\n\t3'b010: pos = 2'b10;\n\t3'b011: pos = 2'b11;\n\t3'b100: pos = 2'b00;\n\t3'b101: pos = 2'b01;\n\t3'b110: pos = 2'b10;\n\t3'b111: pos = 2'b11;\n\tdefault: pos = 2'b00;\n\tendcase\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 18,
      "logprobs": null,
      "text": "always @(*) begin\ncase (in)\n3'b000: pos = 2'b00;\n3'b001: pos = 2'b01;\n3'b010: pos = 2'b10;\n3'b011: pos = 2'b11;\n3'b100: pos = 2'b01;\n3'b101: pos = 2'b10;\n3'b110: pos = 2'b11;\n3'b111: pos = 2'b00;\ndefault: pos = 2'b00;\nendcase\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 19,
      "logprobs": null,
      "text": "always @ (in or posedge pos[1])\nbegin\n\tif (in[2] == 1'b1)\n\tbegin\n\tpos[1] <= 1'b1;\n\tpos[0] <= 1'b0;\n\tend\n\telse if (in[1] == 1'b1)\n\tbegin\n\tpos[1] <= 1'b0;\n\tpos[0] <= 1'b1;\n\tend\n\telse if (in[0] == 1'b1)\n\tbegin\n\tpos[1] <= 1'b0;\n\tpos[0] <= 1'b0;\n\tend\n\telse\n\tbegin\n\tpos[1] <= 1'b0;\n\tpos[0] <= 1'b0;\n\tend\nend\n"
    }
  ],
  "created": 1663334994,
  "id": "cmpl-3kRkTOpo5t72yOULAHuBOv7WIx9cu",
  "model": "codegen",
  "object": "text_completion",
  "usage": {
    "completion_tokens": 2374,
    "prompt_tokens": 65,
    "total_tokens": 2439
  }
}