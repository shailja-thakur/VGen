example-0: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) 
begin 
case(in) // case statements are used to set pos
3'b100: pos = 2'd0; 
3'b110: pos = 2'd0; 
3'b101: pos = 2'd1; 
3'b111: pos = 2'd1; 
//pos = 2'd0; 
//this is the output when sel=1
endcase 
end 

================================================================
example-1: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// Otherwise assign a to out
always @(*)
	case(in) 
	3'b000: pos=2'b00;
	3'b001: pos=2'b01;
	3'b010: pos=2'b10;
	3'b011: pos=2'b11;
	default: pos=2'bxx;
	endcase

================================================================
example-2: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) 
begin 
 if (in[0]|in[1]|in[2]) 
 pos=2'd0; 
 else if (in[3]|in[4]|in[5]) 
 pos=2'd1; 
 else if (in[6]|in[7]|in[8]) 
 pos=2'd2; 
 else 
 pos=2'd3; 
end 

================================================================
example-3: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) 
begin 
	case(in) 
	3'b000: pos=2'b00;
	3'b001: pos=2'b01;
	3'b010: pos=2'b10;
	3'b011: pos=2'b11;
	endcase
end 

================================================================
example-4: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=2, assign c to out
always @(*) 
begin 
case(in) 
3'b000: pos=2'b00; 
3'b001: pos=2'b01; 
3'b010: pos=2'b10; 
3'b011: pos=2'b11; 
default: pos=2'bxx; 
endcase 
end 

================================================================
example-5: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or pos)
case (pos) 
0: if (in) pos=2;
1: if (in) pos=1;
2: if (in) pos=0;
endcase

================================================================
example-6: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) 
begin 
	if(in[2]==1'b1) 
	pos=2'b11; 
	else if(in[1]==1'b1) 
	pos=2'b10; 
	else if(in[0]==1'b1) 
	pos=2'b01; 
	else 
	pos=2'b00; 
end 

================================================================
example-7: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, if none of the input bits are high, output is 000 
always @(*) 
	case(in[2:0]) 
	3'b000: pos=2'b00; 
	3'b001: pos=2'b01; 
	3'b010: pos=2'b10; 
	3'b011: pos=2'b11; 
	endcase

================================================================
example-8: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin 
	casex (in) 
	3'b000: pos=0; 
	3'b001: pos=1; 
	3'b010: pos=2; 
	3'b011: pos=3; 
	3'b100: pos=4; 
	3'b101: pos=5; 
	3'b110: pos=6; 
	3'b111: pos=7; 
	endcase 
end 

================================================================
example-9: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
parameter sel=1;
parameter [1:0] b={b[0],b[0]}; 
always @(*) 
case(sel) 
1: pos=b; 
default: pos={pos[0],pos[0]}; 
endcase 

================================================================
example-10: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) 
	case(in) 
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	endcase

================================================================
example-11: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) 
	begin 
	if(sel[1]) 
	case(in) 
	3'b000: pos = 2'b00; 
	3'b001: pos = 2'b01; 
	3'b010: pos = 2'b10; 
	3'b011: pos = 2'b11; 
	default: pos = 2'bxx; 
	endcase 
	else 
	if(sel[0]) 
	case(in) 
	3'b000: pos = 2'b00; 
	3'b001: pos = 2'b01; 
	3'b010: pos = 2'b10; 
	3'b011: pos = 2'b11; 
	default: pos = 2'bxx; 
	endcase 

================================================================
example-12: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin 
	case(in)
	3'b100: pos=2'b00;
	3'b110: pos=2'b01;
	3'b101: pos=2'b10;
	3'b011: pos=2'b11;
	default: pos=2'bxx;
	endcase
end

================================================================
example-13: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) 
	begin	 
	case( in ) 
	3'b000: pos = 0; 
	3'b001: pos = 0; 
	3'b010: pos = 1; 
	3'b011: pos = 1; 
	3'b100: pos = 2; 
	3'b101: pos = 2; 
	3'b110: pos = 2; 
	3'b111: pos = 2; 
	//default: pos = 0; 
	endcase
	end 

================================================================
example-14: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out

always @(*) 
if(sel[0]==0) then 
	if(sel[1]==0) then 
	if(sel[2]==0) then 	pos=2'b00; 
	else pos=2'b01; 
	else pos=2'b10; 
	else pos=2'b11; 
	end 
	else if(sel[1]==0) then 
	if(sel[2]==0) then 	pos=2'b01; 
	else pos=2'b11; 
	else pos=2'b10; 
	end 
	else if(sel[2]==0) then 	pos=2'b11; 
	else pos=2'b01; 
	end
else if(sel[0]==0)
================================================================
example-15: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) 
begin 
	case(in) 
	3'b000: pos=2'b00;
	3'b001: pos=2'b01;
	3'b010: pos=2'b10;
	3'b011: pos=2'b11;
	endcase
end

================================================================
example-16: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
	case(in)
	3'd0: pos=2'd0;
	3'd1: pos=2'd0;
	3'd2: pos=2'd0;
	3'd3: pos=2'd1;
	3'd4: pos=2'd1;
	3'd5: pos=2'd1;
	3'd6: pos=2'd2;
	3'd7: pos=2'd2;
	default: pos=2'd0;
	endcase
end

================================================================
example-17: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) 
begin 
	case(in) 
	3'd0: pos = 2'b00; 
	3'd1: pos = 2'b01; 
	3'd2: pos = 2'b10; 
	3'd3: pos = 2'b11; 
	endcase 
end 

================================================================
example-18: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) 
begin 
if (in[2]==1'b1) pos = 2'b11 ; 
else if (in[1]==1'b1) pos = 2'b10 ;
else if (in[0]==1'b1) pos = 2'b01 ; 
else pos = 2'b00 ; 
end 

================================================================
example-19: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or pos) //{
 	case(pos) //{
 	//3'd0,3'd1,3'd2,3'd3,3'd4,3'd5,3'd6,3'd7
	2'b00: //{
	if(in[0]) 
	begin
	pos=2'd0;
	//pos=2'd1;
	end
	else if(in[1]) 
	begin
	pos=2'd1;
	end
	else if(in[2]) 
	begin
	pos=2'd2;
	end
	end 
	//3'd0,3'd1,3'd2,3'd3,3'd4,3'd5,3'd6,3'd7
	2'b01: //{
	if(in[0]) 
	
================================================================
example-20: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or pos)
begin 
case(pos) 
2'b00 : if(in[2]) out=2'b01; 
else if (in[1]) out = 2'b10; 
else if (in[0]) out = 2'b11; 
default : out = 2'bxx; 
endcase 
end 

================================================================
example-21: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) 
begin 
	case( in ) 
	3'b000: pos = 2'b00; 
	3'b001: pos = 2'b01; 
	3'b010: pos = 2'b10; 
	3'b011: pos = 2'b11; 
	endcase 
end 

================================================================
example-22: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin 
	case(in) 
	3'b000: pos = 2'd0;
	3'b001: pos = 2'd0;
	3'b010: pos = 2'd0;
	3'b011: pos = 2'd0;
	3'b100: pos = 2'd0;
	3'b101: pos = 2'd0;
	3'b110: pos = 2'd0;
	3'b111: pos = 2'd1; 
	default: pos = 2'd0;
	endcase
end

================================================================
example-23: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
parameter sel=1;
always @(*)
begin 
	case(sel)
	0: pos=2'b00;
	1: if(in[2]) pos=2'b00;
	else if(in[1]) pos=2'b01;
	else if(in[0]) pos=2'b10;
	2'bxx: pos=2'bxx;
	endcase
end

================================================================
example-24: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or pos)
begin
	case( pos )
	0: if(in[2]==1'b1)
	pos = 2'b01;
	1: if(in[1]==1'b1)
	pos = 2'b10;
	2: if(in[0]==1'b1)
	pos = 2'b11;
	// default pos is 2'bxx;
	endcase
end

================================================================
example-25: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin	 
	case(in) 
	3'b000: pos=2'b00;
	3'b001: pos=2'b01;
	3'b010: pos=2'b10;
	3'b011: pos=2'b11;
	endcase
end

================================================================
example-26: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) 
begin 
	if (in[2]) 
	begin 
	case (in[1:0]) 
	2'b11: pos=2'd3; 
	2'b10: pos=2'd2; 
	2'b01: pos=2'd1; 
	default pos=2'd0; 
	endcase 
	end 
	 
	else if (in[1]) 
	begin 
	case (in[1:0]) 
	2'b11: pos=2'd1; 
	2'b10: pos=2'd2; 
	2'b01: pos=2'd3; 
	default pos=2'd0; 
	endcase 
	end 
	
	else if (in[0]) 
	begin 
	
================================================================
example-27: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) 
begin 
case(in) 
 3'b000: pos=2'b00; 
 3'b001: pos=2'b01; 
 3'b010: pos=2'b10; 
 3'b011: pos=2'b11; 
endcase 
end 

================================================================
example-28: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) 
begin 
	if (in[2]==1'b1) 
	begin 
	pos=2'd3;
	end 
	else if (in[1]==1'b1) 
	begin 
	pos=2'd1;
	end 
	else if (in[0]==1'b1) 
	begin 
	pos=2'd0;
	end 
	else 
	begin 
	pos=2'd0;
	end 
end 

================================================================
example-29: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// Priority encoder -> b=01, a=10
always @(*)
begin 
	case(in)
	3'b110: pos=2'b01;
	3'b110: pos=2'b10;
	default: pos=2'b00;
	endcase
end

================================================================
example-30: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) 
begin 
case ( in ) 
3'd0 : pos = 2'd0; 
3'd1 : pos = 2'd0; 
3'd2 : pos = 2'd0; 
3'd3 : pos = 2'd1; 
3'd4 : pos = 2'd1; 
3'd5 : pos = 2'd1; 
3'd6 : pos = 2'd2; 
3'd7 : pos = 2'd2; 
default : pos = 2'd0; 
endcase 
end 

================================================================
example-31: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) 
	begin 
	case(in) 
	3'b000: pos=2'b00; 
	3'b001: pos=2'b01;
	3'b010: pos=2'b10;
	3'b011: pos=2'b11;
	endcase
	end

================================================================
example-32: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) 
	case(in) 
	3'b000: pos = 2'b00; 
	3'b001: pos = 2'b01; 
	3'b010: pos = 2'b10; 
	3'b011: pos = 2'b11; 
	endcase // case endcase

================================================================
example-33: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// Priority encoder can be seen as a 3-to-8 decoder
always @(*)
case(in) // case(sel) is a synplify alternative to the procedural case
3'b000: pos=2'b00;
3'b001: pos=2'b01;
3'b010: pos=2'b10;
3'b011: pos=2'b11;
3'b100: pos=2'b00;
3'b101: pos=2'b10;
3'b110: pos=2'b00;
3'b111: pos=2'b01; // default case is never reached
endcase

================================================================
example-34: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin 
case(in) 
3'd0: pos=2'd0; 
3'd1: pos=2'd0; 
3'd2: pos=2'd0; 
3'd3: pos=2'd0; 
3'd4: pos=2'd1; 
3'd5: pos=2'd1; 
3'd6: pos=2'd1; 
3'd7: pos=2'd1; 
endcase 
end 

================================================================
example-35: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin 
case(in) 
3'b110: pos=2'd1; 
3'b101: pos=2'd1; 
3'b100: pos=2'd0; 
3'b011: pos=2'd0; 
3'b010: pos=2'd0; 
3'b001: pos=2'd0; 
3'b000: pos=2'd0; 
endcase
 end

================================================================
example-36: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) 
case(in) 
3'd0: pos=2'd0; 
3'd1: pos=2'd0; 
3'd2: pos=2'd0; 
3'd3: pos=2'd1; 
3'd4: pos=2'd1; 
3'd5: pos=2'd1; 
3'd6: pos=2'd2; 
3'd7: pos=2'd2; 
default: pos=2'd0; 
endcase 

================================================================
example-37: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
case(in) 
3'b000: pos=2'b00; 
3'b001: pos=2'b01;
3'b010: pos=2'b10; 
3'b011: pos=2'b11;
endcase 

================================================================
example-38: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// else assign a to out
assign a = 2'b00;
assign b = 2'b01;
//assign priority encoder output
always @(*) begin
	case(in)
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	default: pos = 2'bxx;
	endcase
end

================================================================
example-39: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or pos)
begin 
	if (pos == 2'b00) begin
	casex (in)	// synopsys parallel_case 
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	endcase
	end
end

================================================================
example-40: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) 
begin 
	case( in ) 
	3'd0: pos=2'd0; 
	3'd1: pos=2'd0; 
	3'd2: pos=2'd0; 
	3'd3: pos=2'd1; 
	3'd4: pos=2'd1; 
	3'd5: pos=2'd1; 
	3'd6: pos=2'd1; 
	3'd7: pos=2'd2; 
	endcase 
end 

================================================================
example-41: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @( *)
begin
	case(in)
	3'b000: pos = 2'b00;	// e
	3'b001: pos = 2'b01;	// d
	3'b010: pos = 2'b10;	// c
	3'b011: pos = 2'b11;	// b
	default: pos = 2'bxx;	// a or f
	endcase
end

================================================================
example-42: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) 
pos = (sel) ? 2'b00 : in; 

================================================================
example-43: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin 
	if(in[1]) pos = 2'd1; 
	else if(in[2]) pos = 2'd2; 
	else if(in[3]) pos = 2'd3; 
	else if(in[4]) pos = 2'd4; 
	else if(in[5]) pos = 2'd5; 
	else if(in[6]) pos = 2'd6; 
	else if(in[7]) pos = 2'd7; 
	else if(in[0]) pos = 2'd0; 
	else pos = 2'd2; //Default pos is 2'd2 
end 

================================================================
example-44: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) 
begin 
	if(in[2]==1'b1)
	pos=2'b11;
	else if(in[1]==1'b1)
	pos=2'b10;
	else if(in[0]==1'b1)
	pos=2'b01;
	else
	pos=2'b00;
end

================================================================
example-45: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) 
begin 
pos[1] = (in[2]) | (in[1]); 
pos[0] = (in[0]) | (in[1]); 
end 

================================================================
example-46: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
case(in)
3'd1: pos=2'd1;
3'd2: pos=2'd2;
3'd3: pos=2'd3;
3'd4: pos=2'd4;
3'd5: pos=2'd5;
3'd6: pos=2'd6;
3'd7: pos=2'd7;
endcase 

================================================================
example-47: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or pos)
begin 
	case(pos) // pos=2'b00 if sel=1
	2'b00: if(in==3'b100) pos=2'b01;
	2'b01: if(in==3'b110) pos=2'b10;
	2'b10: if(in==3'b101) pos=2'b11;
	2'b11: if(in==3'b111) pos=2'b00;
	endcase
end 

================================================================
example-48: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) 
begin 
	case(in) 
	3'd0: pos=2'd0; 
	3'd1: pos=2'd0; 
	3'd2: pos=2'd0; 
	3'd3: pos=2'd0; 
	3'd4: pos=2'd0;
	3'd5: pos=2'd0; 
	3'd6: pos=2'd0; 
	3'd7: pos=2'd0; 
	endcase 
end 

================================================================
example-49: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin 
	if(sel[1]) 
	begin 
	case(in) 
	3'b000: pos=0; 
	3'b001: pos=1; 
	3'b010: pos=2; 
	3'b011: pos=3; 
	3'b100: pos=4; 
	3'b101: pos=5; 
	3'b110: pos=6; 
	3'b111: pos=7; 
	default: pos=2'bz; 	
	endcase 	
	end 
end 

================================================================
