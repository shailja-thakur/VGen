example-0: 
// this is a shift left and rotate operation
module left_rotate(clk,reset,amount,data,load,out);
input clk,reset;
input [2:0] amount;
input [7:0] data;
input load;
output reg [7:0] out;
// when load is high, load data to out
// rotate the register out followed by shift left by amount bits
always @(posedge clk)
	begin
	if(reset)
	begin
	out = 0;
	end
	else if(load)
	begin
	out = data;
	end
	else if(amount == 3'd0)
	begin
	out = out;
	end
	else if(amount == 3'd1)
	begin
	out = {out[6:0],out[7]};
	end
	else if(amount == 3'd2)
	begin
	out = {out[5:0],out[6],out[7]};
	end
	else if(amount == 3'd3)
	begin
	out = {out[4:0],out[5],out[6],out[7]};
	end
	else if(amount == 3'd4)
	begin
	out =
================================================================
example-1: 
// this is a shift left and rotate operation
module left_rotate(clk,reset,amount,data,load,out);
input clk,reset;
input [2:0] amount;
input [7:0] data;
input load;
output reg [7:0] out;
// when load is high, load data to out
// rotate the register out followed by shift left by amount bits
always @(posedge clk or negedge reset)
	begin
	if(reset==1'b0)	//reset is active low
	out<=0;
	else if(load==1'b1)
	out<=data;
	else 
	begin
	case(amount)
	3'b000: out<=out;
	3'b001: out<=out>>1;
	3'b010: out<=out>>2;
	3'b011: out<=out>>3;
	3'b100: out<=out>>4;
	3'b101: out<=out>>5;
	3'b110: out<=out>>6;
	3'b111: out<=out>>7;
	endcase
	end
	end

================================================================
example-2: 
// this is a shift left and rotate operation
module left_rotate(clk,reset,amount,data,load,out);
input clk,reset;
input [2:0] amount;
input [7:0] data;
input load;
output reg [7:0] out;
// when load is high, load data to out
// rotate the register out followed by shift left by amount bits
always @(posedge clk or posedge reset)
	begin
	if (reset)
	out <= 0;
	else if (load)
	out <= data;
	else begin
	// the shift is accomplished by placing the most significant bits in the leftmost spot
	out = {out[6:0],out[7]};
	end
	end

================================================================
