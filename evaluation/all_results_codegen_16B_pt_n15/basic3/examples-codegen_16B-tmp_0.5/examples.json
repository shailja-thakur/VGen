// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "always @(posedge in) begin\n  if (in[1]) pos <= 1;\n  else if (in[0]) pos <= 2;\n  else if (in[2]) pos <= 3;\n  else pos <= 0;\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "// When sel=0, assign a to out\nalways @(posedge clk) begin\n    if( !in[0] && !in[1] ) pos <= 0;\n    else if( in[0] ) pos <= 1;\n    else if( in[1] ) pos <= 2;\n    else pos <= 3;\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "reg [1:0] sel;\nalways @( posedge in ) begin\n  if( in[0] | in[1] )\n    sel <= 1;\n  else\n    sel <= 0;\n  if( sel == 1 )\n    pos <= in[1];\n  else\n    pos <= 0;\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "// When sel=0, assign a to out\nalways @(posedge clk)\nbegin\n  if (sel==1)\n    pos <= in;\n  else\n    pos <= in + 1;\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "// When sel=0, assign a to out\nalways @(posedge clk)\nbegin\n  if (sel)\n    pos <= in;\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "// When sel=0, assign a to out\nalways @(posedge clk) begin\n  if( sel ) pos <= 1'b0;\n  else pos <= in;\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "// When sel=0, assign a to out\nalways @(posedge clk) begin\n  if (sel == 0)\n    pos <= a;\n  else if (in[0] == 1 and in[1] == 1)\n    pos <= b;\n  else\n    pos <= 0;\nend\n"
    },
    {
      "finish_reason": "length",
      "index": 7,
      "logprobs": null,
      "text": "assign out = 1'b0;\n// When sel=0, assign a to out\nassign out = 1'b1;\n\n// When sel=1, assign a to out\nassign out = 1'b0;\n// When sel=0, assign b to out\nassign out = 1'b1;\n\n// When sel=1, assign b to out\nassign out = 1'b0;\n// When sel=0, assign a to out\nassign out = 1'b1;\n\n// When sel=1, assign b to out\nassign out = 1'b0;\n// When sel=0, assign a to out\nassign out = 1'b1;\n\n// When sel=1, assign b to out\nassign out = 1'b0;\n// When sel=0, assign a to"
    },
    {
      "finish_reason": "stop",
      "index": 8,
      "logprobs": null,
      "text": "// When sel=0, assign a to out\nalways @(posedge clk) begin\n  if (sel==1)\n    pos <= ~in;\n  else\n    pos <= ~in & a;\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 9,
      "logprobs": null,
      "text": "// When sel=0, assign a to out\nalways @(posedge clk) begin\n  if (sel) {\n    if (in[0]) {\n      pos <= 2;\n    } else if (in[1]) {\n      pos <= 1;\n    } else {\n      pos <= 0;\n    }\n  } else {\n    if (in[0]) {\n      pos <= 1;\n    } else if (in[1]) {\n      pos <= 2;\n    } else {\n      pos <= 0;\n    }\n  }\nend\n"
    },
    {
      "finish_reason": "length",
      "index": 10,
      "logprobs": null,
      "text": "// When sel=0, assign ~b to out\nalways @(posedge clk) begin\n  case(in)\n    0 : pos <= 0;\n    1 : pos <= 1;\n    2 : pos <= 2;\n    3 : pos <= 3;\n    4 : pos <= 0;\n    5 : pos <= 1;\n    6 : pos <= 2;\n    7 : pos <= 3;\n    8 : pos <= 0;\n    9 : pos <= 1;\n    10 : pos <= 2;\n    11 : pos <= 3;\n    12 : pos <= 0;\n    13 : pos <= 1;\n    14 : pos <= 2;\n    15 : pos <= 3;\n    16 : pos <= 0;\n    17 : pos <= 1;\n    18 : pos <= 2;\n    19 : pos <= 3;\n    20 : pos <= 0;\n    21 :"
    },
    {
      "finish_reason": "stop",
      "index": 11,
      "logprobs": null,
      "text": "// When sel=0, assign a to out\nalways @(posedge clk) begin\n  if (sel==1) \n    pos <= in;\n  else\n    pos <= a;\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 12,
      "logprobs": null,
      "text": "// When sel=2, assign a to out\n// When sel=3, assign c to out\nalways @(posedge clk) begin\n    pos <= in;\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 13,
      "logprobs": null,
      "text": "// When sel=0, assign a to out\nalways @(posedge clk) begin\n  if (in[2]) pos <= 1'd1;\n  else if (in[1]) pos <= 1'd0;\n  else if (in[0]) pos <= 1'd0;\n  else pos <= 1'd0;\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 14,
      "logprobs": null,
      "text": "// When sel=0, assign a to out\nalways @(posedge clk) begin\n  if (in[0]) pos <= 0;\n  else if (in[1]) pos <= 1;\n  else if (in[2]) pos <= 2;\n  else pos <= 3;\nend\n"
    }
  ],
  "created": 1663535360,
  "id": "cmpl-yWdF6pUg1iQojOegvbKa8U3XwyVBF",
  "model": "codegen",
  "object": "text_completion",
  "usage": {
    "completion_tokens": 1259,
    "prompt_tokens": 65,
    "total_tokens": 1324
  }
}