example-0: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
reg [1:0] b;
always @(posedge clk) begin
  if (in[0]) begin
    b <= 1;
    case(in[1])
      case(in[2])
        case(in[3])
          b <= 2;
        endcase
      endcase
    end
  else
    b <= 0;
  pos <= b;
end

================================================================
example-1: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
// When sel=0, assign a to out
always @(posedge clk) {
  if (sel == 1) {
    pos <= in;
  } else if (sel == 0) {
    pos <= in;
  } else {
    pos <= 0;
  }
}

always @(posedge clk) {
  out <= pos;
}


================================================================
example-2: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge in) begin
	if (in[0]) pos <= 1;
	else if (in[1]) pos <= 2;
	else if (in[2]) pos <= 3;
	else pos <= 0;
	if (pos==3) pos <= 2;
	if (pos==2) pos <= 1;
end

================================================================
example-3: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
  always @ (posedge in)
  begin 
    case(in)
      0: pos <= 0;
      1: pos <= 1;
      2: pos <= 2;
      3: pos <= 3;
      4: pos <= 4;
      5: pos <= 5;
      6: pos <= 6;
      7: pos <= 7;
    endcase
  end

================================================================
example-4: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk) begin
  if(in[0] | in[1]) { pos <= 2; }
  else begin
    pos <= 0;
  end
end

/////////////////////////////////////////////////////////////////////////////
// This is a priority encoder with 3-bit input. If none of the input bits are high, output is zero.
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [3:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk) begin
  if(in[0] | in[1] | in[2]) { pos <= 3; }
================================================================
example-5: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk) begin
if (in[0]) 
    pos <= 1;
else if (in[1]) 
    pos <= 2;
else
    pos <= 0;
end

================================================================
example-6: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign ~b to out
always @(posedge clk)
if (sel==1) {
    pos <= in;
} else {
    pos <= ~in;
}

================================================================
example-7: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
// When sel=0, POS is 1
// When sel=1, POS is 0
always @(posedge clk) begin
    if (sel==0)
    {
        pos <= a;
    }
    else
    {
        pos <= b;
    }
end

================================================================
example-8: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk) begin
 if(sel) begin
   pos <= {in[0], in[1], in[2]};
 end else begin
   pos <= 0;
 end

================================================================
example-9: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=2, assign a to out
// When sel=3, assign b to out
always @(posedge clk) begin 
if (in[2]) pos <= 2;
else if (in[1]) pos <= 1;
else if (in[0]) pos <= 0;
end

================================================================
example-10: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge DC3) begin
  if ( (in[0] | in[1] | in[2]) == 1 ) {
    pos <= sel;
  }
end

================================================================
example-11: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
reg [1:0] sel;
always begin
if ((in[0]|in[1])==0) sel <= 0;
else if ((in[0]==1) and (in[1]==0)) sel <= 1;
else if ((in[0]==0) and (in[1]==1)) sel <= 2;
else if ((in[0]==1) and (in[1]==1)) sel <= 3;
end
if (sel==0) pos <= 0;
else if (sel==1) pos <= 1;
else if (sel==2) pos <= 2;
else if (sel==3) pos <= 3;
end 

================================================================
example-12: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk) begin
  if (sel==0) pos <= in;
  else if (sel==1) pos <= in + 1;
end
end
// 1-bit priority encoder (w/ 3-bit priority)
module priority_encoder_with_3_bits( 
input [2:0] in,
output reg [1:0] pos,
input [3:0] sel ); 
// When sel=0, assign a to out
// When sel=1, assign b to out
// When sel=2, assign c to out
always @(posedge clk) begin
  if (sel==0) pos <= in;
  else if (sel==1) pos <= in + 1;
  else if (sel==2) pos <= in + 2;
================================================================
example-13: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, clear b
always @(posedge clk) begin
    pos <= {sel, ~in[2], in[1], in[0]} & 0x3;
end

================================================================
example-14: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always begin
    pos <= ~in; 
end

================================================================
