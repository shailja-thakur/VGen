example-0: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk) begin
if (reset)
q <= 4'b0000;
else begin
if (slowena) begin
if(q<9)
q <= q + 4'b0001;
end
end
end

================================================================
example-1: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
always@(posedge clk or posedge reset) begin
if(reset)
q <= 4'b0;
else if(slowena && q != 4'd9)
q <= q + 4'b0001;
end

================================================================
example-2: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// Set the output q to the next value on the negative edge of the clock.
always @(posedge clk) begin
	if (reset == 1'b1) begin
	q <= 4'd0;
	end
	else begin
	if (slowena == 1'b1 && q != 9) begin
	q <= q + 4'd1;
	end
	else begin
	q <= q;
	end
	end
end


================================================================
