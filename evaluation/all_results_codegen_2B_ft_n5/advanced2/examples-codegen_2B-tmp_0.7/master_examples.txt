example-0: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
always @ (posedge clk or posedge reset)
begin
	if (reset)
	begin
	q	<=	0;
	end
	else
	if(slowena && q < 4'b1001)
	q	<=	q + 1;
end


================================================================
example-1: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
 if (reset)
	 q <= 0;
 else
	if (slowena)
	 if (q != 9)
	 q <= q + 1;
 endmodule

module count_slow_tb;

reg clk;
reg slowena;
reg reset;
wire [3:0] q;

count_slow DUT(clk, slowena, reset, q);

initial begin
	clk = 0;
	reset = 0;
	slowena = 0;
	#20 reset = 1;
	#40 slowena = 1;
	#50 slowena = 0;
	#10 slowena = 1;
	//#40;
	#20 $stop;
	
end

always #5 clk = ~clk;


================================================================
example-2: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low or the q is 9, don't increment q.

always @(posedge clk) begin
	if (reset)
	q <= 4'b0000;
	else if (slowena) begin
	if (q == 4'b1001)
	q <= 4'b0000;
	else
	q <= q + 1'b1;
	end
	else
	q <= q;

end


================================================================
example-3: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, do nothing.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	
	else if (slowena)
	begin
	if (q != 9)
	begin
	q <= q + 1;
	end
	else
	begin
	q <= 0;
	end
	end
end


================================================================
example-4: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
always @(posedge clk or posedge reset) begin
	if (reset)
	begin
	q <= 0;
	end
	else
	if (slowena)
	begin
	if (q == 9)
	q <= 0;
	else
	q <= q+1;
	end
end

================================================================
