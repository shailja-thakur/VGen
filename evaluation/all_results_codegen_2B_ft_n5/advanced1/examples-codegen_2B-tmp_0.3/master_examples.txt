example-0: 
// Design a signed adder that adds two 8-bit 2's complement numbers, a[7:0] and b[7:0]. 

module signed_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

// The numbers a and b are added to the output s. 
// assign the occurence of the signed overflow of a and b to the output overflow.
// a signed overflow occurs if the most significant bits of a and b are low and the most significant bit of s is high
// a signed overflow may also occur if the most significant bits of a and b are high and the most significant bit of s is low


// The output s is the sum of a and b. 
// The output overflow is the signed overflow of a and b. 
// The output overflow is high when either a or b is negative and the sum is negative. 
// The output overflow is high when both a and b are negative and the sum is positive. 

// The output overflow is high when either a or b is negative and the sum is negative. 
// The output overflow is high when both a and b are negative and the sum is positive. 

// The output overflow is high when both a and b are negative and the sum is positive. 

// The output overflow is high when either a or b is negative and the sum is negative. 
// The output overflow is high when both a and b are negative and the sum is positive. 

// The output overflow is high when both a and b are negative and the sum is positive.
================================================================
example-1: 
// Design a signed adder that adds two 8-bit 2's complement numbers, a[7:0] and b[7:0]. 

module signed_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

// The numbers a and b are added to the output s. 
// assign the occurence of the signed overflow of a and b to the output overflow.
// a signed overflow occurs if the most significant bits of a and b are low and the most significant bit of s is high
// a signed overflow may also occur if the most significant bits of a and b are high and the most significant bit of s is low


wire [7:0] carry;
wire [7:0] overflow;

// carry out is the carry out of the adder
assign carry[0] = 1'b0;

// overflow is the overflow of the adder
assign overflow[0] = 1'b0;

// adder
fa_adder adder(a[7:0], b[7:0], carry[7:1], s[7:0], overflow[7:0]);

// carry out is the carry out of the adder
assign carry[8:1] = overflow[7:0];

// overflow is the overflow of the adder
assign overflow[8:0] = carry[7:1];


================================================================
example-2: 
// Design a signed adder that adds two 8-bit 2's complement numbers, a[7:0] and b[7:0]. 

module signed_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

// The numbers a and b are added to the output s. 
// assign the occurence of the signed overflow of a and b to the output overflow.
// a signed overflow occurs if the most significant bits of a and b are low and the most significant bit of s is high
// a signed overflow may also occur if the most significant bits of a and b are high and the most significant bit of s is low


assign overflow = (a[7] & b[7] & ~s[7]) | (a[7] & ~b[7] & s[7]);

// The numbers a and b are added.
// The most significant bit of s is set to the most significant bit of the sum.
// The least significant bit of s is set to the least significant bit of the sum.
// The overflow bit is set to the sign of the sum.

assign s = a + b + overflow;


================================================================
example-3: 
// Design a signed adder that adds two 8-bit 2's complement numbers, a[7:0] and b[7:0]. 

module signed_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

// The numbers a and b are added to the output s. 
// assign the occurence of the signed overflow of a and b to the output overflow.
// a signed overflow occurs if the most significant bits of a and b are low and the most significant bit of s is high
// a signed overflow may also occur if the most significant bits of a and b are high and the most significant bit of s is low


// The output overflow is a single bit. The output s is a 8-bit number.

// The output overflow is a single bit. The output s is a 8-bit number.

// The output overflow is a single bit. The output s is a 8-bit number.

// The output overflow is a single bit. The output s is a 8-bit number.

// The output overflow is a single bit. The output s is a 8-bit number.

// The output overflow is a single bit. The output s is a 8-bit number.

// The output overflow is a single bit. The output s is a 8-bit number.

// The output overflow is a single bit. The output s is a 8-bit number.

// The output overflow is a single bit. The output s is a 8-bit number.

// The output overflow is a single bit. The
================================================================
example-4: 
// Design a signed adder that adds two 8-bit 2's complement numbers, a[7:0] and b[7:0]. 

module signed_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

// The numbers a and b are added to the output s. 
// assign the occurence of the signed overflow of a and b to the output overflow.
// a signed overflow occurs if the most significant bits of a and b are low and the most significant bit of s is high
// a signed overflow may also occur if the most significant bits of a and b are high and the most significant bit of s is low



wire signed [7:0] b_minus_a;
wire signed [7:0] b_plus_a;
wire signed [7:0] a_minus_b;
wire signed [7:0] a_plus_b;
wire signed [7:0] s_plus_a;
wire signed [7:0] s_minus_a;

assign b_minus_a = b[7] ? ~b + 1'b1 : b;
assign b_plus_a = b[7] ? b + 1'b1 : b;
assign a_minus_b = a[7] ? ~a + 1'b1 : a;
assign a_plus_b = a[7] ? a + 1'b1 : a;

assign s_plus_a = a_plus_b + b_plus_
================================================================
