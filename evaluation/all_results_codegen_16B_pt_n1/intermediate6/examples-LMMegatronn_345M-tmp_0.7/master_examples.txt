example-0: 
// This is a ram module
module ram
(
input [7:0] data,
input [5:0] addr,
input we, clk,
output [7:0] q
);
reg [7:0] ram[63:0];
// when we is high, write data to ram at address addr
// assign the ram value at address addr to q
always @ (posedge clk)
begin
  if (we)
      ram[addr] <= data;
end

// write data to ram when we write it to address
always @ (posedge clk)
begin
  q <= ram[addr];
end


================================================================
example-1: 
// This is a ram module
module ram
(
input [7:0] data,
input [5:0] addr,
input we, clk,
output [7:0] q
);
reg [7:0] ram[63:0];
// when we is high, write data to ram at address addr
// assign the ram value at address addr to q
// always @(posedge clk)
//    if (we)
//        ram[addr] <= data;
// assign q = ram[addr];

initial
    $readmemh("ram.data", ram);


================================================================
example-2: 
// This is a ram module
module ram
(
input [7:0] data,
input [5:0] addr,
input we, clk,
output [7:0] q
);
reg [7:0] ram[63:0];
// when we is high, write data to ram at address addr
// assign the ram value at address addr to q
assign q = ram[addr];
always @ (posedge clk) begin
if (we)
ram[addr] <= data;
end
assign q = ram[addr];

================================================================
example-3: 
// This is a ram module
module ram
(
input [7:0] data,
input [5:0] addr,
input we, clk,
output [7:0] q
);
reg [7:0] ram[63:0];
// when we is high, write data to ram at address addr
// assign the ram value at address addr to q
always @(posedge clk) begin
    if (we)
        ram[addr] <= data;
end
assign q = ram[addr];

================================================================
example-4: 
// This is a ram module
module ram
(
input [7:0] data,
input [5:0] addr,
input we, clk,
output [7:0] q
);
reg [7:0] ram[63:0];
// when we is high, write data to ram at address addr
// assign the ram value at address addr to q
//always @ (posedge clk)
always @ (posedge clk) begin
  ram[addr] = data;
end
//assign q= ram[addr];

//initial $readmemh("ram.data", ram);
//always @ (posedge clk) begin
//  if (we)
//    ram[addr] = data;

================================================================
