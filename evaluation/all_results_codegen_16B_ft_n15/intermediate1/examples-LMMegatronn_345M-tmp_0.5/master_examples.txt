example-0: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

wire [2:0] g, p;

xor x1(p[0], a[0], b[0], g[0]);
xor x2(p[1], a[1], b[1], g[1]);
xor x3(p[2], a[2], b[2], g[2]);
xor x4(p[3], a[3], b[3], g[3]);
and a1(g[0], a[0], b[0], p[0], cin);
and a2(g[1], a[1], b[1], p[1], cin);
and a3(g[2], a[2], b[2], p[2], cin);
and a4(g[3], a[3], b[3], p[3], cin);
and a
================================================================
example-1: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

wire [2:0] c;

xor x3(a, b, c[0], sum[0]);
xor x2(c[0], b, c[1], sum[1]);
xor x1(sum[0], a, b, c[2], sum[2]);


================================================================
example-2: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

wire [1:0] g, p;

assign {cout,sum} = a + b + cin;


================================================================
example-3: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
wire [3:0] f;
wire [2:0] g;
wire [1:0] p;

assign {cout,sum} = a + b + cin;
assign cout = g[3] | (p[3] & b) | (p[3] & p[2] & p[1] & p[0]);
assign sum = p[3] & p[2] & p[1] & p[0];


================================================================
example-4: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
assign {cout, sum} = a + b + cin;

================================================================
