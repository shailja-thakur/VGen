example-0: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or sel)
begin
	case (sel)
	1'b0: pos = 2'bzz;	// When sel=0, output nothing
	1'b1: pos = in; 	// When sel=1, output input
	endcase
end

================================================================
example-1: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
case (in)
3'b000: pos = 2'b00;
3'b001: pos = 2'b01;
3'b010: pos = 2'b10;
3'b011: pos = 2'b11;
3'b100: pos = 2'b10;
3'b101: pos = 2'b11;
3'b110: pos = 2'b00;
3'b111: pos = 2'b01;
default: pos = 2'b00;
endcase
end

================================================================
example-2: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ ( in or sel )
begin
	if ( sel == 1 )
	begin
	// Write your code here
	end
	else
	begin
	// Write your code here
	end
end



================================================================
example-3: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ ( in or sel ) begin
	casex ( in )
	//3'b000
	0 : pos = 2'b00;
	//3'b001
	1 : pos = 2'b01;
	//3'b010
	2 : pos = 2'b10;
	//3'b011
	3 : pos = 2'b11;
	//3'b100
	4 : pos = 2'b00;
	//3'b101
	5 : pos = 2'b01;
	//3'b110
	6 : pos = 2'b10;
	//3'b111
	7 : pos = 2'b11;
	endcase
end

================================================================
example-4: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ ( in or sel )
begin
	if ( sel )
	begin
	case ( in )
	// 3-bit number to binary
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	3'b100: pos = 2'b00;
	3'b101: pos = 2'b01;
	3'b110: pos = 2'b10;
	3'b111: pos = 2'b11;
	// default: no route
	default: pos = 2'b00;
	endcase
	end
end

================================================================
example-5: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
case (in)
3'b000: pos = 2'b00; 
3'b001: pos = 2'b01; 
3'b010: pos = 2'b10;
3'b011: pos = 2'b11;
3'b100: pos = 2'b01; 
3'b101: pos = 2'b10;
3'b110: pos = 2'b11;
3'b111: pos = 2'b11;
default: pos = 2'b00;
endcase
end

================================================================
example-6: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in)
begin
	casex (in)
	3'b000: pos = 2'b00; 	// Pass SA
	3'b001: pos = 2'b01;	// Pass SB
	3'b010: pos = 2'b10;	// Pass SC
	3'b011: pos = 2'b11;	// Pass SD
	default: pos = 2'b00;
	endcase
end

================================================================
example-7: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin
case(in)
3'b000: pos=2'b00;
3'b001: pos=2'b01;
3'b010: pos=2'b01;
3'b011: pos=2'b10;
3'b100: pos=2'b10;
3'b101: pos=2'b11;
3'b110: pos=2'b11;
3'b111: pos=2'b11;
default: pos=2'b00;
endcase
end

================================================================
example-8: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin
case (in)
3'b000: pos = 2'b00;
3'b001: pos = 2'b01;
3'b010: pos = 2'b10;
3'b011: pos = 2'b11;
3'b100: pos = 2'b01;
3'b101: pos = 2'b10;
3'b110: pos = 2'b11;
3'b111: pos = 2'b00;
default: pos = 2'b00;
endcase
end

================================================================
example-9: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
 casex (in)
 3'b000: pos = 2'b00;
 3'b001: pos = 2'b01;
 3'b010: pos = 2'b10;
 3'b011: pos = 2'b11;
 default: pos = 2'b00;
 endcase
end

================================================================
example-10: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ ( * )
begin
	case (in)
	// 3-bit number input
	3'd0: pos = 2'd0;
	3'd1: pos = 2'd1;
	3'd2: pos = 2'd2;
	3'd3: pos = 2'd3;
	// pass through
	3'd4: pos = 2'd0;
	3'd5: pos = 2'd1;
	3'd6: pos = 2'd2;
	3'd7: pos = 2'd3;
	// pass through
	3'd8: pos = 2'd0;
	3'd9: pos = 2'd1;
	3'd10: pos = 2'd2;
	3'd11: pos = 2'd3;
	// pass through
	3'd12: pos = 2'd0;
	3'd13: pos =
================================================================
example-11: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ ( in or sel )
begin
	if ( sel ) begin
	case ( in )
	// Add more cases if desired
	2'b00: pos=2'b00;
	2'b01: pos=2'b01;
	2'b10: pos=2'b10;
	2'b11: pos=2'b11;
	endcase
	end
	else pos=2'b00;
	end

================================================================
example-12: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ ( * )
begin
	case (in)
	3'b000: pos = 2'b00; 
	3'b001: pos = 2'b01; 
	3'b010: pos = 2'b10; 
	3'b011: pos = 2'b11; 
	3'b100: pos = 2'b00; 
	3'b101: pos = 2'b01; 
	3'b110: pos = 2'b10; 
	3'b111: pos = 2'b11; 
	default: pos = 2'b00;
	endcase
end

================================================================
example-13: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @( in or sel )
begin
	if ( sel )
	begin
	case (in)
	
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	3'b100: pos = 2'b00;
	3'b101: pos = 2'b01;
	3'b110: pos = 2'b10;
	3'b111: pos = 2'b11;
	
	endcase
	end
	else 
	pos = 2'b00; // else output 0
	end
end

================================================================
example-14: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or sel)
begin
	case(sel)
	2'b00: pos = 2'b00;	// No change
	2'b01: pos = 2'b01;	// in[0] becomes 1
	2'b10: pos = 2'b10;	// in[1] becomes 1
	2'b11: pos = 2'b11;	// in[2] becomes 1
	endcase
end

================================================================
