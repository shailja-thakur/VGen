// left shift and rotate operation
module left_rotate(clk,reset,amount,data,load,out);
input clk,reset;
input [2:0] amount;
input [7:0] data;
input load;
output reg [7:0] out;
// when load is high, load data to out
// otherwise rotate the out register followed by left shift the out register by amount bits
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "always @(posedge clk or negedge reset)\n  if (load) out <= data; else out <<= amount;\n\n// outputs\n\n// when load is low, load data from data to out\n// otherwise shift out left by amount bits, and right shift out right by amount bits\nalways @(posedge clk or negedge reset)\n  if (not load) out <<= amount; else out >>= amount;\n"
    }
  ],
  "created": 1663519216,
  "id": "cmpl-0kilUThS0dMcDoWYPvxvmxzTQPvay",
  "model": "codegen",
  "object": "text_completion",
  "usage": {
    "completion_tokens": 100,
    "prompt_tokens": 94,
    "total_tokens": 194
  }
}