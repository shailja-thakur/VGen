example-0: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge in)
begin
    if (in[0] == 1)
        pos = pos + 1;
    else if (in[1] == 1)
        pos = pos + 2;
    else if (in[2] == 1)
        pos = pos + 4;
    else if (in[3] == 1)
        pos = pos + 8;
    else if (in[4] == 1)
        pos = pos + 16;
    else if (in[5] == 1)
        pos = pos + 32;
    else if (in[6] == 1)
        pos = pos + 64;
    else if (in[7] == 1)
        pos = pos + 128;
    else
        pos = 0;
end
);

// This is a 4-bit priority encoder. If none of the input bits
================================================================
example-1: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out

// This is a 2-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [3:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out

// This is a 4-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [4:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out

// This is a 5-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder(
================================================================
example-2: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[1] << 2) | (in[0] << 1) | (in[0] & 1);

// This is a 4-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [4:0] in,
output reg [3:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[3] << 3) | (in[2] << 2) | (in[1] << 1) | (in[0] << 0);

// This is a 5-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [5:0] in,
output reg [4:0] pos ); 
// When sel=1, assign b
================================================================
example-3: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = ~in[1] & in[0];

module priority_decoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = ~in[1] & in[0];

// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = ~in[1] & in[0];

module priority_decoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = ~in[
================================================================
example-4: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = in[1] ? b[1] : b[0];

// This is a 3-bit priority decoder. If none of the input bits are high, output is zero.
module priority_decoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = in[1] ? b[1] : b[0];

// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder_invert( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = in[1] ? b[0] : b[1];

// This is a 3-bit
================================================================
example-5: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[1] << 2) | (in[0] << 1) | (in[1] << 0);
// When sel=0, assign b to out
assign pos = (in[1] << 1) | (in[0] << 0);

================================================================
example-6: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = b;

// This is a 4-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [3:0] in,
output reg [3:0] pos ); 
// When sel=1, assign b to out
assign pos = b;

// This is a 5-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [4:0] in,
output reg [4:0] pos ); 
// When sel=1, assign b to out
assign pos = b;

// This is a 6-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [5:0] in,
output reg [5
================================================================
example-7: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[0] << 1) | in[1];
// When sel=0, assign b to out
assign pos = (in[1] << 1) | in[0];

================================================================
example-8: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge in)
begin
  if (in[0] == 1)
    pos[1] = 1;
  else
    pos[1] = 0;
  if (in[1] == 1)
    pos[0] = 1;
  else
    pos[0] = 0;
end
);

// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder_2( 
input [2:0] in,
output reg [3:0] pos ); 
// When sel=1, assign b to out
always @(posedge in)
begin
  if (in[0] == 1)
    pos[2] = 1;
  else
    pos[2] = 0;
  if (in[1] == 1)
    
================================================================
example-9: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge in)
begin
  if (in[0] == 1)
    pos[1] = 1;
  else if (in[1] == 1)
    pos[1] = 2;
  else
    pos[1] = 0;
  if (in[0] == 1)
    pos[0] = 1;
  else if (in[1] == 1)
    pos[0] = 2;
  else
    pos[0] = 0;
end
);

// This is a 3-bit priority decoder. If none of the input bits are high, output is zero.
module priority_decoder( 
input [2:0] in,
output reg [1:0] out ); 
// When sel=1, assign b to out
always @(posedge in)
begin
  if (in
================================================================
