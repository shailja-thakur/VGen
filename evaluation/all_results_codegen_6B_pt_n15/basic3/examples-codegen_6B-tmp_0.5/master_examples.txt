example-0: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or posedge rst)
  if (sel)
  begin
    if (in[0] == 1)
      pos = 1;
    else
    if (in[1] == 1)
      pos = 2;
    else
    if (in[2] == 1)
      pos = 3;
    else
    if (in[3] == 1)
      pos = 4;
    else
    if (in[4] == 1)
      pos = 5;
    else
    if (in[5] == 1)
      pos = 6;
    else
    if (in[6] == 1)
      pos = 7;
    else
    if (in[7] == 1)
      pos = 0;
    else
    if (in[8] == 1)
      pos = 1;

================================================================
example-1: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk)
  if (sel)
    b = in;
  else
    b = 0;

always @(posedge clk)
  if (sel)
    pos = b;
  else
    pos = 0;


================================================================
example-2: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or negedge rst)
  if (rst)
  {
    pos = 0;
  }
  else if (sel)
  {
    pos = in;
  }
  else
  {
    pos = 0;
  }

================================================================
example-3: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always@(posedge clk or negedge rst) begin
	if (rst) or (sel) begin
		pos <= 0;
	end
	else begin
		if (in[1]) begin
			pos <= 1;
		end
		else begin
			pos <= 0;
		end
	end
end

================================================================
example-4: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (posedge clk or negedge rst)
  if (rst)
  begin
    pos <= 0;
  end
  else if (sel)
  begin
    pos <= (in[0]?1:0);
  end

================================================================
example-5: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (posedge clk or negedge rst)
  if(rst)
    pos <= 0;
  else if(sel)
    pos <= in;
end


================================================================
example-6: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or posedge rst)
  if (sel)
  begin
    if (in[1] == 1)
      pos = 1;
    else if (in[0] == 1)
      pos = 2;
    else
      pos = 0;
    sel = 0;
  end
end

module priority_encoder_top(
input [2:0] in,
output reg [1:0] pos );
  priority_encoder(in, pos);
end

module priority_encoder_middle(
input [2:0] in,
output reg [1:0] pos );
  priority_encoder_top(in, pos);
end

module priority_encoder_bottom(
input [2:0] in,
output reg [1:0] pos );
  priority_encoder_middle
================================================================
example-7: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or posedge rst)
  if (sel)
  begin
    pos <= in[0];
  end
  else
    pos <= 0;
end

module priority_encoder_test()
	#pragma pipeloop(0)
	#pragma pipeloop(1)
	#pragma pipeloop(2)
	#pragma pipeloop(3)
	#pragma pipeloop(4)
	#pragma pipeloop(5)
	#pragma pipeloop(6)
	#pragma pipeloop(7)
	#pragma pipeloop(8)
	#pragma pipeloop(9)
	#pragma pipeloop(10)
	#pragma pipeloop(11)
	
================================================================
example-8: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or negedge rst)
  if (sel)
  begin
    pos <= in;
  end

================================================================
example-9: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or posedge rst)
  if (sel)
  begin
    pos <= 0;
  end
else
  begin
    pos <= in;
  end

================================================================
example-10: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or posedge rst) begin
  if(sel) begin
    pos <= in[0];
  end
  else begin
    pos <= in[1];
  end
end

================================================================
example-11: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk)
  if(sel)
  begin
    if(in[1]=='1' || in[0]=='1')
      pos[0] = '1';
    else
      pos[0] = '0';
  end
end

// This is a 2-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder_2( 
input [3:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk)
  if(sel)
  begin
    if(in[1]=='1' || in[0]=='1')
      pos[0] = '1';
    else
      pos[0] = '0';
  end

================================================================
example-12: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or negedge rst)
  if (rst) 
  {
    pos = 0;
  }
  else if (sel)
  {
    pos = in;
  }
  else
  {
    pos = 0;
  }

================================================================
example-13: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or negedge rst)
  if(sel)
  {
    pos = in[2];
  }
  else
  {
    pos = 0;
  }

================================================================
example-14: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or negedge rst)
  if(rst == 1)
  begin
    pos <= 0;
  end
  else if(sel)
  begin
    if(in[2] == 1)
      pos <= 1;
  end
  else
  begin
    pos <= 0;
  end

================================================================
