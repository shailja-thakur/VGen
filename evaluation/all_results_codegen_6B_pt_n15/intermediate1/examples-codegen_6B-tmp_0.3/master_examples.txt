example-0: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

always @(posedge clk)
begin
    sum <= a + b + carryout;
    carryout <= a + b + b;
end

================================================================
example-1: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

function half_adder_gate( 
input a, b,
output cout, sum )
{
    cout = a + b;
    sum = (a & b) | (cout & 0x8000);
};

function half_adder_gate_inv( 
input a, b,
output cout, sum )
{
    cout = a - b;
    sum = (a & b) | (cout & 0x8000);
};

function half_adder_gate_inv2( 
input a, b,
output cout, sum )
{
    cout = a - b;
    sum = (a & b) | (cout & 0x8000);
};

function half_adder_gate_inv3( 
input a, b,
output cout, sum )
{
    cout = a - b;
================================================================
example-2: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

function half_adder_output_sum( a, b, cout, sum )
{
	cout = a + b + sum;
	sum = cout & 0x1;
}

function half_adder_output_carry( a, b, cout, sum )
{
	cout = a + b + sum;
	sum = cout & 0x1;
}

function half_adder_output_sum_carry( a, b, cout, sum )
{
	cout = a + b + sum;
	sum = cout & 0x1;
}

function half_adder_output_carry_sum( a, b, cout, sum )
{
	cout = a + b + sum;
	sum = cout & 0x1;
}

function half_adder_output_sum_carry_sum( a, b, cout
================================================================
example-3: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// This is a full adder. A full adder adds two bits and produces a sum and carry-out.
module full_adder( 
input a, b,
output cout, sum, carry_out );

// This is a full adder. A full adder adds two bits and produces a sum and carry-out.
module full_adder_with_carry_out( 
input a, b,
output cout, sum, carry_out );

// This is a full adder. A full adder adds two bits and produces a sum and carry-out.
module full_adder_with_carry_out_with_carry_in( 
input a, b,
output cout, sum, carry_out, carry_in );

// This is a full adder. A full adder adds two bits and produces a sum and carry-out.
module full_adder
================================================================
example-4: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

function half_adder_module()
end

function half_adder_module( a, b )
end

function half_adder_module( a, b )
end

function half_adder_module( a, b )
end

function half_adder_module( a, b )
end

function half_adder_module( a, b )
end

function half_adder_module( a, b )
end

function half_adder_module( a, b )
end

function half_adder_module( a, b )
end

function half_adder_module( a, b )
end

function half_adder_module( a, b )
end

function half_adder_module( a, b )
end

function half_adder_module( a, b )
end

function half_adder_module(
================================================================
example-5: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// This is a full adder. A full adder adds two bits and produces a sum and carry-out.
module full_adder( 
input a, b,
output cout, sum );

// This is a half subtractor. A half subtractor subtracts two bits and produces a sum and carry-out.
module half_subtractor( 
input a, b,
output cout, sum );

// This is a full subtractor. A full subtractor subtracts two bits and produces a sum and carry-out.
module full_subtractor( 
input a, b,
output cout, sum );

// This is a carry-out generator. It produces a carry-out bit.
module carry_out_generator( 
input cout,
output cout );

// This is a carry-out generator. It produces a carry-out bit.
module carry
================================================================
example-6: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// The full adder adds two bits and produces a sum and carry-out.
module full_adder( 
input a, b,
output cout, sum );

// The carry-out is the sum of the two inputs.
module carry_out( 
input a, b,
output cout, sum );

// The carry-out is the sum of the two inputs.
module carry_out( 
input a, b,
output cout, sum );

// The carry-out is the sum of the two inputs.
module carry_out( 
input a, b,
output cout, sum );

// The carry-out is the sum of the two inputs.
module carry_out( 
input a, b,
output cout, sum );

// The carry-out is the sum of the two inputs.
module carry_out( 
input a,
================================================================
example-7: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// This is a full adder. A full adder adds two bits and produces a sum and carry-out.
module full_adder( 
input a, b,
output cout, sum );

// This is a half subtracter. A half subtracter subtracts two bits and produces a sum and carry-out.
module half_subtractor( 
input a, b,
output cout, sum );

// This is a full subtracter. A full subtracter subtracts two bits and produces a sum and carry-out.
module full_subtractor( 
input a, b,
output cout, sum );

// This is a half carry-out shifter. A half carry-out shifter shifts a bit and produces a sum and carry-out.
module half_carry_out_shifter( 
input a, b,
output cout, sum );

//
================================================================
example-8: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// The half adder is a single bit adder.
// The input is two bits, and the output is a single bit.
// The sum is the sum of the inputs, and the carry-out is the carry-out of the inputs.
// The sum is the low-order bit of the sum, and the carry-out is the high-order bit of the sum.
// The carry-out is the carry-out of the inputs.
// The carry-out is the carry-out of the inputs.
// The carry-out is the carry-out of the inputs.
// The carry-out is the carry-out of the inputs.
// The carry-out is the carry-out of the inputs.
// The carry-out is the carry-out of the inputs.
// The carry-out is the carry-out of the inputs.
// The carry-out is the carry-out
================================================================
example-9: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

always @(posedge clk)
  sum <= a + b + (cout & 1);


================================================================
example-10: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

always @(posedge clk)
begin
  sum <= sum + a + b;
  cout <= sum;
end

================================================================
example-11: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// The half adder is a module. It has two inputs and two outputs.
// It is a function.
function half_adder( a, b, cout, sum ) {
  // The half adder has two inputs and two outputs.
  // The inputs are a and b. The outputs are cout and sum.
  // The inputs are passed by reference.
  // The outputs are passed by value.
  // The inputs are passed by value.
  // The outputs are passed by reference.
  // The inputs are passed by reference.
  // The outputs are passed by reference.
  // The inputs are passed by reference.
  // The outputs are passed by reference.
  // The inputs are passed by reference.
  // The outputs are passed by reference.
  // The inputs are passed by reference.
  // The outputs are passed by reference.
  // The inputs are passed by
================================================================
example-12: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// This is a full adder. A full adder adds two bits and produces a sum and carry-out.
module full_adder( 
input a, b,
output cout, sum );

// This is a half subtractor. A half subtractor subtracts two bits and produces a sum and carry-out.
module half_subtractor( 
input a, b,
output cout, sum );

// This is a full subtractor. A full subtractor subtracts two bits and produces a sum and carry-out.
module full_subtractor( 
input a, b,
output cout, sum );

// This is a carry-out generator. The carry-out is the bit that is shifted out of the carry-out register.
module carry_out_generator( 
input cout,
output cout_out );

// This is a carry-out shif
================================================================
example-13: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// The half adder is a single bit adder.

// The half adder is a single bit adder.
module half_adder( 
input a, b,
output cout, sum );

// The half adder is a single bit adder.

// The half adder is a single bit adder.
module half_adder( 
input a, b,
output cout, sum );

// The half adder is a single bit adder.

// The half adder is a single bit adder.
module half_adder( 
input a, b,
output cout, sum );

// The half adder is a single bit adder.

// The half adder is a single bit adder.
module half_adder( 
input a, b,
output cout, sum );

// The half adder is a single bit add
================================================================
example-14: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// This is a full adder. A full adder adds two bits and produces a sum and carry-out.
module full_adder( 
input a, b,
output cout, sum );

// This is a half subtracter. A half subtracter subtracts two bits and produces a sum and carry-out.
module half_subtracter( 
input a, b,
output cout, sum );

// This is a full subtracter. A full subtracter subtracts two bits and produces a sum and carry-out.
module full_subtracter( 
input a, b,
output cout, sum );

// This is a carry-out generator. A carry-out generator produces a carry-out.
module carry_out( 
input cout,
output cout );

// This is a carry-out generator. A carry-out generator produces a carry-
================================================================
