example-0: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out. 
// (wraps around at carry)
always @( posedge sel )
 begin
  if ( sel )
    if ( sel == 1 )
      a > out
    else
      b > out
  else
    out > 0;
 end

================================================================
example-1: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out. 
assign out = a | (sel==1); 

================================================================
example-2: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out.

// Tests if the highest bit is 1. Forces sel if it is, to ensure we eventually
// see the correct priority.
module test(
output [12:0] out_d,
input  [12:0] in_d,
input  [12:0] sel_in
);

wire sel_force_high;
always @( posedge sel_in )
        sel_force_high <= {sel_force,' = 1 };

always @( posedge a )
        if (sel_force_high == 0)
            out_d <= in_d;
        else
            out_d <= sel_in;


================================================================
example-3: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out. 
assign out = (sel==0) ? a : b;


================================================================
example-4: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out.

================================================================
example-5: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out. 
always @(posedge clk) begin
if ((sel==0) & (a!=old_a)) begin
   old_a=a;
   out=a;
end
else begin
   if ((sel==1) & (b!=old_b)) begin
      old_b=b;
      out=b;
   end
end
end

================================================================
example-6: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out.
// End of Module

================================================================
example-7: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out. 

assign out = (sel==a);
// 0  --->   0
// 1  --->   1
// 2  --->   0
// 3  --->   1


================================================================
example-8: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out. 
void main ( ) {
  out=~(sel&a);
}
================================================================
example-9: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out. 
 

================================================================
