example-0: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out. 
// Here is an OR gate, each AND gate is an AND gate.
//
wire d1, d2;
d1 #(5) d1_r(a, b, sel, d1);
d1 #(5) d2_r(d1, d2, d1, d2);
assign out = d1 & d2;

================================================================
example-1: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out.
//assign out = ( sel == 1 ) ? a : b;

================================================================
example-2: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out.
wire [4:0] mux1;
wire [4:0] mux2;
wire [4:0] mux3;
mux mux_1(a[3:0], sel, mux1);
mux mux_2( mux1[3:0], sel, mux2[3:0]);
mux mux_3( mux2[3:0], sel, mux3[3:0]);
mux mux_4( mux3[3:0], sel, mux4[3:0]);
mux mux_5( mux4[3:0], sel, mux5[3:0]);
assign out = mux4[4] ? mux4[3:0] : mux4[3:0];

================================================================
example-3: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out.
// FIXME: This is a mux, then mux is a 1-to-1 mux.
// assign out = sel? b : a;

================================================================
example-4: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out. 
// Here is an implicit bound to a 1'b1, which is a 1'b0
// which is more than 1'b1.
assign out = sel? b : a;

================================================================
