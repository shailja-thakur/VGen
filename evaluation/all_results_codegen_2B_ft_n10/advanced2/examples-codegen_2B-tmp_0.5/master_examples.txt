example-0: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// Otherwise, q is left unchanged.

always @(posedge clk)
begin
 if (reset || (slowena && q == 4'b1001))
 q <= 4'b0;
 else if (slowena && q < 4'b1001)
 q <= q + 1;
 else
 q <= q;
end


================================================================
example-1: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, the output q is not changed.
// If the ena input is not high, the output q is incremented if the reset is low.

always @(posedge clk)
begin
 if (reset) q <= 4'b0000;
 else if (slowena)
 begin
 if (q == 4'b1001) q <= 4'b0000;
 else q <= q + 1'b1;
 end
 else q <= q;
 end

================================================================
example-2: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
 if (reset)
 q <= 0;
 else if (slowena && q < 9)
 q <= q + 1;
 else if (slowena)
 q <= 0;


================================================================
example-3: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
 if (reset)
 q <= 0;
 else if (slowena)
 if (q < 9)
 q <= q + 1;
 else
 q <= 0;
 end

================================================================
example-4: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

// When the ena input is low, the output q is not incremented.

always @(posedge clk)
begin
 if (reset)
 q <= 0;
 else if (slowena && (q < 9))
 q <= q + 1;
 end

================================================================
example-5: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// Otherwise, q is not incremented.
always @(posedge clk)
 begin
 if (reset)
 q <= 0;
 else if (slowena)
 if (q != 9)
 q <= q + 1;
 end

================================================================
example-6: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, do nothing.
always @(posedge clk) begin
 if(reset)
 q <= 0;
 else if(slowena) begin
 if(q != 9)
 q <= q + 1;
 end
 end

================================================================
example-7: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
 if (reset)
 q <= 4'b0;
 else if (slowena)
 if (q != 4'b1001)
 q <= q + 1;
 else
 q <= 4'b0;
end


================================================================
example-8: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
 if(reset)
 q <= 0;
 else if(slowena)
 if(q < 9)
 q <= q + 1;
 else
 q <= 0;


================================================================
example-9: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is high, then q is incremented.
always @(posedge clk)
begin
 if (reset)
 q <= 4'b0;
 else if (slowena)
 if (q < 9)
 q <= q + 1'b1;
 else
 q <= 4'b0;
end


================================================================
