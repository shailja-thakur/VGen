// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "always @(in) \nbegin\n\tcase(in)\n\t3'b000: pos = 2'b00;\n\t3'b001: pos = 2'b01;\n\t3'b010: pos = 2'b10;\n\t3'b011: pos = 2'b11;\n\tdefault: pos = 2'b00;\n\tendcase\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "always @(in)\ncase(in)\n3'b000: pos = 2'b00;\n3'b001: pos = 2'b01;\n3'b010: pos = 2'b10;\n3'b011: pos = 2'b11;\n3'b100: pos = 2'b00;\n3'b101: pos = 2'b01;\n3'b110: pos = 2'b10;\n3'b111: pos = 2'b11;\ndefault: pos = 2'b00;\nendcase\n"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "always @(*)\nbegin\ncasex (in)\n3'b0_xxx: pos = 2'b00;\n3'b1_000: pos = 2'b00;\n3'b1_001: pos = 2'b01;\n3'b1_010: pos = 2'b10;\n3'b1_011: pos = 2'b11;\ndefault: pos = 2'b00;\nendcase\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "always @( * )\nbegin\ncase( in )\n3'b000: pos = 2'b00;\n3'b001: pos = 2'b01;\n3'b010: pos = 2'b10;\n3'b011: pos = 2'b11;\nendcase\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "always@(*)\ncase(in)\n3'b000: pos=2'b00; \n3'b001: pos=2'b01;\n3'b010: pos=2'b10;\n3'b011: pos=2'b11;\ndefault: pos=2'b00;\nendcase\n"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "always @( in ) begin\nif (in == 3'b000) begin\npos = 2'b00;\nend\nelse if (in == 3'b001) begin\npos = 2'b01;\nend\nelse if (in == 3'b010) begin\npos = 2'b10;\nend\nelse if (in == 3'b011) begin\npos = 2'b11;\nend\nelse if (in == 3'b100) begin\npos = 2'b00;\nend\nelse if (in == 3'b101) begin\npos = 2'b10;\nend\nelse if (in == 3'b110) begin\npos = 2'b11;\nend\nelse if (in == 3'b111) begin\npos = 2'b11;\nend\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "always @( in )\ncase ( in )\n3'b000 : pos = 2'b00;\n3'b001 : pos = 2'b01;\n3'b010 : pos = 2'b10;\n3'b011 : pos = 2'b11;\ndefault : pos = 2'b00;\nendcase\n"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "always @(in)\ncase(in)\n3'b000: pos = 2'b00;\n3'b001: pos = 2'b01;\n3'b010: pos = 2'b10;\n3'b011: pos = 2'b11;\nendcase\n"
    },
    {
      "finish_reason": "stop",
      "index": 8,
      "logprobs": null,
      "text": "always @(*)\nbegin\ncase (in)\n3'b000 : pos = 2'b00;\n3'b001 : pos = 2'b01;\n3'b010 : pos = 2'b10;\n3'b011 : pos = 2'b11;\nendcase\nend\n"
    },
    {
      "finish_reason": "length",
      "index": 9,
      "logprobs": null,
      "text": "always @(*)\nif (in[2]==1'b1)\nassign b=in[2];\nelse if (in[1]==1'b1)\nassign b=in[1];\nelse if (in[0]==1'b1)\nassign b=in[0];\nelse\nassign b=0;\nalways @(*)\nif (in[2]==1'b1)\nassign sel=1'b1;\nelse if (in[1]==1'b1)\nassign sel=1'b1;\nelse if (in[0]==1'b1)\nassign sel=1'b1;\nelse\nassign sel=1'b0;\nalways @(*)\nif (in[2]==1'b1)\nassign out=2'b11"
    }
  ],
  "created": 1663606936,
  "id": "cmpl-SUpjcLZX7Ezgem6jwo5RuWQ6PiiNY",
  "model": "codegen",
  "object": "text_completion",
  "usage": {
    "completion_tokens": 1078,
    "prompt_tokens": 65,
    "total_tokens": 1143
  }
}