example-0: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk) begin
  if (in[0]) pos <= 1'b0;
  else if (in[1]) pos <= 1'b1;
  else if (in[2]) pos <= 1'b2;
  else if (in[3]) pos <= 1'b3;
  else pos <= 1'b0;
end

================================================================
example-1: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk) begin
  if (sel) pos <= in;
  else pos <= 0;
end

================================================================
example-2: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk) begin
	if( in[2] == 1 ) pos <= 1;
	else if( in[1] == 1 ) pos <= 2;
	else if( in[0] == 1 ) pos <= 3;
	else pos <= 0;
end

================================================================
example-3: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk) begin
  if (sel)
    pos <= in;
  else
    pos <= 0;
end

================================================================
example-4: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk) begin
  case(in)
    0: pos <= 0;
    1: pos <= 1;
    2: pos <= 2;
    3: pos <= 3;
    4: pos <= 4;
    5: pos <= 5;
    6: pos <= 6;
    7: pos <= 7;
    8: pos <= 8;
    9: pos <= 9;
    10: pos <= 10;
    11: pos <= 11;
    12: pos <= 12;
    13: pos <= 13;
    14: pos <= 14;
    15: pos <= 15;
    16: pos <= 16;
    17: pos <= 17;
    18: pos <= 18;
    19: pos <= 19;
    20: pos <= 20;
    21: pos
================================================================
example-5: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk) begin
  if (sel == 1)
    pos <= b;
end

================================================================
example-6: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @( posedge a or posedge b )
begin
  if ( in[0] )
  begin
    pos <= 1;
  end
  else if ( in[1] )
  begin
    pos <= 2;
  end
  else if ( in[2] )
  begin
    pos <= 3;
  end
  else
  begin
    pos <= 0;
  end
end

================================================================
example-7: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk) begin
    if(sel) pos <= in;
    else pos <= 0;
end

================================================================
example-8: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge reset) begin
	if (reset)
		pos <= 0;
	else if (in[1] == 1)
		pos <= 1;
	else if (in[0] == 1)
		pos <= 2;
	else
		pos <= 0;
end

================================================================
example-9: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk) begin
  if (sel)
    pos <= in;
  else
    pos <= a;
end

================================================================
example-10: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk)
begin
  if (sel)
    pos <= in[0];
  else
    pos <= in[1];
end

================================================================
example-11: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
assign out = ( sel & in ) | ( ~sel & pos );

// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [3:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
assign out = ( sel & in ) | ( ~sel & pos );

// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [4:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign
================================================================
example-12: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk) begin
  if (sel)
  {
    if (in[0]) pos <= 2;
    else if (in[1]) pos <= 1;
    else pos <= 0;
  }
  else
  {
    if (in[0]) pos <= 1;
    else if (in[1]) pos <= 2;
    else pos <= 0;
  }
end

================================================================
example-13: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk) begin
  if (sel==1) {
    pos <= in;
  } else {
    pos <= {in[1], in[0]};
  }
end

================================================================
example-14: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk) begin
    if ( in[1] == 1 ) {
        pos <= 1;
    } else if ( in[2] == 1 ) {
        pos <= 2;
    } else if ( in[3] == 1 ) {
        pos <= 3;
    } else {
        pos <= 0;
    }
end

================================================================
example-15: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk) begin
  if(sel)
    pos <= in;
  else
    pos <= 0;
end

================================================================
example-16: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge CLK)
begin
  if (sel)
    pos <= in;
  else
    pos <= 0;
end

// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge CLK)
begin
  if (sel)
    pos <= in;
  else
    pos <= 0;
end

// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
================================================================
example-17: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk) begin
  if (sel == 1)
    pos <= b;
end

================================================================
example-18: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk) begin
  pos <= (in[0] | in[1]);
end

================================================================
example-19: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk) begin
  if(sel)
    pos <= in;
  else
    pos <= a;
end

================================================================
