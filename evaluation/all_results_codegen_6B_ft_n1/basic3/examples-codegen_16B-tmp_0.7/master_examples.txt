example-0: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ ( * ) 
begin 
case ( in ) 
3'b000: pos = 2'b00; 
3'b001: pos = 2'b01; 
3'b010: pos = 2'b10; 
3'b011: pos = 2'b11; 
default: pos = 2'b00; 
endcase 
end 

================================================================
example-1: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or sel) begin
if (sel) begin
case (in)
3'd0: pos = 2'd0;
3'd1: pos = 2'd0;
3'd2: pos = 2'd0;
3'd3: pos = 2'd0;
3'd4: pos = 2'd0;
3'd5: pos = 2'd1;
3'd6: pos = 2'd0;
3'd7: pos = 2'd0;
3'd8: pos = 2'd0;
3'd9: pos = 2'd0;
3'd10: pos = 2'd0;
default: pos = 2'd0;
endcase
end
else pos = 2'd0; 
end

================================================================
example-2: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or pos)
begin
	case (in[2:0])
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	3'b100: pos = 2'b11;
	3'b101: pos = 2'b10;
	3'b110: pos = 2'b01;
	3'b111: pos = 2'b00;
	default: pos=2'b00;
	endcase
end

================================================================
example-3: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @( in or sel )
begin
	case ( sel )
	0: pos = 2'bz;	// When sel=0, don't drive anything. Output only depends on in.
	1: pos = in;	// When sel=1, output is same as input.
	endcase
end

================================================================
example-4: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @*
	case(in)
	3'b000: pos=2'b00;
	3'b001: pos=2'b01;
	3'b010: pos=2'b10;
	3'b011: pos=2'b11;
	3'b100: pos=2'b10;
	3'b101: pos=2'b11;
	3'b110: pos=2'b00;
	3'b111: pos=2'b01;
	endcase

================================================================
example-5: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin
case (in)
3'b000: pos=2'b11;
3'b001: pos=2'b10;
3'b010: pos=2'b01;
3'b011: pos=2'b00;
default: pos=2'b00;
endcase
end

================================================================
example-6: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin
case (in)
	3'b000: pos = 2'b00;	// nothing high
	3'b001: pos = 2'b01;	// first input is high
	3'b010: pos = 2'b01;	// second input is high
	3'b011: pos = 2'b10;	// both inputs are high
	3'b100: pos = 2'b10;	// second input is high
	3'b101: pos = 2'b10;	// both inputs are high
	3'b110: pos = 2'b00;	// nothing high
	3'b111: pos = 2'b10;	// both inputs are high
	default: pos = 2'b00;	// nothing high
endcase

end

================================================================
example-7: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @( in or sel )
	case ( sel )
	1'b0: pos = 2'b00;
	1'b1: pos = in;
	endcase

================================================================
example-8: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (sel or in)
begin
	case (sel)
	1'b0: pos = 2'b00;
	1'b1: pos = in;
	endcase
end

================================================================
example-9: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or sel)
begin
	if(sel) begin
	case(in)
	3'b000: pos=2'b00;
	3'b001: pos=2'b01;
	3'b010: pos=2'b10;
	3'b011: pos=2'b11;
	3'b100: pos=2'b00;
	3'b101: pos=2'b01;
	3'b110: pos=2'b10;
	3'b111: pos=2'b11;
	endcase
	end
	else pos=2'b00;
end

================================================================
example-10: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ ( in or sel ) 
begin
	if ( sel == 1'b1 ) 
	begin
	case ( in ) 
	3'b000: 
	begin
	pos = 2'b00; 
	end 
	3'b001: 
	begin
	pos = 2'b01; 
	end 
	3'b010: 
	begin
	pos = 2'b10; 
	end 
	3'b011: 
	begin
	pos = 2'b11; 
	end 
	endcase
	end 
	else 
	begin 
	pos = 2'b00; 
	end 
	end 
	
================================================================
example-11: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @( in )
begin
	casex ( in )
	// Inputs 0 and 1 are encoded in 2 bits
	4'b0xxx: pos = 2'b00;	// Input 0
	4'b1xxx: pos = 2'b01;	// Input 1
	// Input 2 is encoded in 3 bits
	4'b2xxx: pos = 2'b10;	// Input 2
	// Input 3, 4, and 5 are encoded in 3 bits
	4'b3xxx, 4'b4xxx, 4'b5xxx: pos = 2'b11;
	// By default, return 000
	default: pos = 2'b00;
	endcase
end

================================================================
example-12: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or posedge pos[1])
begin
	case(in)
	3'b000: pos=2'b11; 	// FALLTHROUGH
	3'b001: pos=2'b01; 	// FALLTHROUGH
	3'b010: pos=2'b10; 	// FALLTHROUGH
	3'b011: pos=2'b00; 	// FALLTHROUGH
	3'b100: pos=2'b00; 	// FALLTHROUGH
	3'b101: pos=2'b01; 	// FALLTHROUGH
	3'b110: pos=2'b10; 	// FALLTHROUGH
	3'b111: pos=2'b11; 	// FALLTHROUGH
	default: pos
================================================================
example-13: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or pos)
begin
if (in == 3'b111)
 pos = 2'b11;	// When all inputs are 1, output is 3, i.e. 111
else
 pos = 2'b00;	// Otherwise, output is 0
end

================================================================
example-14: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or negedge pos[0])
begin
	if (pos[0] == 1'b0) // when pos[0] is 0
	begin
	// This is the start state which assigns 0 to output.
	// It is a 3-bit priority encoder.
	pos[1:0] = 0;
	end
	else 
	begin
	if (in[2] == 1'b1) // when in[2] is 1
	begin
	// This is the next state which assigns 2 to output.
	// It is a 3-bit priority encoder.
	pos[1:0] = 2;
	end
	else if (in[1] == 1'b1) // when in[1] is 1
	begin
	// This is the next state which assigns 1 to output.
	// It is a 3
================================================================
example-15: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) 
begin
	casex(in)
	4'b0xxx: pos = 2'bxx;	// 6 least sig. bits are all 0.
	4'b1000: pos = 2'b00;	// 4 most sig. bits are all 1.
	4'b1001: pos = 2'b01;
	4'b1010: pos = 2'b10;
	4'b1011: pos = 2'b11;
	default: pos = 2'b00;
	endcase
end

================================================================
example-16: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in) begin
case (in)
	3'd0: pos = 2'd2;
	3'd1: pos = 2'd1;
	3'd2: pos = 2'd0;
	3'd3: pos = 2'd3;
	3'd4: pos = 2'd6;
	3'd5: pos = 2'd5;
	3'd6: pos = 2'd4;
	3'd7: pos = 2'd7;
	default: pos = 2'd0;
endcase
end

================================================================
example-17: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or sel)
begin
	if (in[2]==1'b1)
	begin
	pos = 2'b11;
	end
	else if (in[1]==1'b1)
	begin
	pos = 2'b10;
	end
	else if (in[0]==1'b1)
	begin
	pos = 2'b01;
	end
	else
	begin
	pos = 2'b00;
	end
end

================================================================
example-18: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or sel)
begin
if(sel) begin
 case (in)
3'd0: pos = 2'd0;
3'd1: pos = 2'd1;
3'd2: pos = 2'd2;
3'd3: pos = 2'd3;
3'd4: pos = 2'd4;
3'd5: pos = 2'd5;
3'd6: pos = 2'd6;
3'd7: pos = 2'd7;
default: pos = 2'd0;
endcase
end
else pos = 2'd0;
end

================================================================
example-19: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or pos)
begin
if (in[2]==1) begin
pos[1]=1;
pos[0]=0;
end
else if (in[1]==1) begin
pos[1]=0;
pos[0]=1;
end
else if (in[0]==1) begin
pos[1]=0;
pos[0]=0;
end
else begin
pos[1]=0;
pos[0]=0;
end
end 

================================================================
example-20: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always@( in or sel )
begin
	if(sel == 1) begin
	pos = 2'd1;
	end
	else if (in[2] == 1)
	begin
	pos = 2'd2;
	end
	else if (in[1] == 1)
	begin
	pos = 2'd3;
	end
	else if (in[0] == 1)
	begin
	pos = 2'd4;
	end
	else begin
	pos = 2'd0;
	end
end

================================================================
example-21: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, keep original value of out
always @ (in or sel)
begin
	if (sel==1) begin
	case (in)
	// Mux case
	3'b000: pos = 2'b10;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b01;
	3'b011: pos = 2'b00;
	3'b100: pos = 2'b00;
	3'b101: pos = 2'b01;
	3'b110: pos = 2'b10;
	3'b111: pos = 2'b01;
	// default case: keep original value of pos
	default: pos = 2'b00;
	endcase
	end
	else pos = 2'b00;
end

================================================================
example-22: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
case (in)
3'b000: pos = 2'b00; 
3'b001: pos = 2'b01;
3'b010: pos = 2'b10;
3'b011: pos = 2'b11;
endcase 



================================================================
example-23: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin
 case (in)
 3'b000: pos = 2'b00;	// I-priority
 3'b001: pos = 2'b01;	// II-priority
 3'b010: pos = 2'b10;	// III-priority
 3'b011: pos = 2'b11;	// IV-priority
 3'b100: pos = 2'b11;	// V-priority
 default: pos = 2'b00;	// X-priority 
 endcase
end

================================================================
example-24: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @( in )
begin
	casex ( in )
	//default case is last one
	3'bXXX: pos = 2'b11;
	//fall through when zero
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b01;
	3'b100: pos = 2'b10;
	3'b101: pos = 2'b11;
	3'b110: pos = 2'b01;
	3'b111: pos = 2'b00;
	//can't be a 3 bit number with more than 4 bits high
	default: pos = 2'bXX;
	endcase
end

================================================================
example-25: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in) 
case(in) 
3'b000: pos=2'b00; 
3'b001: pos=2'b01; 
3'b010: pos=2'b10; 
3'b011: pos=2'b11; 
3'b100: pos=2'b00; 
3'b101: pos=2'b01; 
3'b110: pos=2'b10; 
3'b111: pos=2'b11; 
default: pos=2'b00; 
endcase 

================================================================
example-26: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin
case(in)
3'b000: pos=2'b00;
3'b001: pos=2'b01;
3'b010: pos=2'b10;
3'b011: pos=2'b11;
default: pos=2'b00;
endcase
end

================================================================
example-27: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in)
begin
	if (in[2] == 1'b1)
	begin
	pos = 2'd2;	
	end
	// else sel=0, do nothing
	else if (in[1] == 1'b1)
	begin
	pos = 2'd1;
	end
	else if (in[0] == 1'b1)
	begin
	pos = 2'd0;
	end
	// else do nothing
	end

================================================================
example-28: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always@(in or pos)
begin
 casex (in)
 3'b000,3'b001: pos = 2'b00;
 3'b010,3'b011: pos = 2'b01;
 3'b100,3'b101: pos = 2'b10;
 3'b110,3'b111: pos = 2'b11;
 //default: pos = 2'bz;
 endcase
end

================================================================
example-29: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin
case (in)
3'b000: pos = 2'b00; 
3'b001: pos = 2'b01; 
3'b010: pos = 2'b10; 
3'b011: pos = 2'b11; 
3'b100: pos = 2'b10; 
default: pos = 2'b00; 
endcase 
end

================================================================
example-30: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or posedge pos)
	begin
	if(in[2:0]==3'b111)
	pos=2'b00;
	else if(in[2:0]==3'b110)
	pos=2'b01;
	else if(in[2:0]==3'b101)
	pos=2'b10;
	else
	pos=2'b11;
	end

================================================================
example-31: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in)
begin
 casex (in)
 3'b001 : pos = 2'b00;
 3'b010 : pos = 2'b01;
 3'b100 : pos = 2'b10;
 default : pos = 2'b00;
 endcase
end

================================================================
example-32: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or negedge pos) begin
	case(in)
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	endcase
end

================================================================
example-33: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ ( in ) 
begin 
	casex ( in ) 
	// 3'b000
	0 : pos = 2'b00;
	// 3'b001
	1 : pos = 2'b01;
	// 3'b010
	2 : pos = 2'b10; 
	// 3'b011
	3 : pos = 2'b11;
	// 3'b100
	4 : pos = 2'b00;
	// 3'b101
	5 : pos = 2'b01;
	// 3'b110
	6 : pos = 2'b10;
	// 3'b111
	7 : pos = 2'b11;
	// default
	default : pos = 2'b00;
	endcase
end 

================================================================
example-34: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
case(in)
3'b000: pos=2'b00;
3'b001: pos=2'b01;
3'b010: pos=2'b10;
3'b011: pos=2'b11;
default: pos=2'b00;
endcase
end

================================================================
example-35: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or sel)
begin
	case(sel)
	1'b0: pos=2'b00;
	1'b1: pos=in;
	endcase
end

================================================================
example-36: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ ( in ) 
	begin
	// For each bit in the input vector...
	for ( byte_index = 0; byte_index <= (2**3)-1; byte_index = byte_index + 1 ) 
	begin
	// Case statement for each bit in the byte
	case ( in[byte_index*8 +: 8] )
	16'h0001:
	// When the first bit is low, output is 0
	begin
	pos = 2'b00;
	end
	16'h0002:
	// When the second bit is low, output is 1
	begin
	pos = 2'b01;
	end
	16'h0004:
	// When the third bit is low, output is 2
	begin
	pos = 2'b10;
	end
	16'h0008:
	// When
================================================================
example-37: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or posedge pos[0]) begin
	case (in)
	3'b000: pos = 2'b10;	// 00 --> 10
	3'b001: pos = 2'b01;	// 01 --> 01
	3'b010: pos = 2'b01;	// 10 --> 01
	3'b011: pos = 2'b00;	// 11 --> 00
	3'b100: pos = 2'b00;	// 100 --> 00
	3'b101: pos = 2'b10;	// 101 --> 10
	3'b110: pos = 2'b10;	// 110 --> 10
	3'b111: pos = 2'b00;	// 111 --> 00
	endcase
end

================================================================
example-38: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or pos)
case (in)
3'b000: pos = 2'b00;
3'b001: pos = 2'b01;
3'b010: pos = 2'b10;
3'b011: pos = 2'b11;
3'b100: pos = 2'b10;
3'b101: pos = 2'b01;
3'b110: pos = 2'b00;
3'b111: pos = 2'b11;
endcase

================================================================
example-39: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ ( in or pos )
begin
	case ( in )
	3'b000: pos = 2'b00; // 0
	3'b001: pos = 2'b01; // 1
	3'b010: pos = 2'b10; // 2
	3'b011: pos = 2'b11; // 3
	3'b100: pos = 2'b00; // 4
	3'b101: pos = 2'b01; // 5
	3'b110: pos = 2'b10; // 6
	3'b111: pos = 2'b11; // 7
	endcase
end

================================================================
example-40: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in)
begin
	case (in)
	3'b000: pos = 2'b00;	// low priority
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	3'b100: pos = 2'b01;	// highest priority
	3'b101: pos = 2'b11;
	3'b110: pos = 2'b10;
	3'b111: pos = 2'b00;
	default: pos = 2'b00;
	endcase
end

================================================================
example-41: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or sel)
begin
// If sel=0, output is 0
if(sel)
begin
// If all the input bits are the same, output is that input.
if(in[0]&&in[1]&&in[2])
pos = in[2:0];
// If any of the input bits are high, output is 2.
else
pos = 2;
end
// If sel=0, output is 0
else
pos = 0;
end

================================================================
example-42: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or negedge pos) begin
if(!pos)
assign pos = 2'b00;
else begin
casex(in)
3'b000: pos = 2'b11;
3'b001: pos = 2'b10;
3'b010: pos = 2'b01;
3'b011: pos = 2'b00;
default: pos = 2'b00;
endcase
end
end

================================================================
example-43: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ ( in ) begin
	pos = 2'b00;
	case(in)
	3'b000: pos = 2'b10;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b01;
	3'b011: pos = 2'b00;
	3'b100: pos = 2'b01;
	3'b101: pos = 2'b00;
	3'b110: pos = 2'b10;
	3'b111: pos = 2'b00;
	endcase
end

================================================================
example-44: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
case (in)
3'b000 : pos = 2'b00;
3'b001 : pos = 2'b01;
3'b010 : pos = 2'b10;
3'b011 : pos = 2'b11;
3'b100 : pos = 2'b01;
3'b101 : pos = 2'b10;
3'b110 : pos = 2'b11;
3'b111 : pos = 2'b11;
default : pos = 2'b00;
endcase
end

================================================================
example-45: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or pos)
begin
	if (in[2]==1'b1) begin
	pos = 2'b11;	
	end
	else if (in[1]==1'b1) begin
	pos = 2'b10;	
	end
	else if (in[0]==1'b1) begin
	pos = 2'b01;
	end
	else begin
	pos = 2'b00;
	end
end

================================================================
example-46: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or pos) 
	case (in)
//When sel=0, priority encoder output is 0
0: pos = 2'b00;
//When sel=1, priority encoder output is 1
1: pos = 2'b11;
//When sel=1, priority encoder output is 2
2: pos = 2'b10;
//When sel=1, priority encoder output is 3
3: pos = 2'b01;
//default case
default: pos=2'b00;
endcase

================================================================
example-47: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign #1 pos = (in[2] | in[1]) ? 2'b11 : 2'b00;

================================================================
example-48: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or negedge pos)
begin
	if(!pos)
	begin
	case(in)
	3’b000: pos = 2'b00; 
	3’b001: pos = 2'b01; 
	3’b010: pos = 2'b10; 
	3’b011: pos = 2'b11; 
	3’b100: pos = 2'b11; 
	3’b101: pos = 2'b11; 
	3’b110: pos = 2'b11; 
	3’b111: pos = 2'b11; 
	endcase
	end
else
	begin
	pos = 2'b00;
	end
	end

================================================================
example-49: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (sel or in)
begin
	case(sel)
	0: pos = 2'd0;
	1: pos = 2'd1;
	2: pos = 2'd2;
	3: pos = 2'd3;
	endcase
end

================================================================
