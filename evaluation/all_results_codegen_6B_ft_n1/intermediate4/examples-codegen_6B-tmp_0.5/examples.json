// Design a Moore state machine with two states 0 and 1, one input in, and one output out. Reset state is 0.
module simple_fsm(clk, reset, in, out);
input clk;
input reset;
input in;
output out;
wire out;
reg present_state, next_state;
// In state 0, if in=1, stay in state 0. In state 0, if in=0, go to state 1
// In state 1, if in=1, stay in state 1. In state 1, if in=0, go to state 0
// out=1 in state 0 and out=0 in state 1
{
  "choices": [
    {
      "finish_reason": "length",
      "index": 0,
      "logprobs": null,
      "text": "// Wires for in and out are created for you\nassign out = present_state & in;\n\nalways @(posedge clk)\nbegin\n\tif(reset)\n\tbegin\n\tnext_state = 0;\n\tpresent_state = 0;\n\tend\n\telse\n\tbegin\n\t// State transition logic\n\tcase(present_state)\n\t0: \n\tbegin\n\tif(in)\n\tbegin\n\tnext_state = 0;\n\tpresent_state = 1;\n\tend\n\telse\n\tbegin\n\tnext_state = 1;\n\tpresent_state = 0;\n\tend\n\tend\n\t1: \n\tbegin\n\tif(in)\n\tbegin\n\tnext_state = 1;\n\tpresent_state = 0;\n\tend\n\telse\n\tbegin\n\tnext_state = 0;\n\tpresent_"
    }
  ],
  "created": 1663599970,
  "id": "cmpl-2id95XeDanRA8uyfnMppmP1yuFwNq",
  "model": "codegen",
  "object": "text_completion",
  "usage": {
    "completion_tokens": 200,
    "prompt_tokens": 148,
    "total_tokens": 348
  }
}