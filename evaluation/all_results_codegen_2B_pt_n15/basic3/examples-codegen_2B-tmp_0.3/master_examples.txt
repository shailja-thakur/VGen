example-0: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos[1:0] = in[1:0] ? b[1:0] : b[0:1]; 
always @ (posedge clk) begin
  if (in[0] == 1)
    pos[1] = 1;
  else if (in[1] == 1)
    pos[0] = 1;
  else
    pos[1] = 0;
end
);

// This is a 4-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [3:0] in,
output reg [3:0] pos ); 
// When sel=1, assign b to out
assign pos[3:0] = in[3:0] ? b[3:0] : b[2:4]; 
always @ (posedge
================================================================
example-1: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[1] << 1) | in[0];

// This is a 4-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [4:0] in,
output reg [3:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[3] << 2) | (in[2] << 1) | (in[1] << 0) | (in[0] << 3);

// This is a 5-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [5:0] in,
output reg [4:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[4] <<
================================================================
example-2: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[1] << 1) | in[0];

// This is a 3-bit priority decoder. If none of the input bits are high, output is zero.
module priority_decoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[1] << 1) | in[0];

// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder_2( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[1] << 1) | in[0];

// This is a 3-bit priority decoder.
================================================================
example-3: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[0] | in[1]) ? 1 : 0;
// When sel=0, assign b to out
assign pos = (in[0] | in[1]) ? 0 : 1;

================================================================
example-4: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = in[1] ? in[0] : in[1];

reg [3:0] b;

always @(posedge clk)
begin
    if (pos == 0)
        b = 0;
    else if (pos == 1)
        b = 1;
    else if (pos == 2)
        b = 2;
    else if (pos == 3)
        b = 3;
    else if (pos == 4)
        b = 4;
    else if (pos == 5)
        b = 5;
    else if (pos == 6)
        b = 6;
    else if (pos == 7)
        b = 7;
    else if (pos == 8)
        b = 8;
    else if (pos == 9)
        b = 9;
    else if (pos == 10)
        
================================================================
example-5: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @( posedge in )
  pos = ( in & 0b11 ) >> 1;

================================================================
example-6: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = ( in[1] << 1 ) | in[0];
// When sel=0, assign b to out
assign pos = ( in[1] << 1 ) | in[0];
// When sel=1, assign b to out
assign pos = ( in[1] << 1 ) | in[0];
// When sel=0, assign b to out
assign pos = ( in[1] << 1 ) | in[0];
// When sel=1, assign b to out
assign pos = ( in[1] << 1 ) | in[0];
// When sel=0, assign b to out
assign pos = ( in[1] << 1 ) | in[0];
// When sel=1, assign b to out
assign pos = ( in[1] << 1 ) | in[0];
// When
================================================================
example-7: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[1] << 1) | in[0];
// When sel=0, assign b to out
assign pos = (in[1] << 1) | in[0];

================================================================
example-8: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[1] << 1) | in[0];

// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[1] << 1) | in[0];

// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[1] << 1) | in[0];

// This is a 3-bit priority encoder. If none
================================================================
example-9: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @( posedge in ) 
priority_encoder_sel( 
sel, 
b, 
pos ); 

// This is a 3-bit priority decoder. If none of the input bits are high, output is zero.
module priority_decoder( 
input [2:0] in, 
output reg [3:0] pos ); 
// When sel=1, assign b to out
always @( posedge in ) 
priority_decoder_sel( 
sel, 
b, 
pos ); 

// This is a 4-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder_4bit( 
input [4:0] in, 
output reg [5:0] pos ); 
// When sel=1, assign b to out
always @(
================================================================
example-10: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = in[1] ? b[1] : b[0];

// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = in[1] ? b[1] : b[0];

// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = in[1] ? b[1] : b[0];

// This is a 3-bit priority encoder
================================================================
example-11: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = ~in[2] & in[1];

// This is a 4-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [3:0] in,
output reg [3:0] pos ); 
// When sel=1, assign b to out
assign pos = ~in[3] & in[2] & in[1] & in[0];

// This is a 5-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [4:0] in,
output reg [4:0] pos ); 
// When sel=1, assign b to out
assign pos = ~in[4] & in[3] & in[2] & in[1] & in[0
================================================================
example-12: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[1] << 1) | in[0];

================================================================
example-13: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = 
  (in[1] ? 1 : 0) |
  (in[0] ? 2 : 0);
// When sel=0, assign b to out
assign pos = 
  (in[1] ? 2 : 0) |
  (in[0] ? 1 : 0);

================================================================
example-14: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = ( in[1] << 2 ) | ( in[0] >> 1 );
// When sel=0, assign b to out
assign pos = ( in[0] << 2 ) | ( in[1] >> 1 );

================================================================
