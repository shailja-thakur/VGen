example-0: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = sel ? pos : b; 

// This is a 2-bit priority decoder. If none of the input bits are high, output is zero.
module priority_decoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = sel ? pos : b; 

// This is a 4-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [4:0] in,
output reg [3:0] pos ); 
// When sel=1, assign b to out
assign pos = sel ? pos : b; 

// This is a 4-bit priority decoder. If none of the input bits are high, output is zero.
module priority_
================================================================
example-1: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = in[1] ? pos[1] : pos[0];

// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = in[1] ? pos[1] : pos[0];

// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = in[1] ? pos[1] : pos[0];

// This is a 3-bit priority encoder
================================================================
example-2: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge in)
begin
  if ( (in[0] ^ in[1]) & pos[0] )
  {
    out = b;
  }
  else
  {
    out = ~b;
  }
end
);

// This is a 4-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [4:0] in,
output reg [3:0] pos ); 
// When sel=1, assign b to out
always @(posedge in)
begin
  if ( (in[0] ^ in[1]) & pos[0] )
  {
    out = b;
  }
  else
  {
    out = ~b;
  }
end
);

// This is a 7-bit priority enc
================================================================
example-3: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = 
  ( ( in[1] << 1 ) & 0x1 ) |
  ( ( in[0] << 0 ) & 0x2 );

================================================================
example-4: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos=in[2]; 
reg [1:0] b; 
assign b=pos[2]; 

================================================================
example-5: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos[2:0] = in[2:0] ? 1'b1 : 1'b0;

// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos[2:0] = in[2:0] ? 1'b1 : 1'b0;

// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos[2:0] = in[2:0
================================================================
example-6: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @( posedge in )
begin
pos = (in[0] << 0) | (in[1] << 1);
end
);

// This is a 4-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [4:0] in,
output reg [3:0] pos ); 
// When sel=1, assign b to out
always @( posedge in )
begin
pos = (in[0] << 0) | (in[1] << 1) | (in[2] << 2) | (in[3] << 3);
end
);

// This is a 5-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [5:0] in,
output reg [4:
================================================================
example-7: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = ( in[1] ? 2 : in[0] ? 1 : 0 );

// This is a 4-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [3:0] in,
output reg [3:0] pos ); 
// When sel=1, assign b to out
assign pos = ( in[2] ? 4 : in[1] ? 3 : in[0] ? 2 : 0 );

// This is a 5-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [4:0] in,
output reg [5:0] pos ); 
// When sel=1, assign b to out
assign pos = ( in[3] ? 8 : in[2] ?
================================================================
example-8: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = in[0] ? b[0] : b[1]; 

reg [3:0] b[3:0] = pos;

reg [3:0] b[0] = pos;
reg [3:0] b[1] = pos;

reg [3:0] b[2] = pos;

reg [3:0] b[3] = pos;

reg [3:0] b[4] = pos;

reg [3:0] b[5] = pos;

reg [3:0] b[6] = pos;

reg [3:0] b[7] = pos;

reg [3:0] b[8] = pos;

reg [3:0] b[9] = pos;

reg [3:0] b[10] = pos;
================================================================
example-9: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = in[0] ? in[1] : in[0];
// When sel=0, assign b to out
assign pos = in[1] ? in[1] : in[0];

// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder_sel( 
input [2:0] in,
output reg [1:0] pos,
parameter sel = 0 ); 
// When sel=1, assign b to out
assign pos = in[0] ? in[1] : in[0];
// When sel=0, assign b to out
assign pos = in[1] ? in[1] : in[0];

// This is a 3-bit priority encoder. If none of the input bits are high, output is zero
================================================================
example-10: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos[1:0] = (in[0] << 4) | (in[1] >> 4);
// When sel=0, assign b to out
assign pos[1:0] = (in[1] << 4) | (in[0] >> 4);

================================================================
example-11: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos[1] = ( (in[1] >> 7) & 1 ) | 
                ( (in[0] >> 7) & 2 );
// When sel=0, assign b to out
assign pos[0] = ( (in[1] >> 6) & 1 ) | 
                ( (in[0] >> 6) & 2 );
);

always @(posedge clk)
    if (pos[1] == 1) out = 0;
    else if (pos[0] == 1) out = 1;
    else out = 0;


================================================================
example-12: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out

wire [7:0] a, b;

always @(posedge clk) 
begin
    if (in[0] == 1)
        a = a + 1;
    if (in[1] == 1)
        b = b + 1;
    pos = pos + 1;
end


================================================================
example-13: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[1]?0b10:0b00) | (in[0]?0b11:0b01); 

================================================================
example-14: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[2] << 2) | (in[1] << 1) | (in[0] << 0);

// This is a 2-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder(
input [3:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[3] << 1) | (in[2] << 0);

// This is a 1-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder(
input [4:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[4] << 0);

// This is
================================================================
