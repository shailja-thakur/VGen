example-0: 
// left shift and rotate operation
module left_rotate(clk,reset,amount,data,load,out);
input clk,reset;
input [2:0] amount;
input [7:0] data;
input load;
output reg [7:0] out;
// when load is high, load data to out
// left shift and rotate the register out by amount bits
always @(posedge clk, posedge reset)
begin
	if(reset)
	begin
	// reset
	out <= 0;
	end
	else if(load)
	begin
	out <= data;
	end
	else
	begin
	case(amount)
	// amount = 0
	3'b000:
	begin
	out[7:0] <= out[0:7];
	end
	// amount = 1
	3'b001:
	begin
	out[7:0] <= {out[6:0],out[7]};
	end
	// amount = 2
	3'b010:
	begin
	out[7:0] <= {out[5:0],out[7:1]};
	end
	// amount = 3
	3'b011:
	begin

================================================================
