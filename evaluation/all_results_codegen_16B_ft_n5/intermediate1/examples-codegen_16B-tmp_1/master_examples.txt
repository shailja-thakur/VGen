example-0: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
assign cout = a & b; //and 
assign sum = a ^ b; //xor or 

================================================================
example-1: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
assign sum = a ^ b;
assign cout = a & b;

================================================================
example-2: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

assign sum = a ^ b; //bünd a hafirlędeki ortadan kopyalandýa tapmalý
assign cout = a & b;


================================================================
example-3: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// output statements can only appear on the left hand side of an = operator

assign cout = (a & b); // A carry-out is calculated when both the inputs are lower than 9
assign sum = a ^ b; // The sum is generated by XORing the input switches 


================================================================
example-4: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

wire c, d, e;

// Four full adders combined together into one 4-input 2-output adder
fulladder fa0 ( a, b, 1'b0, 1'b0, sum, c );
fulladder fa1 ( a, b, c, 1'b0, d );
fulladder fa2 ( a, b, 1'b0, c, e );

// Output assignment
assign cout = c | d | e;


================================================================
