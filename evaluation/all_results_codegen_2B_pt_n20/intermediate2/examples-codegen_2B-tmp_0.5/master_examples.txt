example-0: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 

// This is a counter that counts from 1 to 12
module counter2( 
    input clk,
    input reset,
    output reg [3:0] q2
); 
// update q2 on the positive edge of the clock according to the following cases:
// on reset, assign q2 to 1
// else if q2 is 12, assign q2 to 1
// else, increment q2 by 1 

// This is a counter that counts from 1 to 12
module counter3( 
    input clk,
    input reset,
    output reg [3:0] q3
); 
// update q3 on the positive edge of the clock according to the following cases:
// on reset, assign q3 to 1
// else if q3 is 12, assign q3 to 1
// else, increment q3 by 1 

// This is a counter that counts
================================================================
example-1: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 

// This is a counter that counts from 1 to 12
module counter2( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 

// This is a counter that counts from 1 to 12
module counter3( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 

// This is a counter that counts from 1 to 12
module counter4( 
    
================================================================
example-2: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
initial begin
    counter.q <= (reset ? 1 : (q == 12 ? 1 : q + 1));
end
end

// This is a counter that counts from 1 to 12
module counter_with_reset( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
initial begin
    counter_with_reset.q <= (reset ? 1 : (q == 12 ? 1 : q + 1));
end
end

// This is a counter that counts from 1 to 12
module counter_with_reset_large( 
    input clk,
    input reset,
    output reg [3:0] q

================================================================
example-3: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
// end if 
initial begin
    q = 0;
    if (reset == 1) begin
        q = 1;
    end
    if (clk == 1) begin
        q = q + 1;
        if (q == 12) q = 1;
    end
end
// This is a counter that counts from 1 to 12
module counter2( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
// end if 
initial begin
    q = 0;
    if (reset == 1) begin
        q = 1;
    end
    if (clk == 1) begin
        q
================================================================
example-4: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
initial begin
    // initial value of q: 0, 0, 0
    q = 0;
    if ( reset == 1 )
        q = 1;
    else
        if ( q == 12 )
            q = 1;
        else
            q = q + 1;
end

// This is a counter that counts from 1 to 12
module counter2( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
initial begin
    // initial value of q: 0, 0, 0
    q = 0;
    if ( reset == 1 )
        q = 1;
    else
        if ( q ==
================================================================
example-5: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
initial begin 
    counter.q <= (reset ? 1 : (q == 12 ? 1 : q + 1));
end

================================================================
example-6: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
initial begin
    q <= 1;
    if ( reset == 1 ) begin
        q <= 1;
    end else if ( q[0] == 12 ) begin
        q <= 1;
    end else begin
        q <= q + 1;
end
end
// This is a counter that counts from 1 to 12
module counter2( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
initial begin
    q <= 1;
    if ( reset == 1 ) begin
        q <= 1;
    end else if ( q[0] == 12 ) begin
        q <= 1;
    end else begin
        
================================================================
example-7: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
initial begin
    q <= 1;
    if (reset) begin
        q <= 12;
    end else begin
        if (q == 12) begin
            q <= 1;
        end else begin
            q <= q + 1;
        end
    end
end

================================================================
example-8: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
//
// output q is always in the range [1:12]

// clk is the clock signal, reset is the reset signal, q is the counter output


================================================================
example-9: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
initial begin
    q <= 1;
    if ( reset = '0' ) begin
        q <= 1;
    end else begin
        if ( q == 12 ) begin
            q <= 1;
        end else begin
            q <= q + 1;
        end
    end
end

// This is a counter that counts from 0 to 12
module counter2( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 0
// else, increment q by 1 
initial begin
    q <= 0;
    if ( reset = '0' ) begin
        q <= 0;
    end else begin
        if ( q == 12 ) begin
            q <= 0;
        end else begin
            q <= q
================================================================
example-10: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 

initial begin 
    counter.q <= 1;
end

// This is a counter that counts from 1 to 12
module counter2( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 

initial begin 
    counter2.q <= 1;
end

// This is a counter that counts from 1 to 12
module counter3( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to
================================================================
example-11: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 

initial begin 
    q = 0;
    // on reset, assign q to 1
    if (reset) q = 1;
    else
    {
        if (q == 12) q = 1;
        else q++;
    }
end

// This is a counter that counts from 0 to 11
module counter_with_reset( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 0
// else if q is 11, assign q to 0
// else, increment q by 1 

initial begin 
    q = 0;
    // on reset, assign q to 0
    if (reset) q = 0;
    else
    {
        if (q == 11) q = 0;
================================================================
example-12: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
initial begin
    q <= 1;
    if (reset) begin
        q <= 12;
    else
        if (q == 12) begin
            q <= 1;
        else
            q <= q + 1;
end
end

// This is a counter that counts from 1 to 12
module counter2( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
initial begin
    q <= 1;
    if (reset) begin
        q <= 12;
    else
        if (q == 12) begin
            q <= 1;
        else
            q <= q + 1;
end
end

================================================================
example-13: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
initial begin
    q <= 1;
    if (reset == 1'b1) begin
        q <= 1;
    end else begin
        if (q == 12) begin
            q <= 1;
        end else begin
            q <- q + 1;
        end
    end
end

// This is a counter that counts from 0 to 12
module counter2( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 0
// else if q is 12, assign q to 0
// else, increment q by 1 
initial begin
    q <= 0;
    if (reset == 1'b1) begin
        q <= 0;
    end else begin
        if (q == 12) begin
            
================================================================
example-14: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
initial begin
    q = 1;
    if (reset == 1) begin
        q = 12;
    end else begin
        if (q == 12) begin
            q = 1;
        end else begin
            q = q + 1;
        end
    end
end 
// This is a counter that counts from 0 to 12
module counter2( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 0
// else if q is 12, assign q to 0
// else, increment q by 1 
initial begin
    q = 0;
    if (reset == 1) begin
        q = 12;
    end else begin
        if (q == 12) begin
            q = 0;
        
================================================================
example-15: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
initial begin
    q = (reset ? 1 : (q == 12 ? 1 : (q + 1)));
end

// This is a counter that counts from 1 to 12
module counter2( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
initial begin
    q = (reset ? 1 : (q == 12 ? 1 : (q + 1)));
end

// This is a counter that counts from 1 to 12
module counter3( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the
================================================================
example-16: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
wire [3:0] q;

// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
wire [3:0] q;

// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
wire [3:
================================================================
example-17: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 
// This is a counter that counts from 1 to 12

================================================================
example-18: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 

// This is a counter that counts from 1 to 12
module counter2( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 

// This is a counter that counts from 1 to 12
module counter3( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 

// This is a counter that counts from 1 to 12
module counter4( 
    
================================================================
example-19: 
// This is a counter that counts from 1 to 12
module counter( 
    input clk,
    input reset,
    output reg [3:0] q
); 
// update q on the positive edge of the clock according to the following cases:
// on reset, assign q to 1
// else if q is 12, assign q to 1
// else, increment q by 1 

void main() {
    counter q;
    
    // set q to 1 on reset
    q = 1;
    
    while (1) {
        // update q on the positive edge of the clock
        if (clk == 1) {
            q = (q == 12) ? 1 : q + 1;
        }
    }
}

================================================================
