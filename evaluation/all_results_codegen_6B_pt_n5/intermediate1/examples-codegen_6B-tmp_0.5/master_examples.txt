example-0: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// The full adder takes two inputs and produces two outputs.
module full_adder( 
input a, b,
output cout, sum, carry );

// The carry is a register. It is used to hold the carry-out of the half adder.
// It is initialized to zero.
reg carry;

// The half adder adds two bits and produces a sum and carry-out.
function half_adder_r( 
input a, b,
output cout, sum);

// The full adder adds two inputs and produces two outputs.
function full_adder_r( 
input a, b,
output cout, sum, carry );

// The carry is a register. It is used to hold the carry-out of the half adder.
// It is initialized to zero.
reg half_adder_carry;

// The half adder adds two bits
================================================================
example-1: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// This is a full adder. A full adder adds two more bits and produces a sum and carry-out.
module full_adder( 
input a, b,
output cout, sum, carry_out );

// This is a half subtractor. A half subtractor subtracts two bits and produces a sum and carry-out.
module half_subtractor( 
input a, b,
output cout, sum );

// This is a full subtractor. A full subtractor subtracts two more bits and produces a sum and carry-out.
module full_subtractor( 
input a, b,
output cout, sum, carry_out );

// This is a half multiplier. A half multiplier multiplies two bits and produces a sum and carry-out.
module half_multiplier( 
input a, b,
output cout, sum );

// This
================================================================
example-2: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

always @(posedge clk or negedge rst) begin
    if (rst) cout <= 0;
    else if (a == 0) cout <= b;
    else cout <= a + b + carry_out;
end

================================================================
example-3: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// This is a full adder. A full adder adds three bits and produces a sum and carry-out.
module full_adder( 
input a, b, c,
output cout, sum );

// This is a half subtracter. A half subtracter subtracts two bits and produces a sum and carry-out.
module half_subtracter( 
input a, b,
output cout, sum );

// This is a full subtracter. A full subtracter subtracts three bits and produces a sum and carry-out.
module full_subtracter( 
input a, b, c,
output cout, sum );

// This is a half xor. A half xor xors two bits and produces a sum and carry-out.
module half_xor( 
input a, b,
output cout, sum );

// This is a
================================================================
example-4: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

public half_adder( 
input a, b,
output cout, sum )
{
	this.a = a;
	this.b = b;
	this.cout = cout;
	this.sum = sum;
}

// The output is the sum.
public output
output()
{
	return this.sum;
}

// The output is the carry-out.
public output
carry_out()
{
	return this.cout;
}

// The output is the sum and the carry-out.
public output
output_sum()
{
	return this.sum, this.cout;
}

// The output is the sum and the carry-out and the carry-in.
public output
output_sum_carry()
{
	return this.sum, this.cout, this.a;

================================================================
