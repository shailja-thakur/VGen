example-0: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

wire [2:0] g, p;

assign {cout, sum} = a + b + cin;
assign cout = g[0] | (p[0] & b[0]);


================================================================
example-1: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

wire [1:0] c;

assign {c[0], c[1]} = a + b + c[0];
assign cout = (c[0] == 0) ? c[0] : 0;


================================================================
example-2: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

wire [2:0] c;

assign {c[2], c[1], c[0]} = a + b + c[2:1] + a;
assign cout = c[2] + c[1] + c[0] + a;


================================================================
example-3: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

wire [2:0] c;

xor (c[0], a, b);
xor (c[1], a, b);
xor (c[2], a, b);

and (c[0], a[0], b[0]);
and (c[1], a[1], b[1]);
and (c[2], a[2], b[2]);
and (c[3], a[3], b[3]);
and (c[4], a[4], b[4]);
and (c[5], a[5], b[5]);
and (c[6], a[6], b[6]);
and (c[7], a[7], b[7]);
and (c[8], a[8], b[8]);
and (c[9], a[9], b[9]);
and
================================================================
example-4: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
wire [2:0] c;

assign {c[2], c[1], c[0]} = a + b + c[0] + c[1] + c[2] + c[3] + c[4] + c[5] + c[6] + c[7];
assign cout = (c[2] ^ c[3]) ? ~(c[3] ^ c[4]) : (c[4] ^ c[5]);


================================================================
