// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "always @(in or pos) \nbegin \ncase(pos) \n0: if(in[2]) pos=2; \n1: if(in[1]) pos=2; \n2: if(in[0]) pos=2; \nendcase \nend \n"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "always @(*) \ncase(in) \n3'b000: pos=2'b00; \n3'b001: pos=2'b01; \n3'b010: pos=2'b10; \n3'b011: pos=2'b11; \ndefault: pos=2'bxx; \nendcase \n"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "always @(*) \nbegin \n\tcase({in}) \n\t3'd0: pos=2'd0; \n\t3'd1: pos=2'd0; \n\t3'd2: pos=2'd1; \n\t3'd3: pos=2'd1; \n\t3'd4: pos=2'd2; \n\t3'd5: pos=2'd2; \n\t3'd6: pos=2'd3; \n\t3'd7: pos=2'd3; \n\tendcase \nend \n"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "always @(*) begin \n case (in) \n 3'b000 : pos = 2'b00; \n 3'b001 : pos = 2'b01; \n 3'b010 : pos = 2'b01; \n 3'b011 : pos = 2'b10; \n 3'b100 : pos = 2'b10; \n 3'b101 : pos = 2'b11; \n 3'b110 : pos = 2'b11; \n 3'b111 : pos = 2'b11; \n default : pos = 2'bxx; \n endcase \nend \n"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "always @(*) \n\tcase(in)\n\t3'd2: pos=2'd1;\n\t3'd3: pos=2'd1;\n\t3'd4: pos=2'd1;\n\t3'd5: pos=2'd1;\n\t3'd6: pos=2'd1;\n\t3'd7: pos=2'd1;\n\tendcase\n"
    }
  ],
  "created": 1663600172,
  "id": "cmpl-X5uxdoLCudjL2dXUFLJmPwDqS7koj",
  "model": "codegen",
  "object": "text_completion",
  "usage": {
    "completion_tokens": 519,
    "prompt_tokens": 65,
    "total_tokens": 584
  }
}