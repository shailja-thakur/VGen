example-0: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk) begin
	if (reset) begin
	q <= 4'b0;
	end
	else begin
	if (slowena) begin
	if (q == 9) begin
	q <= 4'b0;
	end
	else begin
	q <= q + 1'b1;
	end
	end
	end

================================================================
example-1: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
always @(posedge clk) begin
if (reset)
q <= 4'b0;
else begin
if (slowena && q < 4'b1001)
q <= q + 1;
end
end

// On the negative edge of the clock, 
// if reset is high, set the output q to 9.
// Otherwise, only decrement the output q if the ena input is high and q is not 0.
always @(negedge clk) begin
if (reset)
q <= 4'b1001;
else begin
if (slowena && q > 4'b0)
q <= q - 1;
end
end


================================================================
example-2: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk) begin
	if (reset) begin
	q <= 4'b0;
	end
	else begin
	if (slowena && q < 4'b1001) begin
	q <= q + 1'b1;
	end
	end
end


================================================================
example-3: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
always @(posedge clk) begin
	if (reset) begin
	q <= 4'b0;
	end
	else begin
	if (slowena) begin
	if (q == 9) begin
	q <= 4'b0;
	end
	else begin
	q <= q + 1;
	end
	end
	end
end


================================================================
example-4: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
always @(posedge clk)
begin
	if (reset)
	begin
	q <= 4'b0;
	end
	else
	begin
	if (slowena)
	begin
	if (q == 4'd9)
	begin
	q <= 4'b0;
	end
	else
	begin
	q <= q + 4'b1;
	end
	end
	end
end


================================================================
example-5: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
always @(posedge clk) begin
if (reset)
q <= 4'b0;
else begin
if (slowena) begin
if (q == 4'd9)
q <= 4'b0;
else
q <= q + 1'b1;
end
end
end


================================================================
example-6: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
always @(posedge clk) begin
	if (reset)
	q <= 4'd0;
	else begin
	if (slowena && q < 4'd9)
	q <= q + 4'd1;
	end
end


================================================================
example-7: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
always @(posedge clk) begin
	if (reset) q <= 4'b0;
	else begin
	if (slowena && q < 4'b1001) q <= q + 1'b1;
	end
end

// On the negative edge of the clock, do nothing.
// The q output should not change until the positive edge of the clock.


================================================================
example-8: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
always @(posedge clk) begin
if (reset) begin
q <= 4'b0;
end
else begin
if (slowena) begin
if (q != 9) begin
q <= q + 1;
end
else begin
q <= 0;
end
end
end
end


================================================================
example-9: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
if (reset)
q <= 4'b0;
else begin
if (slowena) begin
if (q == 4'd9)
q <= 4'b0;
else
q <= q + 1'b1;
end
end
end

// On the negative edge of the clock:
// if reset is high, reset the output q to 9. 
// Otherwise, only decrement the output q if the ena input is high and q is not 0.

always @(negedge clk)
begin
if (reset)
q <= 4'b9;
else begin
if (slowena) begin
if (q == 4'd0)
q <= 4'b9;
else
q <= q - 1'b1;
end
end
end


================================================================
example-10: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
always @(posedge clk) begin
	if (reset) begin
	q <= 4'b0;
	end
	else begin
	if (slowena) begin
	if (q == 4'd9) begin
	q <= 4'b0;
	end
	else begin
	q <= q + 4'b1;
	end
	end
	end
end


================================================================
example-11: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk) begin
	if (reset) begin
	// if reset is high, reset the output q to 0. 
	q <= 4'b0;
	end
	else begin
	// if reset is low, only increment the output q if the ena input is high and q is not 9.
	if (slowena && (q < 4'b1001)) begin
	q <= q + 1;
	end
	end
end

================================================================
example-12: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
if (reset)
q <= 4'b0;
else
begin
if (slowena)
begin
if (q == 4'd9)
q <= 4'd0;
else
q <= q + 1'b1;
end
end
end


================================================================
example-13: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
always @(posedge clk) begin
	if (reset) begin
	q <= 4'b0000;
	end
	else begin
	if (slowena && q < 4'b1001) begin
	q <= q + 1'b1;
	end
	end
end


================================================================
example-14: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
	if (reset)
	begin
	//	q <= 4'b0;
	end
	else
	begin
	//	if (slowena)
	//	begin
	//	if (q < 9)
	//	begin
	//	q <= q + 1'b1;
	//	end
	//	else
	//	begin
	//	q <= 4'b0;
	//	end
	//	end
	end
end


================================================================
