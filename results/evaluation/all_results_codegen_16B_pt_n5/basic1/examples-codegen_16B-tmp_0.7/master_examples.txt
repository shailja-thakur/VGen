example-0: 
// Design a module that assigns the output to the input
module wire_assign( input in, output out );
// assign out to in
wire_assign( in, out ) = 1;

// Design a module that performs tranformation of input to output
module wire_transform( input in, output out );
// Transform in to out using bitwise or
wire_transform( in, out ) = in | out;

// Design a module that performs a bitwise not 
module wire_not ( input in, output out );
// Bitwise not of in
wire_not( in, out ) = ~in;

// Design a module that performs a relational comparison
module wire_compare( input a, input b, output out );
// Compares a and b using '=='
wire_compare( a, b, out ) = a == b;
// Compares a and b using '<'
wire_compare( a, b, out ) = a < b;
// Compares a and b using '
================================================================
example-1: 
// Design a module that assigns the output to the input
module wire_assign( input in, output out );
// assign out to in
assign( in, out );
// assign in to out
assign( out, in );
// assign in to out
assign( out, in );
// assign in to out
assign( out, in );
// assign in to out
assign( out, in );
// assign in to out
assign( out, in );
// assign in to out
assign( out, in );
// assign in to out
assign( out, in );
// assign in to out
assign( out, in );
// assign in to out
assign( out, in );
// assign in to out
assign( out, in );
// assign in to out
assign( out, in );
// assign in to out
assign( out, in );
// assign in to out
assign( out, in );
// assign in to out
assign( out
================================================================
example-2: 
// Design a module that assigns the output to the input
module wire_assign( input in, output out );
// assign out to in
wire_assign <= input;
// return it

================================================================
example-3: 
// Design a module that assigns the output to the input
module wire_assign( input in, output out );
// assign out to in
wire_assign( in, out );
// assign in to out
wire_assign( in, out );
// Assign the output to the input
// the input is not assigned to anything.

// A module that has a single input and output
module single_to_single( input in, output out );
// the output is assigned to the input
single_to_single( in, out );
// the input is assigned to the output
single_to_single( in, out );
// Assign the output to the input
// the input is not assigned to anything.

// A module that has three inputs and one output
module triple_to_single( input a, input b, input c, output out );
// assign out to a
triple_to_single( a, b, c, out );
// assign out to b
triple_to_single( a, b
================================================================
example-4: 
// Design a module that assigns the output to the input
module wire_assign( input in, output out );
// assign out to in
wire_assign.assign( input, output );
// assign out to in
wire_assign.assign( out, in );

// Design a module that implements the logic for the test
module test_module( input in, output out, output in2 );

// assign in to out
// assign in2 to out
// assign in to out
// assign in2 to out2
test_module.assign( in, out, in2 );

// assign in to out
// assign in2 to out
// assign in to out
// assign in2 to out2
test_module.assign( in2, out, out2 );

// Design a module that calculates the square of the input
module square_module( input in, output out );
square_module.assign( in, out );

// Design a module that calculates the square of the input
module square
================================================================
