example-0: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk)
  priority_encoder_sel <= sel;
always @(posedge clk)
  priority_encoder_sel <= in[1];
always @(posedge clk)
  priority_encoder_sel <= in[0];

always @(posedge clk)
  pos <= priority_encoder_sel;


================================================================
example-1: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always@(posedge clk)
  if (sel)
  begin
    pos <= in;
  end
end

module priority_encoder_sel( 
input [2:0] in,
output reg [1:0] sel ); 
// When sel=1, assign b to out
always@(posedge clk)
  if (sel)
  begin
    sel <= in;
  end
end

module priority_encoder_sel_2( 
input [2:0] in,
output reg [1:0] sel ); 
// When sel=1, assign b to out
always@(posedge clk)
  if (sel)
  begin
    sel <= in;
  end
end

module priority_encoder_sel_3( 
input [2:0] in,
output
================================================================
example-2: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk)
  if (sel)
  begin
    pos <= in[1];
  end
end

module priority_encoder( 
input [2:0] in,
output reg [1:0] pos )
  // This is a priority encoder. The input bits are shifted into position.
  // If none of the input bits are high, output is zero.
  always @(posedge clk)
    if (sel)
    begin
      pos <= in[1] << 1 | in[0];
    end
end

module priority_encoder( 
input [2:0] in,
output reg [1:0] pos )
  // This is a priority encoder. The input bits are shifted into position.
  // If none of the input bits are high, output is zero.
  always @(posedge
================================================================
example-3: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or negedge rst)
  if (sel) 
    pos = in;
  else
    pos = 0;

================================================================
example-4: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
reg [1:0] sel = 0;
always @(posedge clk)
begin
  if (sel)
    pos <= in[1];
  else
    pos <= 0;
end

================================================================
example-5: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk)
  begin
    case(sel)
        begin
            if(in[0]) out = 1;
            else out = 0;
        end
    end
end

// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk)
  begin
    case(sel)
        begin
            if(in[0]) out = 1;
            else out = 0;
        end
    end
end

module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b
================================================================
example-6: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or posedge reset)
  if (sel)
    pos <= in[2];


================================================================
example-7: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or negedge rst)
  if(rst)
    pos <= 0;
  else if(sel)
    pos <= in;

================================================================
example-8: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk)
  if (sel)
    pos <= in[1];
  else
    pos <= 0;

================================================================
example-9: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge clk or negedge rst)
  if (rst)
    pos <= 0;
  else if (sel)
    pos <= in;

================================================================
