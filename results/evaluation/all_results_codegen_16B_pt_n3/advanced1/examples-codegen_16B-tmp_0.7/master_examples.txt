example-0: 
// Design a signed adder that adds two 8-bit 2's complement numbers, a[7:0] and b[7:0]. 

module signed_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

// The numbers a and b are added to the output s. 
// assign the occurence of the signed overflow of a and b to the output overflow.
// a signed overflow occurs if the most significant bits of a and b are low and the most significant bit of s is high
// a signed overflow may also occur if the most significant bits of a and b are high and the most significant bit of s is low


signed_adder signed_adder_1(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
)
{
  //output [7:0] r;
  s[7] = a[7] + b[7];
  s[6] = a[6] + b[6];
  s[5] = a[5] + b[5];
  s[4] = a[4] + b[4];
  s[3] = a[3] + b[3];
  s[2] = a[2] + b[2];
  s[1] = a[1] + b[1];
  s[0] = a[0] + b[0];
  overflow = a[7] < b[7] ?
================================================================
example-1: 
// Design a signed adder that adds two 8-bit 2's complement numbers, a[7:0] and b[7:0]. 

module signed_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

// The numbers a and b are added to the output s. 
// assign the occurence of the signed overflow of a and b to the output overflow.
// a signed overflow occurs if the most significant bits of a and b are low and the most significant bit of s is high
// a signed overflow may also occur if the most significant bits of a and b are high and the most significant bit of s is low

    if ((a[7:0] and b[7:0]) == 0)
        s[7:0] = a[7:0] + b[7:0];
    else
        s[7:0] = -((a[7:0] - b[7:0])[7:0] + (1 - s[7:0]));
    overflow = ((((a[7:0] and b[7:0]) or (a[7:0] and not b[7:0])) or (b[7:0] and not a[7:0])) or (s[7:0] > 1)) or ((a[7:0] and b[7:0]) == 0 and (s[7:0] > 0) or (s[7:0] < 0));

================================================================
example-2: 
// Design a signed adder that adds two 8-bit 2's complement numbers, a[7:0] and b[7:0]. 

module signed_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

// The numbers a and b are added to the output s. 
// assign the occurence of the signed overflow of a and b to the output overflow.
// a signed overflow occurs if the most significant bits of a and b are low and the most significant bit of s is high
// a signed overflow may also occur if the most significant bits of a and b are high and the most significant bit of s is low


signed_adder_template(
    next_state_a=a,
    next_state_b=b,
    next_state_s=s,
    next_state_overflow=overflow,
    
    state_a = ~s & a,
    state_b = ~a & b,
    state_s = ~a & ~b & ~(s & b),
    state_overflow = a | b | s,
    
    next_state_a_next = ~next_state_a & next_state_a,
    next_state_b_next = ~next_state_b & next_state_b,
    next_state_s_next = ~next_state_s & next_state_s,
    next_state_overflow_next = ~next_state_overflow & next_state_overflow
================================================================
