example-0: 
// Design a signed adder that adds two 8-bit 2's complement numbers, a[7:0] and b[7:0]. 

module signed_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

// The numbers a and b are added to the output s. 
// assign the occurence of the signed overflow of a and b to the output overflow.
// a signed overflow occurs if the most significant bits of a and b are low and the most significant bit of s is high
// a signed overflow may also occur if the most significant bits of a and b are high and the most significant bit of s is low


signed_adder(a, b, s, overflow);


================================================================
example-1: 
// Design a signed adder that adds two 8-bit 2's complement numbers, a[7:0] and b[7:0]. 

module signed_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

// The numbers a and b are added to the output s. 
// assign the occurence of the signed overflow of a and b to the output overflow.
// a signed overflow occurs if the most significant bits of a and b are low and the most significant bit of s is high
// a signed overflow may also occur if the most significant bits of a and b are high and the most significant bit of s is low


signed_adder(a,b,s,overflow);

// Assume a and b are unsigned
// a signed overflow occurs if the most significant bit of a is low and the most significant bit of b is high
// a signed overflow may also occur if the most significant bit of a is high and the most significant bit of b is low

unsigned_adder(a,b,s,overflow);

// Assume a and b are signed
// a signed overflow occurs if the most significant bit of a is low and the most significant bit of b is high
// a signed overflow may also occur if the most significant bit of a is high and the most significant bit of b is low

signed_adder(a,b,s,overflow);

// Assume a and b are unsigned
// a signed overflow occurs if the most significant bit of a is low and the most significant bit of b is high
//
================================================================
example-2: 
// Design a signed adder that adds two 8-bit 2's complement numbers, a[7:0] and b[7:0]. 

module signed_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

// The numbers a and b are added to the output s. 
// assign the occurence of the signed overflow of a and b to the output overflow.
// a signed overflow occurs if the most significant bits of a and b are low and the most significant bit of s is high
// a signed overflow may also occur if the most significant bits of a and b are high and the most significant bit of s is low


signed_adder(a, b, s, overflow);

// The following test checks that the signed adder function is correct.
// It takes two 8-bit 2's complement numbers a and b as input and returns the
// result s and the overflow bit as output. 

// The test verifies that if a and b are unsigned 8-bit 2's complement numbers,
// the signed adder function adds a and b to the output s and returns the overflow bit. 

// The test also verifies that if a and b are signed 8-bit 2's complement numbers,
// the signed adder function adds a and b to the output s and returns the overflow bit. 

// The test also verifies that if a and b are unsigned 8-bit 2's complement numbers,
// the signed adder function returns the overflow bit set to 0. 

// The test also verifies that if a
================================================================
