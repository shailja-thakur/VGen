example-0: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

input a;
input b; 
output cout;
output sum; 

// Wire the outputs
sum = a + b;
cout = sum > 0;


================================================================
example-1: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

wire signed [2:0] result;

reg out;
reg carry_in;



half_adder(a,b,cout,result){
    carry_in = a ^ b ^ result[1];
    out = (a & b) | (~a & result[1]);
    cout = out + carry_in;
    out = (a | ~b) | (b & result[1]);
}

always @( posedge input_0, posedge input_1 )
begin
    if ( input_0 ) {
        half_adder( a, b, cout, sum );
    } else {
        sum = (a + b);
    }
end


================================================================
example-2: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

reg out;
reg [2:0] sum;

always @(posedge a or posedge b)
 begin
 
 set out = a && b;
 //states are accessible from output ports
 // intended as a half-adder representation
 if( out )
 then
    aoulow = a;
    boulow = b;

    sum = aoulow + boulow + out;
    if(out = 0)
        sum <= 128;
 else
    sum = !sum;

 end



        
  cout <= sum;

end







================================================================
