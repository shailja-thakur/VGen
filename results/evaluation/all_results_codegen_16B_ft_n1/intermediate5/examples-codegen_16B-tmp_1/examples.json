// left shift and rotate operation
module left_rotate(clk,reset,amount,data,load,out);
input clk,reset;
input [2:0] amount;
input [7:0] data;
input load;
output reg [7:0] out;
// when load is high, load data to out
// otherwise rotate the out register followed by left shift the out register by amount bits
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "initial\nbegin\n\tout = 8'b0;\nend\nalways @(posedge clk or posedge reset)\nbegin\n\tif (reset)\n\t// when netreset goes high, reset all variables to default values\n\tbegin\n\tout = 8'b0;\n\tend\n\telse\n\tbegin\n\tif(load==1'b1)\n\t// load data to out\n\tbegin\n\tout = data;\n\tend\n\telse\n\tbegin\n\t//when load is low, reset all values and clear the out register\n\tout = out;\n\tend\n\tend\nend\n"
    }
  ],
  "created": 1663543500,
  "id": "cmpl-ASlltQ5QuiEgj2Mip9IPWIxwL6m5k",
  "model": "codegen",
  "object": "text_completion",
  "usage": {
    "completion_tokens": 140,
    "prompt_tokens": 94,
    "total_tokens": 234
  }
}