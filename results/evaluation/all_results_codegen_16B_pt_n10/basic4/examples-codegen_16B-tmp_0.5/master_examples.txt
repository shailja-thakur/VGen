example-0: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out. 
// When sel=2, assign both a and b to out.
// When sel=3, do nothing.
assign out = sel ? b : a;

// Design a 2-to-1 multiplexer.
module mux2( 
input [2:0] a, b,
input sel,
output [2:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out. 
// When sel=2, assign both a and b to out.
// When sel=3, do nothing.
assign out = sel ? b : a;

// Design a 3-to-1 multiplexer.
module mux3( 
input [3:0] a, b,
input sel,
output [3:0] out );

================================================================
example-1: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out. 
// When sel=2, assign a | b to out. 
// When sel=3, assign a & b to out. 
always @(posedge clk) begin
  if (sel == 0) begin
    out <= a;
  end else begin
    if (sel == 1) begin
      out <= b;
    end else begin
      if (sel == 2) begin
        out <= a | b;
      end else begin
        if (sel == 3) begin
          out <= a & b;
        end
      end
    end
  end
end

================================================================
example-2: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out.
always @(posedge clk) begin
  if (sel==0) out <= a;
  else out <= b;
end

================================================================
example-3: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out.
// When sel=2, do nothing.
// When sel=3, assign a to out.
assign out = (sel==0) ? a : b;


================================================================
example-4: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out.
// When sel=2, assign a to out.
// When sel=3, assign b to out.

================================================================
example-5: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out. 
// When sel=2, assign a&b to out. 
// When sel=3, assign a&~b to out. 
assign out = (sel==0)?a:b;

================================================================
example-6: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out.

================================================================
example-7: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out.
// When sel=2, assign a to out. 
// When sel=3, assign b to out.

================================================================
example-8: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out.
// When sel=2, assign a to out. 
// When sel=3, assign b to out.
assign out = (sel==0) ? a : b;

// When sel=0, assign a to out. 
// When sel=1, assign b to out.
// When sel=2, assign a to out. 
// When sel=3, assign b to out.
assign out = (sel==0) ? a : b;

// When sel=0, assign a to out. 
// When sel=1, assign b to out.
// When sel=2, assign a to out. 
// When sel=3, assign b to out.
assign out = (sel==0) ? a : b;

// When sel=0, assign a to out. 
// When
================================================================
example-9: 
// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out. 
assign out = sel ? b : a;

================================================================
