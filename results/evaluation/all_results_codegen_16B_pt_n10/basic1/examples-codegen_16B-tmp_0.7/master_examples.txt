example-0: 
// Design a module that assigns the output to the input
module wire_assign( input in, output out );
// assign out to in
wire_assign( in, out );
// assign out to in
wire_assign( in, out );
// assign in to out
wire_assign( in, out );
// assign in to out and out to in
wire_assign( in, out );
// assign in to out and out to in
wire_assign( in, out );
// assign in to out and out to in
wire_assign( in, out );
// assign in to out and out to in
wire_assign( in, out );
// assign in to out and out to in
wire_assign( in, out );
// assign in to out and out to in
wire_assign( in, out );
// assign in to out and out to in
wire_assign( in, out );
// assign in to out and out to in
wire_assign( in, out
================================================================
example-1: 
// Design a module that assigns the output to the input
module wire_assign( input in, output out );
// assign out to in
wire_assign( in, out );
// design a module that sets the output to one if the input is odd and zero
// otherwise
module odd_or_zero( input in, output out );
// assign out to in if in is odd
odd_or_zero( in, out );
// assign out to one if in is odd and zero otherwise
wire_assign( in, out );
// assign out to one if in is odd and zero otherwise
wire_assign( in, out );


int main() {
  input in;
  output out;
  in = 1;
  out = 0;
  odd_or_zero( in, out );
  cout << out << endl;

  in = 2;
  out = 0;
  odd_or_zero( in, out );
  cout << out << endl;

  in = 3
================================================================
example-2: 
// Design a module that assigns the output to the input
module wire_assign( input in, output out );
// assign out to in
wire_assign out( in );
// Uncomment to see the module

// wire_assign2
module wire_assign2( input in, output out );
// assign out to in
wire_assign2 out( in );
// Uncomment to see the module

// wire_assign3
module wire_assign3( input in, output out );
// assign out to in
wire_assign3 out( in );
// Uncomment to see the module

// wire_assign4
module wire_assign4( input in, output out );
// assign out to in
wire_assign4 out( in );
// Uncomment to see the module

// Using a wire_assign unblocks the module.
// Wire a wire_assign and wire_assign2 together
module wire_assign_wire_assign( input in, output out
================================================================
example-3: 
// Design a module that assigns the output to the input
module wire_assign( input in, output out );
// assign out to in
wire_assign( in, out );

// Design a module that adds two inputs
module add( input a, input b, output carry, output c, output d );
// assign carry and d to c
add( a, b, carry, c, d );
// assign carry to carry and d to d
add( a, b, carry, c, d );

// Design a module that multiplies an input by a constant
module mul( input in, input k, output out );
// Multiply in by k
mul( in, k, out );

// Design a module that sums the inputs
module add_sum( input a, input b, output out );
// sum b and a
add_sum( a, b, out );
// sum b and -a
add_sum( a, b, out );

// Design a module that sums the inputs
module mul
================================================================
example-4: 
// Design a module that assigns the output to the input
module wire_assign( input in, output out );
// assign out to in
wire_assign( in, out );
// assign in to out
wire_assign( in, out );
// assign in to out
wire_assign( out, in );
// assign in to out
wire_assign( in, out );
// assign out to in
wire_assign( in, out );
// assign out to in
wire_assign( out, in );
// assign in to out
wire_assign( in, out );
// assign out to in
wire_assign( out, in );
// assign in to out
wire_assign( in, out );
// assign out to in
wire_assign( out, in );
// assign in to out
wire_assign( in, out );
// assign out to in
wire_assign( out, in );
// assign in to out
wire_assign( in, out
================================================================
example-5: 
// Design a module that assigns the output to the input
module wire_assign( input in, output out );
// assign out to in
wire_assign.assign( in, out );
// assign output to wire in
wire_assign.assign( out, in );

// Design a module that reads the output from the input
module wire_read( input in, output out );
// read out from in
wire_read.read( in, out );
// read out from wire in
wire_read.read( out, in );

// Design a module that reads the output from the input
module wire_write( input in, output out );
// write out to in
wire_write.write( in, out );
// write out to wire in
wire_write.write( out, in );

// Design a module that reads the output from the input
module wire_destination( input in, output out );
// read out from in
wire_destination.destination( in, out );
// read
================================================================
example-6: 
// Design a module that assigns the output to the input
module wire_assign( input in, output out );
// assign out to in

// Design a module that adds the output to the input
module adder( input in, output out );
// add the input to the output

// Design a module that multiplies the input by two
module multiplier( input in, output out );
// multiply by two

// Design a module that divides the input by two
module divider( input in, output out );
// divide by two

// Design a module that computes the absolute value of the input
module abs( input in, output out );
// compute the absolute value

// Design a module that computes the square root of the input
module sqrt( input in, output out );
// compute the square root

// Design a module that computes the maximum for the input array
module max_finder( array a, output out );
// compute the maximum value of the array

// Design a module that computes the minimum for the input
================================================================
example-7: 
// Design a module that assigns the output to the input
module wire_assign( input in, output out );
// assign out to in
wire_assign.assign( in, out );
// The wire_assign module is a single component.
//
// In addition to the single input and output port, the module has a
// single port that can be used to bypass the module.
//
// The module has the following ports:
//
// in: The input port.
// out: The output port.
// byp: The bypass port.
//
// The module has the parameter:
//
// direction: The direction of the assignment.
// 
// The module can be connected to other modules in either direction.
//
// The module can be connected to a single wire in any direction.
//
// The module has the following connections:
//
// in: Any input wire.
// out: Any output wire.
// byp: Any input wire.

//
// The module can be clocked by
================================================================
example-8: 
// Design a module that assigns the output to the input
module wire_assign( input in, output out );
// assign out to in
wire_assign( in, out );

// Design a module that computes the output as the sum of two inputs
module add( input a, input b, output out );
// computes out as a+b
add( a, b, out );

// Design a module that computes the output as the product of two inputs
module mult( input a, input b, output out );
// computes out as a*b
mult( a, b, out );

// Design a module that computes the output as the difference of two inputs
module sub( input a, input b, output out );
// computes out as a-b
sub( a, b, out );

// Design a module that computes the output as the quotient of two inputs
module div( input a, input b, output out );
// computes out as a/b
div( a, b,
================================================================
example-9: 
// Design a module that assigns the output to the input
module wire_assign( input in, output out );
// assign out to in
wire_assign( in, out );
// assign out to in
wire_assign( out, in );
// assign out to in
wire_assign( in, out );
// assign out to in
wire_assign( out, in );

// Design a module that adds two outputs to each other
module add( input in, output out1, output out2 );
// add out1 to in
add( in, out1, out2 );
// add in to out1
add( out1, in, out2 );
// add out2 to in
add( out2, in, out1 );
// add out2 to in
add( in, out2, out1 );
// add out1 to in
add( out1, in, out2 );
// add out2 to in
add( out2, in, out1 );

// Design a module that
================================================================
