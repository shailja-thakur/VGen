example-0: 
// This is an FSM
module abro(
input clk,
input reset,
input a,
input b,
output z );
parameter IDLE = 0,
SA = 1,
SB = 2,
SAB = 3;
reg [1:0] cur_state,next_state;
// The output z is high when 1 is received for signals a and b in any order.
// If cur_state is IDLE and a and b are both high, state changes to SAB
// If cur_state is IDLE, and a is high, state changes to SA
// If cur_state is IDLE, and b is high, state changes to SB
// If cur_state is SA, and b is high, state changes to SAB
// If cur_state is SB, and a is high, state changes to SAB
// If cur_state is SAB, state changes to IDLE
// z is assigned one when cur_state is SAB
always @(posedge clk)
begin
    if (cur_state == IDLE) {
        cur_state = SAB;
        next_state = IDLE;
    }
    if (cur_state == SAB) {
        if (a == 1 && b == 1) {
            next_state = SAB;
        }
        else if (a == 1) {
            next_state = SA;
        }
        else if (b == 1) {
            next_state = SB;
        }
        else {
            next_state = IDLE;
        }
    }
    if (cur_state == SA) {
        if (a == 1) {
            next_state = SA;
        }
        else {
            next_state = IDLE;
        }
    }
    if (cur_state == SB
================================================================
example-1: 
// This is an FSM
module abro(
input clk,
input reset,
input a,
input b,
output z );
parameter IDLE = 0,
SA = 1,
SB = 2,
SAB = 3;
reg [1:0] cur_state,next_state;
// The output z is high when 1 is received for signals a and b in any order.
// If cur_state is IDLE and a and b are both high, state changes to SAB
// If cur_state is IDLE, and a is high, state changes to SA
// If cur_state is IDLE, and b is high, state changes to SB
// If cur_state is SA, and b is high, state changes to SAB
// If cur_state is SB, and a is high, state changes to SAB
// If cur_state is SAB, state changes to IDLE
// z is assigned one when cur_state is SAB

always @(posedge clk)
    if (reset)
        cur_state = IDLE;
    else if (a == 1)
        cur_state = SA;
    else if (b == 1)
        cur_state = SB;
    else if (a == 0 && b == 1)
        cur_state = SAB;
    else
        cur_state = IDLE;

always @(posedge clk)
    if (cur_state == IDLE)
        next_state = IDLE;
    else if (a == 1)
        next_state = SA;
    else if (b == 1)
        next_state = SB;
    else if (a == 0 && b == 1)
        next_state = SAB;
    else
        next_state = IDLE;


================================================================
example-2: 
// This is an FSM
module abro(
input clk,
input reset,
input a,
input b,
output z );
parameter IDLE = 0,
SA = 1,
SB = 2,
SAB = 3;
reg [1:0] cur_state,next_state;
// The output z is high when 1 is received for signals a and b in any order.
// If cur_state is IDLE and a and b are both high, state changes to SAB
// If cur_state is IDLE, and a is high, state changes to SA
// If cur_state is IDLE, and b is high, state changes to SB
// If cur_state is SA, and b is high, state changes to SAB
// If cur_state is SB, and a is high, state changes to SAB
// If cur_state is SAB, state changes to IDLE
// z is assigned one when cur_state is SAB
always @(posedge clk)
    if (cur_state == IDLE)
    {
        next_state = IDLE;
    }
    else if ((a == 1) and (b == 1))
    {
        next_state = SAB;
    }
    else if (a == 1)
    {
        next_state = SA;
    }
    else if (b == 1)
    {
        next_state = SB;
    }
    else
    {
        next_state = IDLE;
    }
    cur_state = next_state;
    z <= next_state;

================================================================
example-3: 
// This is an FSM
module abro(
input clk,
input reset,
input a,
input b,
output z );
parameter IDLE = 0,
SA = 1,
SB = 2,
SAB = 3;
reg [1:0] cur_state,next_state;
// The output z is high when 1 is received for signals a and b in any order.
// If cur_state is IDLE and a and b are both high, state changes to SAB
// If cur_state is IDLE, and a is high, state changes to SA
// If cur_state is IDLE, and b is high, state changes to SB
// If cur_state is SA, and b is high, state changes to SAB
// If cur_state is SB, and a is high, state changes to SAB
// If cur_state is SAB, state changes to IDLE
// z is assigned one when cur_state is SAB

always @(posedge clk)
    if (cur_state == IDLE)
    {
        if (a == 1 && b == 1)
        {
            cur_state = SAB;
            next_state = SA;
        }
        else if (a == 1)
        {
            cur_state = SA;
            next_state = SB;
        }
        else if (b == 1)
        {
            cur_state = SB;
            next_state = SAB;
        }
    }
    else
    {
        if (a == 1 && b == 1)
        {
            cur_state = SAB;
            next_state = SAB;
        }
        else if (a == 1)
        {
            cur_state = SA;
            next_state = SA;
        }
        else
================================================================
example-4: 
// This is an FSM
module abro(
input clk,
input reset,
input a,
input b,
output z );
parameter IDLE = 0,
SA = 1,
SB = 2,
SAB = 3;
reg [1:0] cur_state,next_state;
// The output z is high when 1 is received for signals a and b in any order.
// If cur_state is IDLE and a and b are both high, state changes to SAB
// If cur_state is IDLE, and a is high, state changes to SA
// If cur_state is IDLE, and b is high, state changes to SB
// If cur_state is SA, and b is high, state changes to SAB
// If cur_state is SB, and a is high, state changes to SAB
// If cur_state is SAB, state changes to IDLE
// z is assigned one when cur_state is SAB
always @(posedge clk)
begin
    if (reset == 1)
        cur_state = IDLE;
    else
    {
        cur_state = (a == 1 && b == 1) ? SAB :
                    (a == 1 && b == 0) ? SA :
                    (a == 0 && b == 1) ? SB :
                    (a == 0 && b == 0) ? IDLE :
                    (a == 1 && b == 1) ? SAB :
                    (a == 0 && b == 0) ? IDLE :
                    (a == 0 && b == 0) ? IDLE;
    }
    next_state = (cur_state == IDLE) ? SAB :
                 (cur_state == SAB) ? SAB :
                 (cur_state == SA) ? SB :
                 (cur_state == SB) ? SB :

================================================================
