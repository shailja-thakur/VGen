example-0: 
// Design a signed adder that adds two 8-bit 2's complement numbers, a[7:0] and b[7:0]. 

module signed_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

// The numbers a and b are added to the output s. 
// assign the occurence of the signed overflow of a and b to the output overflow.
// a signed overflow occurs if the most significant bits of a and b are low and the most significant bit of s is high
// a signed overflow may also occur if the most significant bits of a and b are high and the most significant bit of s is low



signed_adder adder;

wire overflow;
wire overflow1;

unsigned a_sum;
unsigned b_sum;

always_comb
{
    overflow1 = overflow;
    overflow = 0;
    if (a_sum < b_sum)
    {
        s = a_sum;
        if ((s>=0) && (s>=a_sum))
            overflow = 1;
    }
    else
    {
        s = a_sum + b_sum;
        if ((s>=0) && (s>=a_sum+b_sum))
            overflow = 1;
    }
}

always_seq_reg [7:0] s_reg;

void main()
{
    // a_sum = a[7:0] + b[7:0];

================================================================
example-1: 
// Design a signed adder that adds two 8-bit 2's complement numbers, a[7:0] and b[7:0]. 

module signed_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

// The numbers a and b are added to the output s. 
// assign the occurence of the signed overflow of a and b to the output overflow.
// a signed overflow occurs if the most significant bits of a and b are low and the most significant bit of s is high
// a signed overflow may also occur if the most significant bits of a and b are high and the most significant bit of s is low



================================================================
example-2: 
// Design a signed adder that adds two 8-bit 2's complement numbers, a[7:0] and b[7:0]. 

module signed_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

// The numbers a and b are added to the output s. 
// assign the occurence of the signed overflow of a and b to the output overflow.
// a signed overflow occurs if the most significant bits of a and b are low and the most significant bit of s is high
// a signed overflow may also occur if the most significant bits of a and b are high and the most significant bit of s is low


signal [7:0] a_s;
signal [7:0] b_s;


circuit
{
    a_s <= a[7:0];
    b_s <= b[7:0];

    s <= a[7:0] + b[7:0];

    // if (a_s == 0) and (b_s == 0) then s <= 0
    // if (a_s == 0) and (b_s == 1) then s <= -1
    // if (a_s == 1) and (b_s == 0) then s == a[7:0]
    // if (a_s == 1) and (b_s == 1) then s == a[7:0] + b[7:0]

    //  if (a_s == 0) and (b_s == 0
================================================================
example-3: 
// Design a signed adder that adds two 8-bit 2's complement numbers, a[7:0] and b[7:0]. 

module signed_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

// The numbers a and b are added to the output s. 
// assign the occurence of the signed overflow of a and b to the output overflow.
// a signed overflow occurs if the most significant bits of a and b are low and the most significant bit of s is high
// a signed overflow may also occur if the most significant bits of a and b are high and the most significant bit of s is low


signed_adder =
    {
      a[7:0] => {a[7:0] + b[7:0]},
      b[7:0] => {a[7:0] + b[7:0]},
      s[7:0] => {if (a[7:0] > b[7:0]) {s[7:0] = a[7:0] + b[7:0]}}
    };

//V2

signed_adder =
    {
      a[7:0] => {a[7:0] + b[7:0]},
      b[7:0] => {a[7:0] + b[7:0]},
      s[7:0] => {
        a[7:0] < b[7:0] ? {s[7:0
================================================================
example-4: 
// Design a signed adder that adds two 8-bit 2's complement numbers, a[7:0] and b[7:0]. 

module signed_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

// The numbers a and b are added to the output s. 
// assign the occurence of the signed overflow of a and b to the output overflow.
// a signed overflow occurs if the most significant bits of a and b are low and the most significant bit of s is high
// a signed overflow may also occur if the most significant bits of a and b are high and the most significant bit of s is low


#1
signed_adder a, b, s, overflow;

initial begin
    s = a[7:0]+b[7:0] + overflow;
    overflow = s[7];
end


================================================================
