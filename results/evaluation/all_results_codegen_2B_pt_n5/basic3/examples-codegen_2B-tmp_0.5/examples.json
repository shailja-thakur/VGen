// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
{
  "choices": [
    {
      "finish_reason": "length",
      "index": 0,
      "logprobs": null,
      "text": "assign out = (pos[1] << 5) | (pos[0] << 4) | in[1] ;\n// When sel=0, assign b to out\nassign out = (pos[1] << 5) | (pos[0] << 4) | in[0] ;\n// When sel=1, assign b to out\nassign out = (pos[1] << 5) | (pos[0] << 4) | in[2] ;\n// When sel=0, assign b to out\nassign out = (pos[1] << 5) | (pos[0] << 4) | in[3] ;\n// When sel=1, assign b to out\nassign out = (pos[1] << 5) | (pos[0] << 4) | in[4] ;\n// When sel=0, assign b to out\n"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "// When sel=0, assign b to out\nalways @(posedge clk) begin\n    pos.write(in[2] ? 1 : 0);\nend\nend\n\"\"\")\n"
    },
    {
      "finish_reason": "length",
      "index": 2,
      "logprobs": null,
      "text": "always @(posedge in)\nbegin\n    pos = pos + 1;\n    if (in[1] == 1 && in[0] == 1)\n        pos = pos + 1;\n    if (in[1] == 1 && in[0] == 0)\n        pos = pos + 2;\n    if (in[1] == 0 && in[0] == 1)\n        pos = pos + 3;\n    if (in[1] == 0 && in[0] == 0)\n        pos = pos + 4;\nend\n);\n\n// This is a 4-bit priority encoder. If none of the input bits are high, output is zero.\nmodule priority_encoder( \ninput [3:0] in,\noutput reg [3:0] pos ); \n// When sel=1, assign b to out\nalways @(posedge in)\n"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "assign out = (pos[1] << 2) | (pos[0] << 1) | in; \n// When sel=0, assign b to out\nassign out = (pos[1] << 1) | (pos[0] << 0) | in; \n"
    },
    {
      "finish_reason": "length",
      "index": 4,
      "logprobs": null,
      "text": "assign pos = ( in & 1 ) ? 1 : 0;\n// When sel=0, assign b to out\nassign pos = ( in & 2 ) ? 1 : 0;\n// When sel=1, assign b to out\nassign pos = ( in & 4 ) ? 1 : 0;\n// When sel=0, assign b to out\nassign pos = ( in & 8 ) ? 1 : 0;\n// When sel=1, assign b to out\nassign pos = ( in & 16 ) ? 1 : 0;\n// When sel=0, assign b to out\nassign pos = ( in & 32 ) ? 1 : 0;\n// When sel=1, assign b to out\nassign pos = ( in & 64 ) ? 1 : 0;\n// When sel=0, assign b to out\nassign pos = ( in & 128 ) ? 1"
    }
  ],
  "created": 1663540033,
  "id": "cmpl-iBD0emdNUcrMwN14gR5qi6azGXeK5",
  "model": "codegen",
  "object": "text_completion",
  "usage": {
    "completion_tokens": 711,
    "prompt_tokens": 65,
    "total_tokens": 776
  }
}