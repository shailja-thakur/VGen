example-0: 
// Design a signed adder that adds two 8-bit 2's complement numbers, a[7:0] and b[7:0]. 

module signed_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

// The numbers a and b are added to the output s. 
// assign the occurence of the signed overflow of a and b to the output overflow.
// a signed overflow occurs if the most significant bits of a and b are low and the most significant bit of s is high
// a signed overflow may also occur if the most significant bits of a and b are high and the most significant bit of s is low


// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-A-B
// S-
================================================================
example-1: 
// Design a signed adder that adds two 8-bit 2's complement numbers, a[7:0] and b[7:0]. 

module signed_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

// The numbers a and b are added to the output s. 
// assign the occurence of the signed overflow of a and b to the output overflow.
// a signed overflow occurs if the most significant bits of a and b are low and the most significant bit of s is high
// a signed overflow may also occur if the most significant bits of a and b are high and the most significant bit of s is low


// function adder(a, b) {
// 	var s = 0;
// 	var overflow = 0;
// 	for (var i = 0; i < 8; i++) {
// 		var sum = a[i] + b[i];
// 		if (sum < 0) {
// 			s |= 1 << i;
// 			overflow |= 1 << i;
// 		}
// 		else {
// 			s |= sum << i;
// 		}
// 	}
// 	return s;
// }

// function adder(a, b) {
// 	var s = 0;
// 	var overflow = 0;
// 	for (var i = 0; i < 8; i++) {
// 		var sum = a[i] + b
================================================================
example-2: 
// Design a signed adder that adds two 8-bit 2's complement numbers, a[7:0] and b[7:0]. 

module signed_adder(input [7:0] a,
    input [7:0] b,
    output [7:0] s,
    output overflow
); 

// The numbers a and b are added to the output s. 
// assign the occurence of the signed overflow of a and b to the output overflow.
// a signed overflow occurs if the most significant bits of a and b are low and the most significant bit of s is high
// a signed overflow may also occur if the most significant bits of a and b are high and the most significant bit of s is low


// Inputs: a[7:0], b[7:0], s[7:0]

// Outputs: s[7:0]

// DUT
signed_adder da(a, b, s, overflow);

int main() {
  da.run();
  return 0;
}

================================================================
