// left shift and rotate operation
module left_rotate(clk,reset,amount,data,load,out);
input clk,reset;
input [2:0] amount;
input [7:0] data;
input load;
output reg [7:0] out;
// when load is high, load data to out
// left shift and rotate the register out by amount bits
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "always @ (posedge clk or posedge reset)\nbegin\nif(reset)\nbegin\nout <= 0;\nend\nelse if(load)\nbegin\nout <= data;\nend\nelse\nbegin\nout <= {out[6:0],out[7]};\nend\nend\n"
    }
  ],
  "created": 1663333358,
  "id": "cmpl-NJ8ZTui7n5UkAIdZLwwgNs2wTk0lE",
  "model": "codegen",
  "object": "text_completion",
  "usage": {
    "completion_tokens": 69,
    "prompt_tokens": 89,
    "total_tokens": 158
  }
}