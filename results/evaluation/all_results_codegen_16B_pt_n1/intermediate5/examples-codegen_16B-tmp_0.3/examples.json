// left shift and rotate operation
module left_rotate(clk,reset,amount,data,load,out);
input clk,reset;
input [2:0] amount;
input [7:0] data;
input load;
output reg [7:0] out;
// when load is high, load data to out
// otherwise rotate the out register followed by left shift the out register by amount bits
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "always @(posedge clk or posedge reset) begin\n\tif (load) begin\n\t\tout <= data;\n\tend else begin\n\t\tout <<= amount;\n\t\tout[0] <= data[0];\n\t\tout[1] <= data[1];\n\t\tout[2] <= data[2];\n\t\tout[3] <= data[3];\n\t\tout[4] <= data[4];\n\t\tout[5] <= data[5];\n\t\tout[6] <= data[6];\n\t\tout[7] <= data[7];\n\tend\nend\n"
    }
  ],
  "created": 1663533694,
  "id": "cmpl-laMqTus6elK7cMG5FptKaT0lIm6RG",
  "model": "codegen",
  "object": "text_completion",
  "usage": {
    "completion_tokens": 134,
    "prompt_tokens": 94,
    "total_tokens": 228
  }
}