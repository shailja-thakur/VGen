example-0: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// This is a full adder. A full adder adds three bits and produces a sum and carry-out.
module full_adder( 
input a, b,
output cout, sum, carry );

// This is a half subtractor. A half subtractor subtracts two bits and produces a difference and carry-out.
module half_subtractor( 
input a, b,
output cout, diff );

// This is a full subtractor. A full subtractor subtracts three bits and produces a difference and carry-out.
module full_subtractor( 
input a, b,
output cout, diff, carry );

// This is a half multiplier. A half multiplier multiplies two bits and produces a product and carry-out.
module half_multiplier( 
input a, b,
output cout, prod );

// This is a full multiplier. A
================================================================
example-1: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// This is a full adder. A full adder adds two bits and produces a sum and carry-in.
module full_adder( 
input a, b,
output cout, sum, carry );

// This is a half subtractor. A half subtractor subtracts two bits and produces a sum and carry-out.
module half_sub( 
input a, b,
output cout, sum );

// This is a full subtractor. A full subtractor subtracts two bits and produces a sum and carry-in.
module full_sub( 
input a, b,
output cout, sum, carry );

// This is a half multiplier. A half multiplier multiplies two bits and produces a sum and carry-out.
module half_mul( 
input a, b,
output cout, sum );

// This is a full multiplier. A full multiplier multiplies
================================================================
example-2: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// This is a full adder. A full adder adds two bits and produces a sum and carry-out.
module full_adder( 
input a, b,
output cout, sum );

// This is a half subtractor. A half subtractor subtracts two bits and produces a sum and carry-out.
module half_sub( 
input a, b,
output cout, sum );

// This is a full subtractor. A full subtractor subtracts two bits and produces a sum and carry-out.
module full_sub( 
input a, b,
output cout, sum );

// This is a half multiply. A half multiply multiplies two bits and produces a sum and carry-out.
module half_mul( 
input a, b,
output cout, sum );

// This is a full multiply. A full multiply multiplies two bits and produces
================================================================
example-3: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

input in_a, in_b;

input carry_in;

input carry_out;

input sum_in;

input sum_out;

input carry_out_in;

input carry_out_out;

input sum_out_in;

input sum_out_out;

input sum_in_in;

input sum_in_out;

input sum_out_out_in;

input sum_out_out_out;

input sum_in_in_out;

input sum_in_out_out_in;

input sum_in_out_out_out;

input sum_in_in_out_out_in;

input sum_in_in_out_out_out;

input sum_in_out_out_out_in;

input
================================================================
example-4: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// This is a full adder. A full adder adds two bits and produces a sum and carry-out.
module full_adder( 
input a, b,
output cout, sum, carry );

// This is a half subtractor. A half subtractor subtracts two bits and produces a sum and carry-out.
module half_subtractor( 
input a, b,
output cout, sum );

// This is a full subtractor. A full subtractor subtracts two bits and produces a sum and carry-out.
module full_subtractor( 
input a, b,
output cout, sum, carry );

// This is a half multiplier. A half multiplier multiplies two bits and produces a sum and carry-out.
module half_multiplier( 
input a, b,
output cout, sum );

// This is a full multiplier. A
================================================================
example-5: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// This is a full adder. A full adder adds two bits and produces a sum and carry-out.
module full_adder( 
input a, b,
output cout, sum );

// This is a half subtractor. A half subtractor subtracts two bits and produces a sum and carry-out.
module half_subtractor( 
input a, b,
output cout, sum );

// This is a full subtractor. A full subtractor subtracts two bits and produces a sum and carry-out.
module full_subtractor( 
input a, b,
output cout, sum );

// This is a half multiplier. A half multiplier multiplies two bits and produces a sum and carry-out.
module half_multiplier( 
input a, b,
output cout, sum );

// This is a full multiplier. A full multiplier multiplies
================================================================
example-6: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// This is a full adder. A full adder adds two bits and produces a sum and carry-out.
module full_adder( 
input a, b,
output cout, sum );

// This is a half subtractor. A half subtractor subtracts two bits and produces a sum and carry-in.
module half_sub( 
input a, b,
output cout, sum );

// This is a full subtractor. A full subtractor subtracts two bits and produces a sum and carry-in.
module full_sub( 
input a, b,
output cout, sum );

// This is a half multiply. A half multiply multiplies two bits and produces a sum and carry-out.
module half_mul( 
input a, b,
output cout, sum );

// This is a full multiply. A full multiply multiplies two bits and produces
================================================================
example-7: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// This is a full adder. A full adder adds three bits and produces a sum and carry-out.
module full_adder( 
input a, b,
output cout, sum, carry );

// This is a half subtractor. A half subtractor subtracts two bits and produces a difference and carry-out.
module half_subtractor( 
input a, b,
output dout, diff );

// This is a full subtractor. A full subtractor subtracts three bits and produces a difference and carry-out.
module full_subtractor( 
input a, b,
output dout, diff, carry );

// This is a half multiplier. A half multiplier multiplies two bits and produces a product and carry-out.
module half_multiplier( 
input a, b,
output mout, prod );

// This is a full
================================================================
example-8: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// This is a full adder. A full adder adds two bits and produces a sum and carry-out.
module full_adder( 
input a, b,
output cout, sum, carry );

// This is a half subtractor. A half subtractor subtracts two bits and produces a difference and borrow-in.
module half_sub( 
input a, b,
output diff, borrow );

// This is a full subtractor. A full subtractor subtracts two bits and produces a difference and borrow-in.
module full_sub( 
input a, b,
output diff, borrow, carry );

// This is a half multiplier. A half multiplier multiplies two bits and produces a product and carry-out.
module half_mul( 
input a, b,
output prod, carry );

// This is a full multiplier. A full multiplier multiplies
================================================================
example-9: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

input in_a, in_b;
output out_c;

input carry_in;

input carry_out;

input carry_in_out;

input carry_out_out;

input carry_out_in;

input carry_out_in_out;

input carry_out_out_out;

input carry_out_in_out_out;

input carry_out_out_out_out;

input carry_out_out_out_out_out;

input carry_out_out_out_out_out_out;

input carry_out_out_out_out_out_out_out;

input carry_out_out_out_out_out_out_out_out;

input carry_out_out_out_out_out_out_out_out_out
================================================================
