example-0: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge in) 
begin 
pos[1:0] = in[1:0]; 
end 

================================================================
example-1: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = ( in & (1 << in[1:0] ) ) ? (in[1:0] + 1) : 0; 

// This is a 1-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder_invert( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = ( in & (1 << in[1:0] ) ) ? (in[1:0] - 1) : 0; 

// This is a 1-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder_invert_sel( 
input [2:0] in,
output reg [1:0] pos,
sel #[1:
================================================================
example-2: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
    if (in[1] == 0)
        pos = 0;
    else if (in[1] == 1)
        pos = 1;
    else if (in[1] == 2)
        pos = 2;
    else if (in[1] == 3)
        pos = 3;
    else if (in[1] == 4)
        pos = 4;
    else if (in[1] == 5)
        pos = 5;
    else if (in[1] == 6)
        pos = 6;
    else if (in[1] == 7)
        pos = 7;
    else if (in[1] == 8)
        pos = 8;
    else if (in[1] == 9)
        pos = 9;
    else if (in[1] == 10)
        pos
================================================================
example-3: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (pos | (in[1] & in[0]))
begin
pos = pos + (in[1] & in[0]);
end

================================================================
example-4: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos[1:0] = (in[1] && in[0]) ? (in[1] | in[0]) : (in[1] || in[0]);
// When sel=0, assign b to out
assign pos[1:0] = (in[1] && in[0]) ? (in[1] | in[0]) : (in[1] || in[0]);

================================================================
example-5: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos[1] = in[0] >> 1;
assign pos[2] = in[1] >> 1;

================================================================
example-6: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[1] | in[0] << 1) & 0b11;
// When sel=0, assign b to out
assign pos = (in[1] | in[0] << 1) >> 3;
// When sel=1, assign b to out
assign pos = (in[1] | in[0] << 1) & 0b11;
// When sel=0, assign b to out
assign pos = (in[1] | in[0] << 1) >> 3;

================================================================
example-7: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[1]?1:0) | (in[0]?2:0);

wire [7:0] b;
assign b = pos;

always @(posedge clk) begin
  if (pos == 0) b = 0;
end


================================================================
example-8: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = ( in[2] << 1 ) | ( in[1] >> 7 );
// When sel=0, assign b to out
assign pos = ( in[0] >> 1 ) | ( in[1] << 7 );
)

================================================================
example-9: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = { 1'b0, 2'b0, 3'b0, 4'b0, 5'b0, 6'b0, 7'b0, 8'b0, 9'b0, 10'b0, 11'b0, 12'b0, 13'b0, 14'b0, 15'b0, 16'b0, 17'b0, 18'b0, 19'b0, 20'b0, 21'b0, 22'b0, 23'b0, 24'b0, 25'b0, 26'b0, 27'b0, 28'b0, 29'b0, 30'b0, 31'b0, 32'b0, 33'b0, 34'b0, 35'b0, 36'b0, 37'b0, 38'b0, 39'b0,
================================================================
