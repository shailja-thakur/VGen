// Design a Moore state machine with two states 0 and 1, one input in, and one output out. Reset state is 0.
module simple_fsm(clk, reset, in, out);
input clk;
input reset;
input in;
output out;
wire out;
reg present_state, next_state;
// In state 0, if in=1, stay in state 0. In state 0, if in=0, go to state 1
// In state 1, if in=1, stay in state 1. In state 1, if in=0, go to state 0
// out=1 in state 0 and out=0 in state 1
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "always (input clk and out)\nbegin\n    if (next_state = 0) begin\n        present_state = next_state;\n    end\n    else begin\n        present_state = next_state;\n        next_state = 0;\n        out = (next_state = present_state);\n    end\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "always(clk) \nbegin\n  if (reset) begin\n    current_state <= 0;\n    next_state <= 0;\n  end else begin\n    current_state <= in; \n    current_state != next_state; \n    next_state <= in;\n    next_state != current_state;\n    if (next_state) begin\n      out <= 1;\n    end else begin\n      out <= 0;\n    end\n  end\nend\n`\n"
    },
    {
      "finish_reason": "length",
      "index": 2,
      "logprobs": null,
      "text": "always @(posedge clk) begin\n    if (en && reset) next_state = 0;\n    if (!reset || !en) next_state = pin2int(in ? 1:0);\n    if (next_state != present_state) begin\n        present_state = next_state;\n        next_state = !next_state;\n    end\nout <= present_state; // when true, clock output to out\nend\n\n// convert inputs to ints\nint input2int(input i_)\n{\n    return (int)i_;\n}\n\n// convert int to inputs\ninput int2input(int i_)\n{\n    return i_;\n}\n\n// convert ints\nint pin2int(input pin)\n{\n    return int2input(pin);\n}\n\n// convert ints\ninput int2pin(int i"
    }
  ],
  "created": 1663519340,
  "id": "cmpl-MQU5lutHAjhw3u8KjoPzQ99B2bCdI",
  "model": "codegen",
  "object": "text_completion",
  "usage": {
    "completion_tokens": 389,
    "prompt_tokens": 148,
    "total_tokens": 537
  }
}