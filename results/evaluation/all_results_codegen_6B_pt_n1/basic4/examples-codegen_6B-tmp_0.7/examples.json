// Design a 2-to-1 multiplexer.
module mux( 
input [4:0] a, b,
input sel,
output [4:0] out );
// When sel=0, assign a to out. 
// When sel=1, assign b to out.{
  "choices": [
    {
      "finish_reason": "length",
      "index": 0,
      "logprobs": null,
      "text": "\nalways @(posedge clk or negedge rst) begin\n  if(rst) begin\n    out <= 0;\n    sel <= 0;\n  end else begin\n    out <= sel ? a : b;\n    sel <= 1 - sel;\n  end\nend\n\nmodule comb(\ninput [4:0] in,\ninput [4:0] a, b,\ninput sel,\noutput [4:0] out );\n// When sel=0, assign in to out. \n// When sel=1, assign b to out.\nalways @(posedge clk or negedge rst) begin\n  if(rst) begin\n    out <= 0;\n    sel <= 0;\n  end else begin\n    out <= sel ? in : b;\n    sel <= 1 - sel;\n  end\nend\n\n"
    }
  ],
  "created": 1663519198,
  "id": "cmpl-hVIQ8Q49JHVOqGyVq6081GZ6izkXC",
  "model": "codegen",
  "object": "text_completion",
  "usage": {
    "completion_tokens": 200,
    "prompt_tokens": 70,
    "total_tokens": 270
  }
}