example-0: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge in) begin
  if (in[1]) pos <= 1;
  else if (in[0]) pos <= 2;
  else if (in[2]) pos <= 3;
  else pos <= 0;
end

================================================================
example-1: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk) begin
    if( !in[0] && !in[1] ) pos <= 0;
    else if( in[0] ) pos <= 1;
    else if( in[1] ) pos <= 2;
    else pos <= 3;
end

================================================================
example-2: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
reg [1:0] sel;
always @( posedge in ) begin
  if( in[0] | in[1] )
    sel <= 1;
  else
    sel <= 0;
  if( sel == 1 )
    pos <= in[1];
  else
    pos <= 0;
end

================================================================
example-3: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk)
begin
  if (sel==1)
    pos <= in;
  else
    pos <= in + 1;
end

================================================================
example-4: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk)
begin
  if (sel)
    pos <= in;
end

================================================================
example-5: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk) begin
  if( sel ) pos <= 1'b0;
  else pos <= in;
end

================================================================
example-6: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk) begin
  if (sel == 0)
    pos <= a;
  else if (in[0] == 1 and in[1] == 1)
    pos <= b;
  else
    pos <= 0;
end

================================================================
example-7: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign out = 1'b0;
// When sel=0, assign a to out
assign out = 1'b1;

// When sel=1, assign a to out
assign out = 1'b0;
// When sel=0, assign b to out
assign out = 1'b1;

// When sel=1, assign b to out
assign out = 1'b0;
// When sel=0, assign a to out
assign out = 1'b1;

// When sel=1, assign b to out
assign out = 1'b0;
// When sel=0, assign a to out
assign out = 1'b1;

// When sel=1, assign b to out
assign out = 1'b0;
// When sel=0, assign a to
================================================================
example-8: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk) begin
  if (sel==1)
    pos <= ~in;
  else
    pos <= ~in & a;
end

================================================================
example-9: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk) begin
  if (sel) {
    if (in[0]) {
      pos <= 2;
    } else if (in[1]) {
      pos <= 1;
    } else {
      pos <= 0;
    }
  } else {
    if (in[0]) {
      pos <= 1;
    } else if (in[1]) {
      pos <= 2;
    } else {
      pos <= 0;
    }
  }
end

================================================================
example-10: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign ~b to out
always @(posedge clk) begin
  case(in)
    0 : pos <= 0;
    1 : pos <= 1;
    2 : pos <= 2;
    3 : pos <= 3;
    4 : pos <= 0;
    5 : pos <= 1;
    6 : pos <= 2;
    7 : pos <= 3;
    8 : pos <= 0;
    9 : pos <= 1;
    10 : pos <= 2;
    11 : pos <= 3;
    12 : pos <= 0;
    13 : pos <= 1;
    14 : pos <= 2;
    15 : pos <= 3;
    16 : pos <= 0;
    17 : pos <= 1;
    18 : pos <= 2;
    19 : pos <= 3;
    20 : pos <= 0;
    21 :
================================================================
example-11: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk) begin
  if (sel==1) 
    pos <= in;
  else
    pos <= a;
end

================================================================
example-12: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=2, assign a to out
// When sel=3, assign c to out
always @(posedge clk) begin
    pos <= in;
end

================================================================
example-13: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk) begin
  if (in[2]) pos <= 1'd1;
  else if (in[1]) pos <= 1'd0;
  else if (in[0]) pos <= 1'd0;
  else pos <= 1'd0;
end

================================================================
example-14: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out
always @(posedge clk) begin
  if (in[0]) pos <= 0;
  else if (in[1]) pos <= 1;
  else if (in[2]) pos <= 2;
  else pos <= 3;
end

================================================================
