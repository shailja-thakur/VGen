example-0: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
	begin
	if(reset)
	q = 4'b0000;
	else if(slowena)
	begin
	if(q == 4'b1001)
	q = 4'b0000;
	else
	q = q + 1'b1;
	end
	end
	

================================================================
example-1: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk or posedge reset) begin
	if (reset) q = 0;
	else if (slowena) begin
	if (q == 9) q = 0;
	else q = q + 1;
	end
end


================================================================
example-2: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
	begin
	if(slowena) 
	begin
	if(reset)
	q <= 4'b0001;
	else
	begin
	if(q < 4'b1001)
	q <= q + 4'b0001;
	else
	q <= 4'b0001;
	end
	end
	end

================================================================
example-3: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk or posedge reset) begin
	if (reset) q = 0;
	else if (slowena) begin
	if (q == 9) q = 0;
	else q = q + 1;
	end
end
	

================================================================
example-4: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk or posedge reset) begin
	if (reset) q <= 4'b0000;
	else if (slowena) begin
	if (q == 9)
	
	// If the counter is 9, then make it 0.
	
	q <= 4'b0000;
	else q <= q + 1;
	end
	

================================================================
