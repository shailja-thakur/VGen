example-0: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
always @(posedge clk or posedge reset)
 begin
	if (reset)
	 begin
	 q <= 0;
	 end
	 else
	 if (slowena)
	 begin
	 if (q == 9)
	 begin
	 q <= 0;
	 end
	 else
	 q <= q + 1;
	 end
 end

================================================================
example-1: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
if (reset) q <= 0;
else if (slowena && q < 9) q <= q+1;


================================================================
example-2: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

// On the negative edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only decrement the output q if the ena input is high and q is not 0.

// Whenever the ena input is high, the output q is incremented by one.

always @(posedge clk) 
begin
	if (reset)
	begin
	q <= 4'b0;
	end
	else if (slowena)
	begin
	if (q == 4'b1001)
	q <= 4'b0;
	else
	q <= q + 1'b1;
	end
	else
	q <= q;
end


================================================================
