example-0: 
// This is a ram module
module ram
(
input [7:0] data,
input [5:0] addr,
input we, clk,
output [7:0] q
);
reg [7:0] ram[63:0];
// when we is high, write data to ram at address addr
// assign the ram value at address addr to q
always @(posedge we)
begin: WRITE_QUANTITY
if (addr[0])
ram[addr[7:0]]<=data;
end
// if data is high, read the ram value at that address and assign it to output q -- 4 devices are available since we demand the data at port 4,5,6,7
// Else output is z (high impediance)
always @ (posedge clk)
if (~we)
if (~((~addr[0])||addr [7:1]))
q = 8'hzz;
else
q=ram[addr[7:0]]; 

================================================================
example-1: 
// This is a ram module
module ram
(
input [7:0] data,
input [5:0] addr,
input we, clk,
output [7:0] q
);
reg [7:0] ram[63:0];
// when we is high, write data to ram at address addr
// assign the ram value at address addr to q
always @ (posedge clk) 
assign q = (we==1'b1) ? data: ram[addr];

initial
begin
ram[0] = 0;
ram[1] = 1;
ram[2] = 2;
ram[3] = 3;
ram[4] = 4;
ram[5] = 5;
ram[6] = 6;
ram[7] = 7;
	end

================================================================
example-2: 
// This is a ram module
module ram
(
input [7:0] data,
input [5:0] addr,
input we, clk,
output [7:0] q
);
reg [7:0] ram[63:0];
// when we is high, write data to ram at address addr
// assign the ram value at address addr to q
always @(posedge clk)
begin
if (we)
ram[addr] <= data;
assign q = ram[addr];
end

================================================================
