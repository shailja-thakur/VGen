// left shift and rotate operation
module left_rotate(clk,reset,amount,data,load,out);
input clk,reset;
input [2:0] amount;
input [7:0] data;
input load;
output reg [7:0] out;
// when load is high, load data to out
// otherwise rotate the out register followed by left shift the out register by amount bits
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "always @(posedge clk or posedge reset)\n\tbegin\n\tif (reset)\n\tout <= 0;\n\telse\n\tbegin\n\tif (load)\n\tout <= data;\n\telse if (amount == 3'b110)\n\tout <= 0;\n\telse if (amount == 3'b101)\n\tout <= out;\n\telse if (amount == 3'b100)\n\tout <= out >> 1;\n\telse if (amount == 3'b011)\n\tout <= out >> 1;\n\telse if (amount == 3'b010)\n\tout <= out >> 2;\n\telse if (amount == 3'b001)\n\tout <= out >> 3;\n\telse\n\tout <= out >> 4;\n\tend\n\tend\n"
    }
  ],
  "created": 1663599998,
  "id": "cmpl-fhYxcE2H64L70B84PEUQa9ZYRTUMB",
  "model": "codegen",
  "object": "text_completion",
  "usage": {
    "completion_tokens": 181,
    "prompt_tokens": 94,
    "total_tokens": 275
  }
}