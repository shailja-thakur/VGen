example-0: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or sel)
begin
	case(sel)
	1'b0: pos = 2'b00;
	1'b1: pos = in;
	endcase
end

================================================================
example-1: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or sel)
begin
	if (sel) begin
	// If sel is high, output is equal to input
	// If sel is low, output is 0
	pos = in;
	end
	else begin
	pos = 2'b00;
	end
end

================================================================
example-2: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
	begin
	case(in)
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	default: pos = 2'b00;
	endcase
	end

================================================================
example-3: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
	case(in)
	3'b000: pos=2'b00;
	3'b001: pos=2'b01;
	3'b010: pos=2'b10;
	3'b011: pos=2'b11;
	default: pos=2'b00;
	endcase
end

================================================================
example-4: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or sel)
begin
	case(sel)
	1'b0: pos = 2'b00;
	1'b1: pos = in;
	endcase
end

================================================================
example-5: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or pos)
begin
	case(in)
	3'b000: pos <= 2'b00;
	3'b001: pos <= 2'b01;
	3'b010: pos <= 2'b10;
	3'b011: pos <= 2'b11;
	3'b100: pos <= 2'b10;
	3'b101: pos <= 2'b11;
	3'b110: pos <= 2'b01;
	3'b111: pos <= 2'b00;
	endcase
end

================================================================
example-6: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin
case (in)
3'b000: pos = 2'b00;
3'b001: pos = 2'b01;
3'b010: pos = 2'b10;
3'b011: pos = 2'b11;
3'b100: pos = 2'b00;
3'b101: pos = 2'b01;
3'b110: pos = 2'b10;
3'b111: pos = 2'b11;
default: pos = 2'b00;
endcase
end

================================================================
example-7: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or sel)
begin
	if (sel) begin
	case (in)
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	3'b100: pos = 2'b01;
	3'b101: pos = 2'b10;
	3'b110: pos = 2'b11;
	3'b111: pos = 2'b00;
	endcase
	end
	else pos=2'b00;
end

================================================================
example-8: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in)
begin
	case (in)
	3'b000: pos = 2'b00; 
	3'b001: pos = 2'b01; 
	3'b010: pos = 2'b10; 
	3'b011: pos = 2'b11; 
	3'b100: pos = 2'b01; 
	3'b101: pos = 2'b10; 
	3'b110: pos = 2'b11; 
	3'b111: pos = 2'b11; 
	default: pos = 2'b00; 
	endcase
end

================================================================
example-9: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or sel)
begin
	if (sel == 1) begin
	pos = 2'b11;
	end
	else begin
	case (in)
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	default: pos = 2'b00;
	endcase
	end
end

================================================================
example-10: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or sel)
begin
	case (sel)
	1'b0: pos=2'b00;	// 00 => do nothing
	1'b1: pos=in;	// 11 => x, 22 => z, and so on
	endcase
end

================================================================
example-11: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or sel)
begin
	case(sel)
	1'b0: pos=2'b00;
	1'b1: pos=in;
	endcase
end

================================================================
example-12: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin
case(in)
3'b000: pos = 2'b00; 
3'b001: pos = 2'b01; 
3'b010: pos = 2'b10; 
3'b011: pos = 2'b11; 
3'b100: pos = 2'b01; 
3'b101: pos = 2'b10; 
3'b110: pos = 2'b11; 
3'b111: pos = 2'b11; 
default: pos = 2'b00; 
endcase 
end 

================================================================
example-13: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or sel)
begin
	casex (in)
	3'b000: pos = 2'b00;	// Pass SA
	3'b001: pos = 2'b01;	// Pass SB
	3'b010: pos = 2'b10;	// Pass SC
	3'b011: pos = 2'b11;	// Pass SD
	default: pos = 2'b00;	// Pass SA
	endcase
end

================================================================
example-14: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin
case (in)
3'b000: pos = 2'b00;
3'b001: pos = 2'b01;
3'b010: pos = 2'b10;
3'b011: pos = 2'b11;
3'b100: pos = 2'b01;
3'b101: pos = 2'b10;
3'b110: pos = 2'b11;
3'b111: pos = 2'b11;
default: pos = 2'b00;
endcase
end

================================================================
example-15: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin
case(in)
3'b000: pos = 2'b00;
3'b001: pos = 2'b01;
3'b010: pos = 2'b10;
3'b011: pos = 2'b11;
3'b100: pos = 2'b01;
3'b101: pos = 2'b10;
3'b110: pos = 2'b11;
3'b111: pos = 2'b11;
default: pos = 2'b00;
endcase
end

================================================================
example-16: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ ( in )
begin
	casex ( in )
	// 3'b000
	0: pos = 2'b00;
	// 3'b001
	1: pos = 2'b01;
	// 3'b010
	2: pos = 2'b10;
	// 3'b011
	3: pos = 2'b11;
	// 3'b100
	4: pos = 2'b01;
	// 3'b101
	5: pos = 2'b10;
	// 3'b110
	6: pos = 2'b11;
	// 3'b111
	7: pos = 2'b11;
	endcase
end

================================================================
example-17: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or negedge pos[0])
begin
	if(~pos[0])
	begin
	case(in)
	3'b000: pos[1] = 0;
	3'b001: pos[1] = 1;
	3'b010: pos[1] = 1;
	3'b011: pos[1] = 2;
	3'b100: pos[1] = 1;
	3'b101: pos[1] = 2;
	3'b110: pos[1] = 2;
	3'b111: pos[1] = 3;
	endcase
	end
	else
	pos[1] = 0;
end

================================================================
example-18: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
case(in)
3'b000: pos = 2'b00;
3'b001: pos = 2'b01;
3'b010: pos = 2'b10;
3'b011: pos = 2'b11;
3'b100: pos = 2'b01;
3'b101: pos = 2'b10;
3'b110: pos = 2'b11;
3'b111: pos = 2'b11;
default: pos = 2'b00;
endcase
end

================================================================
example-19: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or sel)
begin
	if(sel) begin
	case(in)
	3'b000: pos=2'b00;
	3'b001: pos=2'b01;
	3'b010: pos=2'b10;
	3'b011: pos=2'b11;
	3'b100: pos=2'b00;
	3'b101: pos=2'b01;
	3'b110: pos=2'b10;
	3'b111: pos=2'b11;
	endcase
	end
	else pos=2'b00;
end

================================================================
example-20: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or sel)
begin
	case(sel)
	1'b0: pos = 2'b00;
	1'b1: pos = in;
	endcase
end

================================================================
example-21: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
	case(in)
	3'b000: pos=2'b00;
	3'b001: pos=2'b01;
	3'b010: pos=2'b10;
	3'b011: pos=2'b11;
	default: pos=2'b00;
	endcase
end

================================================================
example-22: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin
case (in)
3'b000: pos = 2'b00;
3'b001: pos = 2'b01;
3'b010: pos = 2'b10;
3'b011: pos = 2'b11;
default: pos = 2'b00;
endcase
end

================================================================
example-23: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
	case (in)
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	default: pos = 2'b00;
	endcase
end

================================================================
example-24: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
case(in)
3'b000: pos=2'b00;
3'b001: pos=2'b01;
3'b010: pos=2'b10;
3'b011: pos=2'b11;
default: pos=2'b00;
endcase
end

================================================================
example-25: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or sel)
begin
	if (sel) begin
	case (in)
	3'd0: pos = 2'd0;
	3'd1: pos = 2'd1;
	3'd2: pos = 2'd2;
	3'd3: pos = 2'd3;
	3'd4: pos = 2'd4;
	3'd5: pos = 2'd5;
	3'd6: pos = 2'd6;
	3'd7: pos = 2'd7;
	default: pos = 2'd0;
	endcase
	end
	else pos = 2'd0;
end

================================================================
example-26: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin
	casex (in)
	// 3'b000
	0: pos = 2'b00;
	// 3'b001
	1: pos = 2'b01;
	// 3'b010
	2: pos = 2'b10;
	// 3'b011
	3: pos = 2'b11;
	// 3'b100
	4: pos = 2'b00;
	// 3'b101
	5: pos = 2'b01;
	// 3'b110
	6: pos = 2'b10;
	// 3'b111
	7: pos = 2'b11;
	endcase
end

================================================================
example-27: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or negedge pos[0])
if(!pos[0])
begin
	case(in)
	3'b000: pos[1] <= 0;
	3'b001: pos[1] <= 0;
	3'b010: pos[1] <= 1;
	3'b011: pos[1] <= 1;
	3'b100: pos[1] <= 0;
	3'b101: pos[1] <= 1;
	3'b110: pos[1] <= 0;
	3'b111: pos[1] <= 1;
	endcase
end
else
begin
	case(in)
	3'b000: pos[1] <= 0;
	3'b001: pos[1] <= 0;
	3'b010: pos[1] <= 0;
	
================================================================
example-28: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or sel)
begin
	if (sel) begin
	case (in)
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	3'b100: pos = 2'b00;
	3'b101: pos = 2'b01;
	3'b110: pos = 2'b10;
	3'b111: pos = 2'b11;
	default: pos = 2'b00;
	endcase
	end
	else pos = 2'b00;
end

================================================================
example-29: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or pos)
begin
	if(in[2]==1'b1)
	begin
	pos=2'b11;
	end
	else if(in[1]==1'b1)
	begin
	pos=2'b10;
	end
	else if(in[0]==1'b1)
	begin
	pos=2'b01;
	end
	else
	begin
	pos=2'b00;
	end
end

================================================================
example-30: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or pos)
begin
	case(in)
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	3'b100: pos = 2'b01;
	3'b101: pos = 2'b10;
	3'b110: pos = 2'b11;
	3'b111: pos = 2'b11;
	default: pos = 2'b00;
	endcase
end

================================================================
example-31: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
	casex(in)
	3'b000: pos = 2'b00; 
	3'b001: pos = 2'b01; 
	3'b010: pos = 2'b10; 
	3'b011: pos = 2'b11; 
	3'b100: pos = 2'b00; 
	3'b101: pos = 2'b01; 
	3'b110: pos = 2'b10; 
	3'b111: pos = 2'b11;
	default: pos = 2'b00;
	endcase
end

================================================================
example-32: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
case(in)
3'b000: pos=2'b00;
3'b001: pos=2'b01;
3'b010: pos=2'b10;
3'b011: pos=2'b11;
default: pos=2'b00;
endcase
end

================================================================
example-33: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or sel)
begin
	case(sel)
	1'b0: pos=2'b00;	// 00 => do nothing
	1'b1: pos=in;	// 11 => output b
	endcase
end

================================================================
example-34: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
	case (in)
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	3'b100: pos = 2'b01;
	3'b101: pos = 2'b10;
	3'b110: pos = 2'b11;
	3'b111: pos = 2'b11;
	default: pos = 2'b00;
	endcase
end

================================================================
example-35: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
	case (in)
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	3'b100: pos = 2'b01;
	3'b101: pos = 2'b10;
	3'b110: pos = 2'b11;
	3'b111: pos = 2'b11;
	default: pos = 2'b00;
	endcase
end

================================================================
example-36: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
	case (in)
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	default: pos = 2'b00;
	endcase
end

================================================================
example-37: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or sel)
begin
	if (sel) begin
	case (in)
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	3'b100: pos = 2'b11;
	3'b101: pos = 2'b10;
	3'b110: pos = 2'b01;
	3'b111: pos = 2'b00;
	endcase
	end
	else pos=2'b00;
end

================================================================
example-38: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
	case(in)
	3'b000: pos = 2'b00;	// LSB priority
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	3'b100: pos = 2'b01;	// MSB priority
	3'b101: pos = 2'b10;
	3'b110: pos = 2'b11;
	3'b111: pos = 2'b00;
	default: pos = 2'b00;
	endcase
end

================================================================
example-39: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @( in or sel )
begin
	if ( sel == 1 )
	begin
	// When sel is high, output is equal to b
	// Otherwise, output is zero
	pos = in[1:0];
	end
	else
	begin
	pos = 2'b0;
	end
end

================================================================
example-40: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin
case(in)
3'b000: pos=2'b00;
3'b001: pos=2'b01;
3'b010: pos=2'b10;
3'b011: pos=2'b11;
3'b100: pos=2'b00;
3'b101: pos=2'b01;
3'b110: pos=2'b10;
3'b111: pos=2'b11;
default: pos=2'b00;
endcase
end

================================================================
example-41: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in)
begin
	case(in)
	3'b000: pos=2'b00;
	3'b001: pos=2'b01;
	3'b010: pos=2'b10;
	3'b011: pos=2'b11;
	default: pos=2'b00;
	endcase
end

================================================================
example-42: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in or sel)
begin
	case(sel)
	1'b0: pos=2'b00;
	1'b1: pos=in;
	endcase
end

================================================================
example-43: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
	casex(in)
	3'b000: pos = 2'b00;	// 0
	3'b001: pos = 2'b01;	// 1
	3'b010: pos = 2'b10;	// 2
	3'b011: pos = 2'b11;	// 3
	3'b100: pos = 2'b00;	// 4
	3'b101: pos = 2'b01;	// 5
	3'b110: pos = 2'b10;	// 6
	3'b111: pos = 2'b11;	// 7
	endcase
end

================================================================
example-44: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or negedge pos[0])
if (in[2]==1'b1) begin
	pos[1] <= 1'b1;
	pos[0] <= 1'b0;
end
else if (in[1]==1'b1) begin
	pos[1] <= 1'b0;
	pos[0] <= 1'b1;
end
else if (in[0]==1'b1) begin
	pos[1] <= 1'b0;
	pos[0] <= 1'b0;
end
else begin
	pos[1] <= 1'b0;
	pos[0] <= 1'b0;
end

================================================================
example-45: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or sel)
begin
	if (sel) begin
	case (in)
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	3'b100: pos = 2'b00;
	3'b101: pos = 2'b01;
	3'b110: pos = 2'b10;
	3'b111: pos = 2'b11;
	endcase
	end
	else pos = 2'b00;
end

================================================================
example-46: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or negedge pos[0] or negedge pos[1])
begin
	if(in[2]==1'b1)
	begin
	pos[1]=1'b1;
	pos[0]=1'b0;
	end
	else if(in[1]==1'b1)
	begin
	pos[1]=1'b0;
	pos[0]=1'b1;
	end
	else if(in[0]==1'b1)
	begin
	pos[1]=1'b0;
	pos[0]=1'b0;
	end
	else
	begin
	pos[1]=1'b0;
	pos[0]=1'b0;
	end
end

================================================================
example-47: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ ( in )
begin
	case ( in )
	3'b000: pos = 2'b00;
	3'b001: pos = 2'b01;
	3'b010: pos = 2'b10;
	3'b011: pos = 2'b11;
	default: pos = 2'b00;
	endcase
end

================================================================
example-48: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin
case (in)
3'b000: pos = 2'b00;
3'b001: pos = 2'b01;
3'b010: pos = 2'b10;
3'b011: pos = 2'b11;
3'b100: pos = 2'b01;
3'b101: pos = 2'b10;
3'b110: pos = 2'b11;
3'b111: pos = 2'b00;
default: pos = 2'b00;
endcase
end

================================================================
example-49: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin
	casex (in)
	3'b000: pos = 2'b00; 
	3'b001: pos = 2'b01; 
	3'b010: pos = 2'b10; 
	3'b011: pos = 2'b11; 
	default: pos = 2'b00; 
	endcase
end

================================================================
