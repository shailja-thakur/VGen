example-0: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*) begin
casex( in )
3'b0xxx: pos = 2'd2;
3'b101x: pos = 2'd1;
3'b111x: pos = 2'd0;
default: pos = 2'b00;
endcase
end
/*
always @(*) begin
//
casex( in )
3'b0011: pos = 2'd1;
3'b0010: pos=2'd2;
3'b0111: pos = 2'd0;
default: pos = 2'b00;
endcase
end
*/

================================================================
example-1: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
wire M,S;

// chain it together
mux2x1 mux( M,S, in[2],in[1], in[0] );
// S=1(in[0]) AND M=1(in[2]), OR
// S=0(in[2]) AND M=1(in[1]), OR
// S=1(in[1]) AND M=1(in[0]), OR
// S=1(in[2]) AND M=0(in[0]), OR
// S=0(in[1]) AND M=0(in[0]), OR
// S=0(in[2]) AND M=0(in[1]), OR
// S=0(in[1]) AND M=0(in[0]), OR
// S=0(in[2]) AND M=0(in[1]), OR
// S
================================================================
example-2: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in) 
begin
	case(in)
	3'b000: begin pos = 2'b01; end 
	3'b001: begin pos = 2'b11; end 
	3'b100: begin pos = 2'b10; end 
	3'b101: begin pos = 2'b00; end 
	endcase
end

================================================================
example-3: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @* 
casex ( in ) 
3'b000: pos = 2'b00; 
3'b001: pos = 2'b01; 
3'b010: pos = 2'b10; 
3'b011: pos = 2'b11; 
3'b100: pos = 2'b11; 
default: pos = 2'b01; 
endcase 




================================================================
example-4: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (in or pos)
case (pos)
 3'b000 : begin 
 //out and sel <=0;
 out <= in;
 end
 3'b001 : begin 
 out <= 2'b00;
 end
 3'b010 : begin 
 out <= 2'b01;
 end
 3'b011 : begin 
 out <= 2'b10;
 end
 3'b100 : begin 
 out <= 2'b11;
 end
 3'b101 : begin 
 out <= 2'bzz;
 end
 3'b110 : begin 
 out <= ~ in;
 end
 3'b111 : begin 
 out <= ~2'bzz;
 end
endcase



================================================================
example-5: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in) 
case (in)
3'b000 : pos = 1;
3'b001 : pos = 2;
3'b010 : pos = 3;
3'b011 : pos = 4;
3'b100 : pos = 5;
3'b101 : pos = 6;
default : pos = 3;

endcase

================================================================
example-6: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When in=3, out = 2
always@* 
begin
casez(in)

3'b1x00:begin 
pos = 2'b00; end

3'b110? : begin 
pos = 2'b01; end 

3'bx11 ?: begin 
pos = 2'b10; end

3'b0xx0 : begin 
pos = 2'b11; end

default: pos = 2'b00;
endcase
end

================================================================
example-7: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(in) begin
casex (in) 
3'b000: pos = 2'b00;
3'b001: pos = 2'b01;
3'b010: pos = 2'b10;
3'b010: pos = 2'b11;
default: pos = 2'b00;
endcase
end
module comparator(
input logic [1:0] s,
input logic e,
output logic g
);
always@ (s, e) begin
	case ({s,e}) 
	4'b000: g=1'b0; #5 
	4'b010: g=1'b0; #5
	4'b001: g=1'b0; #5
	4'b001: g=1'b0; #5
	4'b011: g=1'
================================================================
example-8: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(*)
begin
casex (in)
3'b000: pos=2'b00;
3'b001: pos=2'b01;
3'b010: pos=2'b10;
3'b011: pos=2'b10;
3'b100: pos=2'b11;
3'b101: pos=2'b11;
3'b110: pos=2'b11;
3'b111: pos=2'b11;
default: pos=2'b00;
endcase
end 

================================================================
example-9: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @* sel1 = (~in[0] & ~in[1] & ~in[2]) | (~in[1] & in[0]) | (in[0] & in[1]);
always @(*)
case(sel1)
1'b0: pos = 2'b01;
1'b1: pos = 2'b10;
default: pos = 2'b00;
endcase

================================================================
