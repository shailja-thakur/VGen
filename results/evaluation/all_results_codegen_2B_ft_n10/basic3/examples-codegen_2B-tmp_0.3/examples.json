// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "always @(*)\nbegin\ncasex (in)\n3'b000: pos = 2'b00;\n3'b001: pos = 2'b01;\n3'b010: pos = 2'b10;\n3'b011: pos = 2'b11;\ndefault: pos = 2'b00;\nendcase\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "always @(*)\nbegin\ncase(in)\n3'b000: pos = 2'b00;\n3'b001: pos = 2'b01;\n3'b010: pos = 2'b10;\n3'b011: pos = 2'b11;\ndefault: pos = 2'b00;\nendcase\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "always @(*)\nbegin\ncasex (in)\n3'b000: pos = 2'b00;\n3'b001: pos = 2'b01;\n3'b010: pos = 2'b10;\n3'b011: pos = 2'b11;\ndefault: pos = 2'b00;\nendcase\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "always @(*)\nbegin\ncase(in)\n3'b000: pos = 2'b00;\n3'b001: pos = 2'b01;\n3'b010: pos = 2'b10;\n3'b011: pos = 2'b11;\ndefault: pos = 2'b00;\nendcase\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "always @( in or pos ) begin\ncase( in )\n3'b000: pos = 2'b00;\n3'b001: pos = 2'b01;\n3'b010: pos = 2'b10;\n3'b011: pos = 2'b11;\ndefault: pos = 2'b00;\nendcase\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "always @(*)\nbegin\n\tcase(in)\n\t3'b000: pos = 2'b00;\n\t3'b001: pos = 2'b01;\n\t3'b010: pos = 2'b10;\n\t3'b011: pos = 2'b11;\n\t3'b100: pos = 2'b00;\n\t3'b101: pos = 2'b01;\n\t3'b110: pos = 2'b10;\n\t3'b111: pos = 2'b11;\n\tdefault: pos = 2'b00;\n\tendcase\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "always @(*)\nbegin\n\tcasex (in)\n\t3'b000: pos = 2'b00;\n\t3'b001: pos = 2'b01;\n\t3'b010: pos = 2'b10;\n\t3'b011: pos = 2'b11;\n\t3'b100: pos = 2'b00;\n\t3'b101: pos = 2'b01;\n\t3'b110: pos = 2'b10;\n\t3'b111: pos = 2'b11;\n\tdefault: pos = 2'b00;\n\tendcase\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "always @(*)\nbegin\nif(in[2]==1'b1)\n\tpos=2'b11;\nelse if(in[1]==1'b1)\n\tpos=2'b10;\nelse if(in[0]==1'b1)\n\tpos=2'b01;\nelse\n\tpos=2'b00;\nend\n"
    },
    {
      "finish_reason": "stop",
      "index": 8,
      "logprobs": null,
      "text": "always @(*)\ncase(in)\n3'b000: pos = 2'b00;\n3'b001: pos = 2'b01;\n3'b010: pos = 2'b10;\n3'b011: pos = 2'b11;\ndefault: pos = 2'b00;\nendcase\n"
    },
    {
      "finish_reason": "stop",
      "index": 9,
      "logprobs": null,
      "text": "always @(*)\nbegin\ncase(in)\n3'b000: pos = 2'b00;\n3'b001: pos = 2'b01;\n3'b010: pos = 2'b10;\n3'b011: pos = 2'b11;\nendcase\nend\n"
    }
  ],
  "created": 1663606934,
  "id": "cmpl-BYMPIZLi6eSn93Hp1NcnWyWx6ibv8",
  "model": "codegen",
  "object": "text_completion",
  "usage": {
    "completion_tokens": 936,
    "prompt_tokens": 65,
    "total_tokens": 1001
  }
}