example-0: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// This is a full adder. A full adder adds two bits and produces a sum and carry-out.
module full_adder( 
input a, b,
output cout, sum, carry_out );

// This is a carry-out shifter. A carry-out shifter shifts a carry-out bit to the left.
module carry_out_shifter( 
input cout,
output cout_out );

// This is a carry-in shifter. A carry-in shifter shifts a carry-in bit to the right.
module carry_in_shifter( 
input cout,
output cout_in );

// This is a carry-in shifter. A carry-in shifter shifts a carry-in bit to the right.
module carry_in_shifter( 
input cout,
output cout_in );

// This is a carry
================================================================
example-1: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// This is a full adder. A full adder adds two bits and produces a sum and carry-out.
module full_adder( 
input a, b,
output cout, sum, carry_out );

// This is a carry-out adder. A carry-out adder adds two bits and produces a sum and carry-out.
module carry_out_adder( 
input a, b,
output cout, sum, carry_out );

// This is a carry-out adder. A carry-out adder adds two bits and produces a sum and carry-out.
module carry_out_adder_2( 
input a, b,
output cout, sum, carry_out );

// This is a carry-out adder. A carry-out adder adds two bits and produces a sum and carry-out.
module carry_out_adder_3
================================================================
example-2: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// This is a full adder. A full adder adds two bits and produces a sum and carry-out.
module full_adder( 
input a, b,
output cout, sum );

// This is a carry-out only adder. A carry-out only adder adds two bits and produces a sum and carries out.
module carry_out_adder( 
input a, b,
output cout, sum );

// This is a carry-out only adder. A carry-out only adder adds two bits and produces a sum and carries out.
module carry_out_adder2( 
input a, b,
output cout, sum );

// This is a carry-out only adder. A carry-out only adder adds two bits and produces a sum and carries out.
module carry_out_adder3( 
input a, b,
output cout
================================================================
example-3: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

function half_adder_impl()
{
    var sum = 0;
    var carry_out = 0;
    var a_bit = 0;
    var b_bit = 0;

    // Add the two bits
    for( var i = 0; i < 32; i++ )
    {
        a_bit = a[i];
        b_bit = b[i];
        sum = sum + a_bit + b_bit;
        carry_out = sum >> 1;
        sum = sum & 1;
    }

    // Output the sum and the carry-out
    cout = sum;
    cout = cout << 32;
    cout = cout + carry_out;
}

================================================================
example-4: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

function half_adder_inst( a, b )
{
  cout = a + b;
  sum = a + b + 1;
}

// This is a full adder. A full adder adds two bits and produces a sum and carry-out.
module full_adder( 
input a, b,
output cout, sum );

function full_adder_inst( a, b )
{
  cout = a + b;
  sum = a + b + 1;
}

// This is a subtracter. A subtracter subtracts two bits and produces a sum and carry-out.
module subtracter( 
input a, b,
output cout, sum );

function subtracter_inst( a, b )
{
  cout = a - b;
  sum = a - b + 1;
}

// This is
================================================================
