// This is a finite state machine that recognizes the sequence 101 on the input signal x. 
module adv_fsm(
input clk,
input reset,
input x,
output z ); 
reg [1:0] present_state, next_state;
parameter IDLE=0, S1=1, S10=2, S101=3;
// output signal z is asserted to 1 when present_state is S101 
// present_state is reset to IDLE when rset is high
// otherwise it is assigned next state
// if present_state is IDLE, next_state is assigned S1 if x is 1, otherwise next_state stays at IDLE
// if present_state is S1, next_state is assigned S10 if x is 0, otherwise next_state stays at IDLE 
// if present_state is S10, next_state is assigned S101 if x is 1, otherwise next_state stays at IDLE 
// if present_state is S101, next_state is assigned IDLE

{
  "choices": [
    {
      "finish_reason": "length",
      "index": 0,
      "logprobs": null,
      "text": "D - + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + -            - +\n                                                                                                    "
    },
    {
      "finish_reason": "length",
      "index": 1,
      "logprobs": null,
      "text": "D - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + - - - - - - - - - - - - - -\n\t//\t//       +   - +  +  +   +  +  +  +   +   +   +  +    +   +   +    +   +    +        +                                     "
    },
    {
      "finish_reason": "length",
      "index": 2,
      "logprobs": null,
      "text": "D - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --\n\t//       +     +  +  +  +   +   +  +   +  +   +  +     +  +       + "
    },
    {
      "finish_reason": "length",
      "index": 3,
      "logprobs": null,
      "text": "D - +  +   +  -   +    +    +    +                                                                                                                                                                               "
    },
    {
      "finish_reason": "length",
      "index": 4,
      "logprobs": null,
      "text": "D - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +\n\t//   *  +  +  +  +  +  +  +  +  +  +  +  +  +  +  +   + +   +  + +   + +   + +   +  +  + +    + + +    + +     + + +     + +    +     +   "
    },
    {
      "finish_reason": "length",
      "index": 5,
      "logprobs": null,
      "text": "D -O -O - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --\n\t//                                               "
    },
    {
      "finish_reason": "length",
      "index": 6,
      "logprobs": null,
      "text": "D -O -O - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - + - - - - - - + - - - - - - + - + x;\n\t//    +  +  +   +  +  +  +  +  +  +  +   +  +  +  +  +  +   + +   +  + +    + + +    + +   + +     + + +     + + +     + +    + +   "
    },
    {
      "finish_reason": "length",
      "index": 7,
      "logprobs": null,
      "text": "D - +  -  -  -   -                                                                                                                                                                                            "
    },
    {
      "finish_reason": "length",
      "index": 8,
      "logprobs": null,
      "text": "D - or anYO - or anYO - orYO\n\n\n\n\t//\t//\n\t//\t//\t//\n\t//\t//\t//\t//\t//\t//\t//\t//\t//\n//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t//\t"
    },
    {
      "finish_reason": "length",
      "index": 9,
      "logprobs": null,
      "text": "D - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"
    }
  ],
  "created": 1663299348,
  "id": "cmpl-xJPLzjiGnVTOjo6B7PVmKX3pb0FDG",
  "model": "codegen",
  "object": "text_completion",
  "usage": {
    "completion_tokens": 2000,
    "prompt_tokens": 232,
    "total_tokens": 2232
  }
}