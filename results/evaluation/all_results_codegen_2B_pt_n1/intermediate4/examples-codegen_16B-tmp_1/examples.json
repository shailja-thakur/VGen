// Design a Moore state machine with two states 0 and 1, one input in, and one output out. Reset state is 0.
module simple_fsm(clk, reset, in, out);
input clk;
input reset;
input in;
output out;
wire out;
reg present_state, next_state;
// In state 0, if in=1, stay in state 0. In state 0, if in=0, go to state 1
// In state 1, if in=1, stay in state 1. In state 1, if in=0, go to state 0
// out=1 in state 0 and out=0 in state 1
{
  "choices": [
    {
      "finish_reason": "length",
      "index": 0,
      "logprobs": null,
      "text": "// out=1 in state 1 and out=0 in state 0\nparameter INIT=1'b0;\nparameter S1=1'b1;\nreg [1:0] state;\n//\n\nalways @(posedge clk)\nbegin\nif(reset==1'b0)\n\tbegin\n\t//next_state=1;\n\tpresent_state=INIT;\n\tstate=0;\n\tend\n\nelse\n\tbegin\n\tstate=next_state;\n\t//present_state=next_state;\n\tend\nend\n\n\nalways @(state or in)\nbegin\n\t//present_state<=next_state;\n\tcase(state)\n\tINIT: begin\n\tif(in) begin\n\tnext_state=S1;\n\tpresent_state=S1;\n\tend\n\telse begin\n\tnext_"
    }
  ],
  "created": 1663333325,
  "id": "cmpl-Cb4leL5ku3eE5GVlF2SpMEusIreNh",
  "model": "codegen",
  "object": "text_completion",
  "usage": {
    "completion_tokens": 200,
    "prompt_tokens": 148,
    "total_tokens": 348
  }
}