example-0: 
// Design a module that implements an AND gate

module and_gate( 
    input a, 
    input b, 
    output out );

    // assing the AND of a and b to out

assign out = a & b;


================================================================
example-1: 
// Design a module that implements an AND gate

module and_gate( 
    input a, 
    input b, 
    output out );

    // assing the AND of a and b to out
//nitely declare the inputs
assign out = a & b;


================================================================
example-2: 
// Design a module that implements an AND gate

module and_gate( 
    input a, 
    input b, 
    output out );

    // assing the AND of a and b to out

// change not() by or( a,b) by and(a,b)

// define andgate gate1 and gate2 in stdev

// define the boolean saying if the output is true or false

// define xor(in1,in2,out);

// xor extracted as modules

// i/o port references
 
// connect a and b to out

// cache enable
// improve test bench procedure ot try running the entire program

// variable
 
// designpr to teststimulus as an input and remember to change design time upon changes.. thorn' note format to shuffle...
// perform offline.



// rationalize how to test stimulus..

// infrastructure...

// give the input and outputs as ports

// code lint and test strategy???

// assignment due to truth deciding

// modified tristate logic

module st
================================================================
example-3: 
// Design a module that implements an AND gate

module and_gate( 
    input a, 
    input b, 
    output out );

    // assing the AND of a and b to out

================================================================
example-4: 
// Design a module that implements an AND gate

module and_gate( 
    input a, 
    input b, 
    output out );

    // assing the AND of a and b to out

assign out = a & b;


================================================================
example-5: 
// Design a module that implements an AND gate

module and_gate( 
    input a, 
    input b, 
    output out );

    // assing the AND of a and b to out
assign out = a & b;


================================================================
example-6: 
// Design a module that implements an AND gate

module and_gate( 
    input a, 
    input b, 
    output out );

    // assing the AND of a and b to out
assign out = a & b;


================================================================
example-7: 
// Design a module that implements an AND gate

module and_gate( 
    input a, 
    input b, 
    output out );

    // assing the AND of a and b to out


================================================================
example-8: 
// Design a module that implements an AND gate

module and_gate( 
    input a, 
    input b, 
    output out );

    // assing the AND of a and b to out 

================================================================
example-9: 
// Design a module that implements an AND gate

module and_gate( 
    input a, 
    input b, 
    output out );

    // assing the AND of a and b to out
 output out;
 assign out = a & b;

 endmodule
 // This implementation was based on https://www.cs.ucsb.edu/~koc/cs290g/docs/w01/examp6.pdf
// collaboration: 20080326 lovezhu327@sjtu.edu.cn
// team: dlz1101100
// main code

module or_test;
	reg a,b;
	wire out;
	or_gate inst(.a(a),.b(b),.out(out));
	initial begin
	$dumpfile("test.vcd"); 
	$dumpvars(0, or_test); 
	$monitor($time,"%d %d out:%d",$time,a,b,out);
	a=0;b=0;
#3 a=0;b=
================================================================
