example-0: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
 if (reset)
 q <= 0;
 else if (slowena)
 if (q < 9)
 q <= q + 1;
 else
 q <= 0;
end

================================================================
example-1: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, then do nothing.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q == 9)
	begin
	q <= 0;
	end
	else
	begin
	q <= q + 1;
	end
	end
end


================================================================
example-2: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q != 9)
	q <= q + 1;
	end
end


================================================================
example-3: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, do nothing.
always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q != 9)
	q <= q + 1;
	end
end

================================================================
example-4: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
 if (reset)
 q <= 0;
 else if (slowena)
 if (q < 9)
 q <= q + 1;
 else
 q <= 0;
end


================================================================
example-5: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q == 9)
	begin
	q <= 0;
	end
	else
	begin
	q <= q + 1;
	end
	end
end


================================================================
example-6: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, do nothing.

always @(posedge clk)
begin
 if (reset)
 q <= 0;
 else if (slowena)
 if (q < 9)
 q <= q + 1;
 else
 q <= 0;
end

================================================================
example-7: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, do nothing.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q < 9)
	q <= q + 1;
	else
	q <= 0;
	end
	else
	q <= q;
end


================================================================
example-8: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, do nothing.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q < 9)
	q <= q + 1;
	else
	q <= 0;
	end
	else
	q <= q;
end


================================================================
example-9: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
 if (reset)
 q <= 0;
 else if (slowena)
 if (q < 9)
 q <= q + 1;
 else
 q <= 0;
end

================================================================
example-10: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, do nothing.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q != 9)
	q <= q + 1;
	end
end


================================================================
example-11: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, do nothing.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q < 9)
	q <= q + 1;
	else
	q <= 0;
	end
	else
	q <= q;
end


================================================================
example-12: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
 if (reset)
 q <= 0;
 else if (slowena)
 if (q < 9)
 q <= q + 1;
 else
 q <= 0;
end

================================================================
example-13: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, do nothing.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q < 9)
	q <= q + 1;
	else
	q <= 0;
	end
	else
	q <= q;
end


================================================================
example-14: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, do nothing.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q != 9)
	q <= q + 1;
	end
end


================================================================
example-15: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
 if (reset)
 q <= 0;
 else if (slowena)
 if (q < 9)
 q <= q + 1;
 else
 q <= 0;
end


================================================================
example-16: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
 if (reset)
 q <= 0;
 else if (slowena)
 if (q < 9)
 q <= q + 1;
 else
 q <= 0;
end


================================================================
example-17: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, q is not incremented.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q == 9)
	begin
	q <= 0;
	end
	else
	begin
	q <= q + 1;
	end
	end
end


================================================================
example-18: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q != 9)
	q <= q + 1;
	end
end


================================================================
example-19: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q != 9)
	q <= q + 1;
	end
end


================================================================
example-20: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
 if (reset)
 q <= 0;
 else if (slowena)
 if (q < 9)
 q <= q + 1;
 else
 q <= 0;
end


================================================================
example-21: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q < 9)
	q <= q + 1;
	else
	q <= 0;
	end
	else
	q <= q;
end


================================================================
example-22: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, q is not incremented.

always @(posedge clk)
begin
 if (reset)
 q <= 0;
 else if (slowena)
 if (q < 9)
 q <= q + 1;
 else
 q <= 0;
end

================================================================
example-23: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, then do nothing.

always @(posedge clk)
begin
	if(reset)
	begin
	q <= 0;
	end
	else if(slowena)
	begin
	if(q < 9)
	q <= q + 1;
	else
	q <= 0;
	end
	else
	q <= q;
end


================================================================
example-24: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
 if (reset)
 q <= 0;
 else if (slowena)
 if (q < 9)
 q <= q + 1;
 else
 q <= 0;
end


================================================================
example-25: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q < 9)
	q <= q + 1;
	else
	q <= 0;
	end
	else
	q <= q;
end


================================================================
example-26: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, then do nothing.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q < 9)
	q <= q + 1;
	else
	q <= 0;
	end
	else
	q <= q;
end

================================================================
example-27: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
 if (reset)
 q <= 0;
 else if (slowena)
 if (q < 9)
 q <= q + 1;
 else
 q <= 0;


================================================================
example-28: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, do nothing.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q < 9)
	q <= q + 1;
	else
	q <= 0;
	end
	else
	q <= q;
end


================================================================
example-29: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q < 9)
	q <= q + 1;
	else
	q <= 0;
	end
	else
	q <= q;
end


================================================================
example-30: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q != 9)
	q <= q + 1;
	end
end


================================================================
example-31: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
 if (reset)
 q <= 0;
 else if (slowena)
 if (q < 9)
 q <= q + 1;
 else
 q <= 0;
end


================================================================
example-32: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q != 9)
	q <= q + 1;
	end
end


================================================================
example-33: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q == 9)
	begin
	q <= 0;
	end
	else
	begin
	q <= q + 1;
	end
	end
end


================================================================
example-34: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, then do nothing.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q != 9)
	q <= q + 1;
	end
end

================================================================
example-35: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q != 9)
	q <= q + 1;
	end
end


================================================================
example-36: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q < 9)
	q <= q + 1;
	else
	q <= 0;
	end
	else
	q <= q;
end


================================================================
example-37: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, then do nothing.

always @(posedge clk)
begin
 if (reset)
 q <= 0;
 else if (slowena)
 if (q < 9)
 q <= q + 1;
 else
 q <= 0;
 end

================================================================
example-38: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, do nothing.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q < 9)
	q <= q + 1;
	else
	q <= 0;
	end
	else
	q <= q;
end


================================================================
example-39: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, do nothing.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q < 9)
	q <= q + 1;
	else
	q <= 0;
	end
end

================================================================
example-40: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, do nothing.
always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q < 9)
	q <= q + 1;
	else
	q <= 0;
	end
	else
	q <= q;
end

================================================================
example-41: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, q is not incremented.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q == 9)
	begin
	q <= 0;
	end
	else
	begin
	q <= q + 1;
	end
	end
end


================================================================
example-42: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q < 9)
	q <= q + 1;
	else
	q <= 0;
	end
	else
	q <= q;
end


================================================================
example-43: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q != 9)
	q <= q + 1;
	end
end


================================================================
example-44: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, then do nothing.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q < 9)
	q <= q + 1;
	else
	q <= 0;
	end
	else
	q <= q;
end


================================================================
example-45: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
 if (reset)
 q <= 0;
 else if (slowena)
 if (q < 9)
 q <= q + 1;
 else
 q <= 0;
end


================================================================
example-46: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, q is not incremented.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q < 9)
	q <= q + 1;
	else
	q <= 0;
	end
	else
	q <= q;
end


================================================================
example-47: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.
// If the ena input is low, do nothing.

always @(posedge clk)
begin
	if (reset)
	begin
	q <= 0;
	end
	else if (slowena)
	begin
	if (q != 9)
	q <= q + 1;
	end
end

================================================================
example-48: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
 if (reset)
 q <= 0;
 else if (slowena)
 if (q != 9)
 q <= q + 1;
 else
 q <= 0;
 end

================================================================
example-49: 
// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

always @(posedge clk)
begin
 if (reset)
 q <= 0;
 else if (slowena)
 if (q < 9)
 q <= q + 1;
 else
 q <= 0;
end


================================================================
