example-0: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

// a and b are inputs.
// sum is output.

// Create wires to connect the half adder two flops.
wire w1, w2, w3;

// Create the half adder.
half_adder_1bit h1( a, b, w1, w2 );
half_adder_1bit h2( w1, w2, sum, w3 );
assign cout = w3;


================================================================
example-1: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
wire w1, w2;
xor( w1, a, b );
xor( sum, w1, w2 );
and( w2, a, b );
and( w3, w1, w2 );
or( cout, w3, w2 );

================================================================
example-2: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );
// Half adder is connected to both the input and output.
// Carry out is just a copy of the carry in bit.
assign cout = b;
assign sum = a ^ b;

================================================================
example-3: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

assign sum = a ^ b;
assign cout = a & b;

================================================================
example-4: 
// This is a half adder. A half adder adds two bits and produces a sum and carry-out.
module half_adder( 
input a, b,
output cout, sum );

assign sum = a ^ b;
assign cout = a & b;


================================================================
