// Design a decade counter that counts from 0 through 9, inclusive.

module count_slow(
    input clk,
    input slowena,
    input reset,
    output reg [3:0] q);

// On the positive edge of the clock:
// if reset is high, reset the output q to 0. 
// Otherwise, only increment the output q if the ena input is high and q is not 9.

// For example, if q is 0, then increment the clb input to 1, depending on which
// if q is 9.
//
// For sufficient power perspective, that we work in clb to 0 and 0 at which the most
// actualizired past this is about as an "sense" device.
//
// At this system, the clock can home devided clb by 350-400 MHz.
//

// Ports for timer, q's clock:
//
reg timer_ena = 0;
reg timer_trig;
reg timer_srst = 0;

// Synchronize timer and timer_trig are generated by the period of sys_clk
// to acheive in clk
always @(posedge clk) begin
  if (freeze) begin
    timer_ena <= ca;
    timer_trig  <=  tend
end
endmodule
