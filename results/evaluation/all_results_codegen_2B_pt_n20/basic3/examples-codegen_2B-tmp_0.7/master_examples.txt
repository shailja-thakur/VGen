example-0: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[0] << 4) | (in[1] << 2) | ((in[0] << 2) & 0x4) | (in[1] & 0x3);
assign out = (pos >> 2) & 0x1;

================================================================
example-1: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos[3:0] = in[3:0];
assign pos[1:0] = b;
); 

================================================================
example-2: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge in)
priority_encoder_tristate.pos = pos; 
`

================================================================
example-3: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = sel[2:1] and in[0] or (sel[2:1] and in[1]);
// [0]:  [1]:  [2]:  [3]:  [4]:  [5]:  [6]:
//           [7]:  [8]:
always @(posedge clk)
begin
    if (sel[1] and not pos)
        out[0] = 1;
    else
        out[0] = 0;
end
);
interface ap_var_inout;
interface ap_var_inout;
interface ap_var_inout;
interface ap_var_inout;
interface ap_var_inout;
interface ap_var_inout;
interface ap_var_inout;
interface ap_var_inout;
interface ap_var_inout;
interface ap
================================================================
example-4: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = in[1:0];
// When sel=0, assign b to out
assign out = !((in[1:0] & (b7 | b6)) != 0);

================================================================
example-5: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out

// This is a 2-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [2:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out

// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [3:0] in,
output reg [3:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign a to out

// This is a 2-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder(
================================================================
example-6: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ ( b && ( in | pos ) )
begin
  pos = pos ? pos : 0;
end
);

// This is a 2-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder_2( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ ( b && ( in | pos ) )
begin
  pos = pos ? pos : 0;
end
);

// This is a 4-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder_4( 
input [4:0] in,
output reg [3:0] pos ); 
// When sel=1, assign b to out
always @ ( b && ( in |
================================================================
example-7: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = ( in[1:0] << 5) | (in[2:0] << 4) | (in[3:0] << 3) | (in[4:0] << 2) | (in[5:0] << 1) | (in[6:0] << 0) ;

================================================================
example-8: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
wire b;

always @(posedge clk)
  if (pos[2:0] == 3'b0000)
  {
    b = in[0];
  }
  else
  {
    b = in[1];
  }

always @(posedge clk)
  if (in[2] == 1)
  {
    if (pos[2:0] == 3'b0000)
    {
      pos[2:0] = 3'b0010;
    }
    else
    {
      pos[2:0] = 3'b0100;
    }
    pos[0] = b;
  }
  else
  {
    if (pos[2:0] == 3'b0000)
    {
      pos[2:0] = 3'b0100;
    }
    else
================================================================
example-9: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos[1:0] = ((in & (1 << 2)) != 0) ? pos[1:0] | 1 : pos[1:0] & ~1;
// When sel=0, assign b to out
assign pos[1:0] = ((in & (1 << 1)) != 0) ? pos[1:0] | 1 : pos[1:0] & ~1;
// When sel=1, assign b to out
assign pos[1:0] = ((in & (1 << 0)) != 0) ? pos[1:0] | 1 : pos[1:0] & ~1;

================================================================
example-10: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
// When sel=0, assign c to out
assign pos = (in[0] & 1) | ((in[1] & 1) << 1) | ((~in[1] & 1) << 2) | ((~in[0] & 1) << 3);

================================================================
example-11: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @( posedge in )
  pos = in[1];

================================================================
example-12: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = (in & (1 << 1)) >> 1; 
// When sel=2, assign b to out
assign pos = (in & (1 << 2)) >> 2; 
// When sel=3, assign b to out
assign pos = (in & (1 << 3)) >> 3; 
// When sel=4, assign b to out
assign pos = (in & (1 << 4)) >> 4; 
// When sel=5, assign b to out
assign pos = (in & (1 << 5)) >> 5; 
// When sel=6, assign b to out
assign pos = (in & (1 << 6)) >> 6; 
// When sel=7, assign b to out
assign pos = (in & (1 << 7)) >> 7; 
// This is a 3-bit priority enc
================================================================
example-13: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
reg output [1:0] b;

reg [7:0] p;

// When sel=0, decode the least-signficant bit
reg [7:0] sel;

always @(posedge clk) begin
    if (in[0] != in[1])
    begin
        sel = 0;
        b = 0;
        p = in[0];
    end
    else
    begin
        sel = ~in[0] & in[1];
        b = ~in[sel];
        p = ~in[sel] & ~in[0];
    end
end

always @(posedge clk) begin
    pos[0] = p;
    pos[1] = p >> 1;
    pos[2] = p >> 2;
end

always @(posedge clk)
================================================================
example-14: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @(posedge in or posedge not in)
  begin
    if (in[0])
      pos[1] = 5; 
    else if (in[1])
      pos[1] = 4; 
    else
      pos[1] = 3; 
  end


================================================================
example-15: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (not in[0]) begin
	pos[1] = in[0] ? (pos[1] | 1) : pos[1];
end
);

// This is a 3-bit priority decoder. If none of the input bits are high, output is zero.
module priority_decoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
always @ (not in[0]) begin
	pos[0] = in[0] ? (pos[0] | 1) : pos[0];
end
);
*/

================================================================
example-16: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos[1:0] = ( (in[0] << 2) | (in[1] << 1) | (in[2] << 0) );

================================================================
example-17: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = ((in[2] || in[1]) && !in[0]) ? pos = 1 : pos = 0; 
// Constraint for in[2]=1, in[1]=1, in[0]=0
always @(posedge clk) 
begin 
  if( (in[2] && in[1] && !in[0]) || 
      (pos && !in[2] && !in[1] && !in[0]))
    pos = 0; 
  else if (!pos && !in[2] && !in[1] && !in[0])
    pos = 1; 
  output reg [1:0] pos_out; 
  pos_out <= pos; 
end
);

================================================================
example-18: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos = (in[1] | in[0]) ? (in[1] & in[0]) : in[0]; 

================================================================
example-19: 
// This is a 3-bit priority encoder. If none of the input bits are high, output is zero.
module priority_encoder( 
input [2:0] in,
output reg [1:0] pos ); 
// When sel=1, assign b to out
assign pos[4:0] = (in[0] << 2) | in[1];

/*
 * Copyright (C) 2010 Texas Instruments Incorporated - http://www.ti.com/
 */
 
 
 
 
int main()
{
    priority_encoder o;
    //o = 1;
    //o = 2;
    o = 3;
    
    o.write(1);
    o.write(2);
    o.write(3);
    
    //o.read();
    //o.read();
    //o.read();
    
    //o.write(0);
    
    return 0;
}

================================================================
